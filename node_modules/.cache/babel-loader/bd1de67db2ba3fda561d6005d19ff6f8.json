{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { assert, isNumber, isString, isUndefined, stringify } from '@polkadot/util';\n\nfunction formatErrorData(data) {\n  if (isUndefined(data)) {\n    return '';\n  }\n\n  var formatted = \": \".concat(isString(data) ? data.replace(/Error\\(\"/g, '').replace(/\\(\"/g, '(').replace(/\"\\)/g, ')').replace(/\\(/g, ', ').replace(/\\)/g, '') : stringify(data)); // We need some sort of cut-off here since these can be very large and\n  // very nested, pick a number and trim the result display to it\n\n  return formatted.length <= 256 ? formatted : \"\".concat(formatted.substr(0, 255), \"\\u2026\");\n}\n/** @internal */\n\n\nvar _id = /*#__PURE__*/_classPrivateFieldLooseKey(\"id\");\n\nexport var RpcCoder = /*#__PURE__*/function () {\n  function RpcCoder() {\n    _classCallCheck(this, RpcCoder);\n\n    Object.defineProperty(this, _id, {\n      writable: true,\n      value: 0\n    });\n  }\n\n  _createClass(RpcCoder, [{\n    key: \"decodeResponse\",\n    value: function decodeResponse(response) {\n      assert(response, 'Empty response object received');\n      assert(response.jsonrpc === '2.0', 'Invalid jsonrpc field in decoded object');\n      var isSubscription = !isUndefined(response.params) && !isUndefined(response.method);\n      assert(isNumber(response.id) || isSubscription && (isNumber(response.params.subscription) || isString(response.params.subscription)), 'Invalid id field in decoded object');\n\n      this._checkError(response.error);\n\n      assert(!isUndefined(response.result) || isSubscription, 'No result found in JsonRpc response');\n\n      if (isSubscription) {\n        this._checkError(response.params.error);\n\n        return response.params.result;\n      }\n\n      return response.result;\n    }\n  }, {\n    key: \"encodeJson\",\n    value: function encodeJson(method, params) {\n      return stringify(this.encodeObject(method, params));\n    }\n  }, {\n    key: \"encodeObject\",\n    value: function encodeObject(method, params) {\n      return {\n        id: ++_classPrivateFieldLooseBase(this, _id)[_id],\n        jsonrpc: '2.0',\n        method: method,\n        params: params\n      };\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return _classPrivateFieldLooseBase(this, _id)[_id];\n    }\n  }, {\n    key: \"_checkError\",\n    value: function _checkError(error) {\n      if (error) {\n        var code = error.code,\n            data = error.data,\n            message = error.message;\n        throw new Error(\"\".concat(code, \": \").concat(message).concat(formatErrorData(data)));\n      }\n    }\n  }]);\n\n  return RpcCoder;\n}();","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/rpc-provider/coder/index.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","assert","isNumber","isString","isUndefined","stringify","formatErrorData","data","formatted","replace","length","substr","_id","RpcCoder","Object","defineProperty","writable","value","response","jsonrpc","isSubscription","params","method","id","subscription","_checkError","error","result","encodeObject","code","message","Error"],"mappings":"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","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isNumber, isString, isUndefined, stringify } from '@polkadot/util';\n\nfunction formatErrorData(data) {\n  if (isUndefined(data)) {\n    return '';\n  }\n\n  const formatted = `: ${isString(data) ? data.replace(/Error\\(\"/g, '').replace(/\\(\"/g, '(').replace(/\"\\)/g, ')').replace(/\\(/g, ', ').replace(/\\)/g, '') : stringify(data)}`; // We need some sort of cut-off here since these can be very large and\n  // very nested, pick a number and trim the result display to it\n\n  return formatted.length <= 256 ? formatted : `${formatted.substr(0, 255)}â€¦`;\n}\n/** @internal */\n\n\nvar _id = /*#__PURE__*/_classPrivateFieldLooseKey(\"id\");\n\nexport class RpcCoder {\n  constructor() {\n    Object.defineProperty(this, _id, {\n      writable: true,\n      value: 0\n    });\n  }\n\n  decodeResponse(response) {\n    assert(response, 'Empty response object received');\n    assert(response.jsonrpc === '2.0', 'Invalid jsonrpc field in decoded object');\n    const isSubscription = !isUndefined(response.params) && !isUndefined(response.method);\n    assert(isNumber(response.id) || isSubscription && (isNumber(response.params.subscription) || isString(response.params.subscription)), 'Invalid id field in decoded object');\n\n    this._checkError(response.error);\n\n    assert(!isUndefined(response.result) || isSubscription, 'No result found in JsonRpc response');\n\n    if (isSubscription) {\n      this._checkError(response.params.error);\n\n      return response.params.result;\n    }\n\n    return response.result;\n  }\n\n  encodeJson(method, params) {\n    return stringify(this.encodeObject(method, params));\n  }\n\n  encodeObject(method, params) {\n    return {\n      id: ++_classPrivateFieldLooseBase(this, _id)[_id],\n      jsonrpc: '2.0',\n      method,\n      params\n    };\n  }\n\n  getId() {\n    return _classPrivateFieldLooseBase(this, _id)[_id];\n  }\n\n  _checkError(error) {\n    if (error) {\n      const {\n        code,\n        data,\n        message\n      } = error;\n      throw new Error(`${code}: ${message}${formatErrorData(data)}`);\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}