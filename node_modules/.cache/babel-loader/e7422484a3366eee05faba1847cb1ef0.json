{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function approvalFlagsToBools(flags) {\n  var bools = [];\n  flags.forEach(function (flag) {\n    var str = flag.toString(2); // read from lowest bit to highest\n\n    var _iterator = _createForOfIteratorHelper(str.split('').reverse()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var bit = _step.value;\n        bools.push(!!parseInt(bit, 10));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }); // slice off trailing \"false\" values, as in substrate\n\n  var lastApproval = bools.lastIndexOf(true);\n  return lastApproval >= 0 ? bools.slice(0, lastApproval + 1) : [];\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/util/approvalFlagsToBools.js"],"names":["approvalFlagsToBools","flags","bools","forEach","flag","str","toString","split","reverse","bit","push","parseInt","lastApproval","lastIndexOf","slice"],"mappings":";AAAA;AACA;;AAEA;AACA,OAAO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,MAAMC,KAAK,GAAG,EAAd;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,QAAMC,GAAG,GAAGD,IAAI,CAACE,QAAL,CAAc,CAAd,CAAZ,CADoB,CACU;;AADV,+CAGFD,GAAG,CAACE,KAAJ,CAAU,EAAV,EAAcC,OAAd,EAHE;AAAA;;AAAA;AAGpB,0DAA2C;AAAA,YAAhCC,GAAgC;AACzCP,QAAAA,KAAK,CAACQ,IAAN,CAAW,CAAC,CAACC,QAAQ,CAACF,GAAD,EAAM,EAAN,CAArB;AACD;AALmB;AAAA;AAAA;AAAA;AAAA;AAMrB,GAND,EAF0C,CAQtC;;AAEJ,MAAMG,YAAY,GAAGV,KAAK,CAACW,WAAN,CAAkB,IAAlB,CAArB;AACA,SAAOD,YAAY,IAAI,CAAhB,GAAoBV,KAAK,CAACY,KAAN,CAAY,CAAZ,EAAeF,YAAY,GAAG,CAA9B,CAApB,GAAuD,EAA9D;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function approvalFlagsToBools(flags) {\n  const bools = [];\n  flags.forEach(flag => {\n    const str = flag.toString(2); // read from lowest bit to highest\n\n    for (const bit of str.split('').reverse()) {\n      bools.push(!!parseInt(bit, 10));\n    }\n  }); // slice off trailing \"false\" values, as in substrate\n\n  const lastApproval = bools.lastIndexOf(true);\n  return lastApproval >= 0 ? bools.slice(0, lastApproval + 1) : [];\n}"]},"metadata":{},"sourceType":"module"}