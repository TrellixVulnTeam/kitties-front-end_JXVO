{"ast":null,"code":"import _slicedToArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Input,Grid}from'semantic-ui-react';import{TxButton}from'./substrate-lib/components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Main(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),proposal=_useState4[0],setProposal=_useState4[1];var accountPair=props.accountPair;var bufferToHex=function bufferToHex(buffer){return Array.from(new Uint8Array(buffer)).map(function(b){return b.toString(16).padStart(2,'0');}).join('');};var handleFileChosen=function handleFileChosen(file){var fileReader=new FileReader();fileReader.onloadend=function(e){var content=bufferToHex(fileReader.result);setProposal(\"0x\".concat(content));};fileReader.readAsArrayBuffer(file);};return/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Upgrade Runtime\"}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Input,{type:\"file\",id:\"file\",label:\"Wasm File\",accept:\".wasm\",onChange:function onChange(e){return handleFileChosen(e.target.files[0]);}})}),/*#__PURE__*/_jsx(Form.Field,{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(TxButton,{accountPair:accountPair,label:\"Upgrade\",type:\"UNCHECKED-SUDO-TX\",setStatus:setStatus,attrs:{palletRpc:'system',callable:'setCode',inputParams:[proposal],paramFields:[true]}})}),/*#__PURE__*/_jsx(\"div\",{style:{overflowWrap:'break-word'},children:status})]})]});}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/src/Upgrade.js"],"names":["React","useState","Form","Input","Grid","TxButton","Main","props","status","setStatus","proposal","setProposal","accountPair","bufferToHex","buffer","Array","from","Uint8Array","map","b","toString","padStart","join","handleFileChosen","file","fileReader","FileReader","onloadend","e","content","result","readAsArrayBuffer","target","files","textAlign","palletRpc","callable","inputParams","paramFields","overflowWrap"],"mappings":"wMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,IAAtB,KAAkC,mBAAlC,CACA,OAASC,QAAT,KAAyB,4BAAzB,C,wFAEA,cAAe,SAASC,CAAAA,IAAT,CAAeC,KAAf,CAAsB,CACnC,cAA4BN,QAAQ,CAAC,EAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACA,eAAgCR,QAAQ,CAAC,EAAD,CAAxC,yCAAOS,QAAP,eAAiBC,WAAjB,eACA,GAAQC,CAAAA,WAAR,CAAwBL,KAAxB,CAAQK,WAAR,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,MAAM,CAAI,CAC5B,MAAOC,CAAAA,KAAK,CAACC,IAAN,CAAW,GAAIC,CAAAA,UAAJ,CAAeH,MAAf,CAAX,EACJI,GADI,CACA,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,CAAW,EAAX,EAAeC,QAAf,CAAwB,CAAxB,CAA2B,GAA3B,CAAJ,EADD,EAEJC,IAFI,CAEC,EAFD,CAAP,CAGD,CAJD,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,IAAI,CAAI,CAC/B,GAAMC,CAAAA,UAAU,CAAG,GAAIC,CAAAA,UAAJ,EAAnB,CACAD,UAAU,CAACE,SAAX,CAAuB,SAAAC,CAAC,CAAI,CAC1B,GAAMC,CAAAA,OAAO,CAAGhB,WAAW,CAACY,UAAU,CAACK,MAAZ,CAA3B,CACAnB,WAAW,aAAMkB,OAAN,EAAX,CACD,CAHD,CAKAJ,UAAU,CAACM,iBAAX,CAA6BP,IAA7B,EACD,CARD,CAUA,mBACE,MAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,wBACE,uCADF,cAEE,MAAC,IAAD,yBACE,KAAC,IAAD,CAAM,KAAN,wBACE,KAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,MAFL,CAGE,KAAK,CAAC,WAHR,CAIE,MAAM,CAAC,OAJT,CAKE,QAAQ,CAAE,kBAAAI,CAAC,QAAIL,CAAAA,gBAAgB,CAACK,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAApB,EALb,EADF,EADF,cAUE,KAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAnB,uBACE,KAAC,QAAD,EACE,WAAW,CAAEtB,WADf,CAEE,KAAK,CAAC,SAFR,CAGE,IAAI,CAAC,mBAHP,CAIE,SAAS,CAAEH,SAJb,CAKE,KAAK,CAAE,CACL0B,SAAS,CAAE,QADN,CAELC,QAAQ,CAAE,SAFL,CAGLC,WAAW,CAAE,CAAC3B,QAAD,CAHR,CAIL4B,WAAW,CAAE,CAAC,IAAD,CAJR,CALT,EADF,EAVF,cAwBE,YAAK,KAAK,CAAE,CAAEC,YAAY,CAAE,YAAhB,CAAZ,UAA6C/B,MAA7C,EAxBF,GAFF,GADF,CA+BD","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Input, Grid } from 'semantic-ui-react'\nimport { TxButton } from './substrate-lib/components'\n\nexport default function Main (props) {\n  const [status, setStatus] = useState('')\n  const [proposal, setProposal] = useState({})\n  const { accountPair } = props\n\n  const bufferToHex = buffer => {\n    return Array.from(new Uint8Array(buffer))\n      .map(b => b.toString(16).padStart(2, '0'))\n      .join('')\n  }\n\n  const handleFileChosen = file => {\n    const fileReader = new FileReader()\n    fileReader.onloadend = e => {\n      const content = bufferToHex(fileReader.result)\n      setProposal(`0x${content}`)\n    }\n\n    fileReader.readAsArrayBuffer(file)\n  }\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Upgrade Runtime</h1>\n      <Form>\n        <Form.Field>\n          <Input\n            type='file'\n            id='file'\n            label='Wasm File'\n            accept='.wasm'\n            onChange={e => handleFileChosen(e.target.files[0])}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Upgrade'\n            type='UNCHECKED-SUDO-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'system',\n              callable: 'setCode',\n              inputParams: [proposal],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}