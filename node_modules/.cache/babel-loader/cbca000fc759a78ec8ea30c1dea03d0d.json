{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { deriveNoopCache } from \"./cacheImpl.js\";\nvar CHACHE_EXPIRY = 7 * (24 * 60) * (60 * 1000);\nvar deriveCache;\n\nfunction wrapCache(keyStart, cache) {\n  return {\n    del: function del(partial) {\n      return cache.del(\"\".concat(keyStart).concat(partial));\n    },\n    forEach: cache.forEach,\n    get: function get(partial) {\n      var key = \"\".concat(keyStart).concat(partial);\n      var cached = cache.get(key);\n\n      if (cached) {\n        cached.x = Date.now();\n        cache.set(key, cached);\n        return cached.v;\n      }\n\n      return undefined;\n    },\n    set: function set(partial, v) {\n      cache.set(\"\".concat(keyStart).concat(partial), {\n        v: v,\n        x: Date.now()\n      });\n    }\n  };\n}\n\nfunction clearCache(cache) {\n  // clear all expired values\n  var now = Date.now();\n  var all = [];\n  cache.forEach(function (key, _ref) {\n    var x = _ref.x;\n    now - x > CHACHE_EXPIRY && all.push(key);\n  }); // don't do delete inside loop, just in-case\n\n  all.forEach(function (key) {\n    return cache.del(key);\n  });\n}\n\nexport function setDeriveCache() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var cache = arguments.length > 1 ? arguments[1] : undefined;\n  deriveCache = cache ? wrapCache(\"derive:\".concat(prefix, \":\"), cache) : deriveNoopCache;\n\n  if (cache) {\n    clearCache(cache);\n  }\n}\nsetDeriveCache();\nexport { deriveCache };","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/util/cache.js"],"names":["deriveNoopCache","CHACHE_EXPIRY","deriveCache","wrapCache","keyStart","cache","del","partial","forEach","get","key","cached","x","Date","now","set","v","undefined","clearCache","all","push","setDeriveCache","prefix"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,gBAAhC;AACA,IAAMC,aAAa,GAAG,KAAK,KAAK,EAAV,KAAiB,KAAK,IAAtB,CAAtB;AACA,IAAIC,WAAJ;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,KAA7B,EAAoC;AAClC,SAAO;AACLC,IAAAA,GAAG,EAAE,aAAAC,OAAO;AAAA,aAAIF,KAAK,CAACC,GAAN,WAAaF,QAAb,SAAwBG,OAAxB,EAAJ;AAAA,KADP;AAELC,IAAAA,OAAO,EAAEH,KAAK,CAACG,OAFV;AAGLC,IAAAA,GAAG,EAAE,aAAAF,OAAO,EAAI;AACd,UAAMG,GAAG,aAAMN,QAAN,SAAiBG,OAAjB,CAAT;AACA,UAAMI,MAAM,GAAGN,KAAK,CAACI,GAAN,CAAUC,GAAV,CAAf;;AAEA,UAAIC,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACC,CAAP,GAAWC,IAAI,CAACC,GAAL,EAAX;AACAT,QAAAA,KAAK,CAACU,GAAN,CAAUL,GAAV,EAAeC,MAAf;AACA,eAAOA,MAAM,CAACK,CAAd;AACD;;AAED,aAAOC,SAAP;AACD,KAdI;AAeLF,IAAAA,GAAG,EAAE,aAACR,OAAD,EAAUS,CAAV,EAAgB;AACnBX,MAAAA,KAAK,CAACU,GAAN,WAAaX,QAAb,SAAwBG,OAAxB,GAAmC;AACjCS,QAAAA,CAAC,EAADA,CADiC;AAEjCJ,QAAAA,CAAC,EAAEC,IAAI,CAACC,GAAL;AAF8B,OAAnC;AAID;AApBI,GAAP;AAsBD;;AAED,SAASI,UAAT,CAAoBb,KAApB,EAA2B;AACzB;AACA,MAAMS,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,MAAMK,GAAG,GAAG,EAAZ;AACAd,EAAAA,KAAK,CAACG,OAAN,CAAc,UAACE,GAAD,QAER;AAAA,QADJE,CACI,QADJA,CACI;AACJE,IAAAA,GAAG,GAAGF,CAAN,GAAUX,aAAV,IAA2BkB,GAAG,CAACC,IAAJ,CAASV,GAAT,CAA3B;AACD,GAJD,EAJyB,CAQrB;;AAEJS,EAAAA,GAAG,CAACX,OAAJ,CAAY,UAAAE,GAAG;AAAA,WAAIL,KAAK,CAACC,GAAN,CAAUI,GAAV,CAAJ;AAAA,GAAf;AACD;;AAED,OAAO,SAASW,cAAT,GAA4C;AAAA,MAApBC,MAAoB,uEAAX,EAAW;AAAA,MAAPjB,KAAO;AACjDH,EAAAA,WAAW,GAAGG,KAAK,GAAGF,SAAS,kBAAWmB,MAAX,QAAsBjB,KAAtB,CAAZ,GAA2CL,eAA9D;;AAEA,MAAIK,KAAJ,EAAW;AACTa,IAAAA,UAAU,CAACb,KAAD,CAAV;AACD;AACF;AACDgB,cAAc;AACd,SAASnB,WAAT","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { deriveNoopCache } from \"./cacheImpl.js\";\nconst CHACHE_EXPIRY = 7 * (24 * 60) * (60 * 1000);\nlet deriveCache;\n\nfunction wrapCache(keyStart, cache) {\n  return {\n    del: partial => cache.del(`${keyStart}${partial}`),\n    forEach: cache.forEach,\n    get: partial => {\n      const key = `${keyStart}${partial}`;\n      const cached = cache.get(key);\n\n      if (cached) {\n        cached.x = Date.now();\n        cache.set(key, cached);\n        return cached.v;\n      }\n\n      return undefined;\n    },\n    set: (partial, v) => {\n      cache.set(`${keyStart}${partial}`, {\n        v,\n        x: Date.now()\n      });\n    }\n  };\n}\n\nfunction clearCache(cache) {\n  // clear all expired values\n  const now = Date.now();\n  const all = [];\n  cache.forEach((key, {\n    x\n  }) => {\n    now - x > CHACHE_EXPIRY && all.push(key);\n  }); // don't do delete inside loop, just in-case\n\n  all.forEach(key => cache.del(key));\n}\n\nexport function setDeriveCache(prefix = '', cache) {\n  deriveCache = cache ? wrapCache(`derive:${prefix}:`, cache) : deriveNoopCache;\n\n  if (cache) {\n    clearCache(cache);\n  }\n}\nsetDeriveCache();\nexport { deriveCache };"]},"metadata":{},"sourceType":"module"}