{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n/**\n * @description Get the candidate info for a society\n */\n\nexport function candidates(instanceId, api) {\n  return memo(instanceId, function () {\n    return api.query.society.candidates().pipe(switchMap(function (candidates) {\n      return combineLatest([of(candidates), api.query.society.suspendedCandidates.multi(candidates.map(function (_ref) {\n        var who = _ref.who;\n        return who;\n      }))]);\n    }), map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          candidates = _ref3[0],\n          suspended = _ref3[1];\n\n      return candidates.map(function (_ref4, index) {\n        var kind = _ref4.kind,\n            value = _ref4.value,\n            who = _ref4.who;\n        return {\n          accountId: who,\n          isSuspended: suspended[index].isSome,\n          kind: kind,\n          value: value\n        };\n      });\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/society/candidates.js"],"names":["combineLatest","map","of","switchMap","memo","candidates","instanceId","api","query","society","pipe","suspendedCandidates","multi","who","suspended","index","kind","value","accountId","isSuspended","isSome"],"mappings":";AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,EAA6BC,EAA7B,EAAiCC,SAAjC,QAAkD,MAAlD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,GAAhC,EAAqC;AAC1C,SAAOH,IAAI,CAACE,UAAD,EAAa;AAAA,WAAMC,GAAG,CAACC,KAAJ,CAAUC,OAAV,CAAkBJ,UAAlB,GAA+BK,IAA/B,CAAoCP,SAAS,CAAC,UAAAE,UAAU;AAAA,aAAIL,aAAa,CAAC,CAACE,EAAE,CAACG,UAAD,CAAH,EAAiBE,GAAG,CAACC,KAAJ,CAAUC,OAAV,CAAkBE,mBAAlB,CAAsCC,KAAtC,CAA4CP,UAAU,CAACJ,GAAX,CAAe;AAAA,YAClLY,GADkL,QAClLA,GADkL;AAAA,eAE9KA,GAF8K;AAAA,OAAf,CAA5C,CAAjB,CAAD,CAAjB;AAAA,KAAX,CAA7C,EAEdZ,GAAG,CAAC;AAAA;AAAA,UAAEI,UAAF;AAAA,UAAcS,SAAd;;AAAA,aAA6BT,UAAU,CAACJ,GAAX,CAAe,iBAI7Dc,KAJ6D;AAAA,YAC9DC,IAD8D,SAC9DA,IAD8D;AAAA,YAE9DC,KAF8D,SAE9DA,KAF8D;AAAA,YAG9DJ,GAH8D,SAG9DA,GAH8D;AAAA,eAIlD;AACZK,UAAAA,SAAS,EAAEL,GADC;AAEZM,UAAAA,WAAW,EAAEL,SAAS,CAACC,KAAD,CAAT,CAAiBK,MAFlB;AAGZJ,UAAAA,IAAI,EAAJA,IAHY;AAIZC,UAAAA,KAAK,EAALA;AAJY,SAJkD;AAAA,OAAf,CAA7B;AAAA,KAAD,CAFW,CAAN;AAAA,GAAb,CAAX;AAYD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n\n/**\n * @description Get the candidate info for a society\n */\nexport function candidates(instanceId, api) {\n  return memo(instanceId, () => api.query.society.candidates().pipe(switchMap(candidates => combineLatest([of(candidates), api.query.society.suspendedCandidates.multi(candidates.map(({\n    who\n  }) => who))])), map(([candidates, suspended]) => candidates.map(({\n    kind,\n    value,\n    who\n  }, index) => ({\n    accountId: who,\n    isSuspended: suspended[index].isSome,\n    kind,\n    value\n  })))));\n}"]},"metadata":{},"sourceType":"module"}