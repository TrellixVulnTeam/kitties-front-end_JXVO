{"ast":null,"code":"import _regeneratorRuntime from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable camelcase */\n\n\nimport EventEmitter from 'eventemitter3';\nimport { assert, isChildClass, isNull, isUndefined, logger } from '@polkadot/util';\nimport { xglobal } from '@polkadot/x-global';\nimport { WebSocket } from '@polkadot/x-ws';\nimport { RpcCoder } from \"../coder/index.js\";\nimport defaults from \"../defaults.js\";\nimport { getWSErrorString } from \"./errors.js\";\nvar ALIASES = {\n  chain_finalisedHead: 'chain_finalizedHead',\n  chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',\n  chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'\n};\nvar RETRY_DELAY = 2500;\nvar l = logger('api-ws');\n\nfunction eraseRecord(record, cb) {\n  Object.keys(record).forEach(function (key) {\n    if (cb) {\n      cb(record[key]);\n    }\n\n    delete record[key];\n  });\n}\n/**\n * # @polkadot/rpc-provider/ws\n *\n * @name WsProvider\n *\n * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import { WsProvider } from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const api = new Api(provider);\n * ```\n *\n * @see [[HttpProvider]]\n */\n\n\nvar _coder = /*#__PURE__*/_classPrivateFieldLooseKey(\"coder\");\n\nvar _endpoints = /*#__PURE__*/_classPrivateFieldLooseKey(\"endpoints\");\n\nvar _headers = /*#__PURE__*/_classPrivateFieldLooseKey(\"headers\");\n\nvar _eventemitter = /*#__PURE__*/_classPrivateFieldLooseKey(\"eventemitter\");\n\nvar _handlers = /*#__PURE__*/_classPrivateFieldLooseKey(\"handlers\");\n\nvar _isReadyPromise = /*#__PURE__*/_classPrivateFieldLooseKey(\"isReadyPromise\");\n\nvar _waitingForId = /*#__PURE__*/_classPrivateFieldLooseKey(\"waitingForId\");\n\nvar _autoConnectMs = /*#__PURE__*/_classPrivateFieldLooseKey(\"autoConnectMs\");\n\nvar _endpointIndex = /*#__PURE__*/_classPrivateFieldLooseKey(\"endpointIndex\");\n\nvar _isConnected = /*#__PURE__*/_classPrivateFieldLooseKey(\"isConnected\");\n\nvar _subscriptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"subscriptions\");\n\nvar _websocket = /*#__PURE__*/_classPrivateFieldLooseKey(\"websocket\");\n\nvar _emit = /*#__PURE__*/_classPrivateFieldLooseKey(\"emit\");\n\nvar _onSocketClose = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketClose\");\n\nvar _onSocketError = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketError\");\n\nvar _onSocketMessage = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketMessage\");\n\nvar _onSocketMessageResult = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketMessageResult\");\n\nvar _onSocketMessageSubscribe = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketMessageSubscribe\");\n\nvar _onSocketOpen = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketOpen\");\n\nvar _resubscribe = /*#__PURE__*/_classPrivateFieldLooseKey(\"resubscribe\");\n\nexport var WsProvider = /*#__PURE__*/function () {\n  /**\n   * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.\n   * @param {boolean} autoConnect Whether to connect automatically or not.\n   */\n  function WsProvider() {\n    var _this = this;\n\n    var endpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.WS_URL;\n    var autoConnectMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : RETRY_DELAY;\n    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, WsProvider);\n\n    Object.defineProperty(this, _coder, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpoints, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _headers, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _eventemitter, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _handlers, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _isReadyPromise, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _waitingForId, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _autoConnectMs, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpointIndex, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isConnected, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _subscriptions, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _websocket, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _emit, {\n      writable: true,\n      value: function value(type) {\n        var _classPrivateFieldLoo;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        (_classPrivateFieldLoo = _classPrivateFieldLooseBase(_this, _eventemitter)[_eventemitter]).emit.apply(_classPrivateFieldLoo, [type].concat(args));\n      }\n    });\n    Object.defineProperty(this, _onSocketClose, {\n      writable: true,\n      value: function value(event) {\n        var error = new Error(\"disconnected from \".concat(_classPrivateFieldLooseBase(_this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(_this, _endpointIndex)[_endpointIndex]], \": \").concat(event.code, \":: \").concat(event.reason || getWSErrorString(event.code)));\n\n        if (_classPrivateFieldLooseBase(_this, _autoConnectMs)[_autoConnectMs] > 0) {\n          l.error(error.message);\n        }\n\n        _classPrivateFieldLooseBase(_this, _isConnected)[_isConnected] = false;\n\n        if (_classPrivateFieldLooseBase(_this, _websocket)[_websocket]) {\n          _classPrivateFieldLooseBase(_this, _websocket)[_websocket].onclose = null;\n          _classPrivateFieldLooseBase(_this, _websocket)[_websocket].onerror = null;\n          _classPrivateFieldLooseBase(_this, _websocket)[_websocket].onmessage = null;\n          _classPrivateFieldLooseBase(_this, _websocket)[_websocket].onopen = null;\n          _classPrivateFieldLooseBase(_this, _websocket)[_websocket] = null;\n        }\n\n        _classPrivateFieldLooseBase(_this, _emit)[_emit]('disconnected'); // reject all hanging requests\n\n\n        eraseRecord(_classPrivateFieldLooseBase(_this, _handlers)[_handlers], function (h) {\n          return h.callback(error, undefined);\n        });\n        eraseRecord(_classPrivateFieldLooseBase(_this, _waitingForId)[_waitingForId]);\n\n        if (_classPrivateFieldLooseBase(_this, _autoConnectMs)[_autoConnectMs] > 0) {\n          setTimeout(function () {\n            _this.connectWithRetry().catch(function () {// does not throw\n            });\n          }, _classPrivateFieldLooseBase(_this, _autoConnectMs)[_autoConnectMs]);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketError, {\n      writable: true,\n      value: function value(error) {\n        l.debug(function () {\n          return ['socket error', error];\n        });\n\n        _classPrivateFieldLooseBase(_this, _emit)[_emit]('error', error);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessage, {\n      writable: true,\n      value: function value(message) {\n        l.debug(function () {\n          return ['received', message.data];\n        });\n        var response = JSON.parse(message.data);\n        return isUndefined(response.method) ? _classPrivateFieldLooseBase(_this, _onSocketMessageResult)[_onSocketMessageResult](response) : _classPrivateFieldLooseBase(_this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](response);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageResult, {\n      writable: true,\n      value: function value(response) {\n        var handler = _classPrivateFieldLooseBase(_this, _handlers)[_handlers][response.id];\n\n        if (!handler) {\n          l.debug(function () {\n            return \"Unable to find handler for id=\".concat(response.id);\n          });\n          return;\n        }\n\n        try {\n          var method = handler.method,\n              params = handler.params,\n              subscription = handler.subscription;\n\n          var result = _classPrivateFieldLooseBase(_this, _coder)[_coder].decodeResponse(response); // first send the result - in case of subs, we may have an update\n          // immediately if we have some queued results already\n\n\n          handler.callback(null, result);\n\n          if (subscription) {\n            var subId = \"\".concat(subscription.type, \"::\").concat(result);\n            _classPrivateFieldLooseBase(_this, _subscriptions)[_subscriptions][subId] = _objectSpread(_objectSpread({}, subscription), {}, {\n              method: method,\n              params: params\n            }); // if we have a result waiting for this subscription already\n\n            if (_classPrivateFieldLooseBase(_this, _waitingForId)[_waitingForId][subId]) {\n              _classPrivateFieldLooseBase(_this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](_classPrivateFieldLooseBase(_this, _waitingForId)[_waitingForId][subId]);\n            }\n          }\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n\n        delete _classPrivateFieldLooseBase(_this, _handlers)[_handlers][response.id];\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageSubscribe, {\n      writable: true,\n      value: function value(response) {\n        var method = ALIASES[response.method] || response.method || 'invalid';\n        var subId = \"\".concat(method, \"::\").concat(response.params.subscription);\n\n        var handler = _classPrivateFieldLooseBase(_this, _subscriptions)[_subscriptions][subId];\n\n        if (!handler) {\n          // store the JSON, we could have out-of-order subid coming in\n          _classPrivateFieldLooseBase(_this, _waitingForId)[_waitingForId][subId] = response;\n          l.debug(function () {\n            return \"Unable to find handler for subscription=\".concat(subId);\n          });\n          return;\n        } // housekeeping\n\n\n        delete _classPrivateFieldLooseBase(_this, _waitingForId)[_waitingForId][subId];\n\n        try {\n          var result = _classPrivateFieldLooseBase(_this, _coder)[_coder].decodeResponse(response);\n\n          handler.callback(null, result);\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketOpen, {\n      writable: true,\n      value: function value() {\n        assert(!isNull(_classPrivateFieldLooseBase(_this, _websocket)[_websocket]), 'WebSocket cannot be null in onOpen');\n        l.debug(function () {\n          return ['connected to', _classPrivateFieldLooseBase(_this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(_this, _endpointIndex)[_endpointIndex]]];\n        });\n        _classPrivateFieldLooseBase(_this, _isConnected)[_isConnected] = true;\n\n        _classPrivateFieldLooseBase(_this, _emit)[_emit]('connected');\n\n        _classPrivateFieldLooseBase(_this, _resubscribe)[_resubscribe]();\n\n        return true;\n      }\n    });\n    Object.defineProperty(this, _resubscribe, {\n      writable: true,\n      value: function value() {\n        var subscriptions = _classPrivateFieldLooseBase(_this, _subscriptions)[_subscriptions];\n\n        _classPrivateFieldLooseBase(_this, _subscriptions)[_subscriptions] = {};\n        Promise.all(Object.keys(subscriptions).map( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n            var _subscriptions$id, callback, method, params, type;\n\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _subscriptions$id = subscriptions[id], callback = _subscriptions$id.callback, method = _subscriptions$id.method, params = _subscriptions$id.params, type = _subscriptions$id.type; // only re-create subscriptions which are not in author (only area where\n                    // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'\n                    // are not included (and will not be re-broadcast)\n\n                    if (!type.startsWith('author_')) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\");\n\n                  case 3:\n                    _context.prev = 3;\n                    _context.next = 6;\n                    return _this.subscribe(type, method, params, callback);\n\n                  case 6:\n                    _context.next = 11;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](3);\n                    l.error(_context.t0);\n\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[3, 8]]);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }())).catch(l.error);\n      }\n    });\n    var endpoints = Array.isArray(endpoint) ? endpoint : [endpoint];\n    assert(endpoints.length !== 0, 'WsProvider requires at least one Endpoint');\n    endpoints.forEach(function (endpoint) {\n      assert(/^(wss|ws):\\/\\//.test(endpoint), function () {\n        return \"Endpoint should start with 'ws://', received '\".concat(endpoint, \"'\");\n      });\n    });\n    _classPrivateFieldLooseBase(this, _eventemitter)[_eventemitter] = new EventEmitter();\n    _classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] = autoConnectMs || 0;\n    _classPrivateFieldLooseBase(this, _coder)[_coder] = new RpcCoder();\n    _classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex] = -1;\n    _classPrivateFieldLooseBase(this, _endpoints)[_endpoints] = endpoints;\n    _classPrivateFieldLooseBase(this, _headers)[_headers] = headers;\n    _classPrivateFieldLooseBase(this, _websocket)[_websocket] = null;\n\n    if (autoConnectMs > 0) {\n      this.connectWithRetry().catch(function () {// does not throw\n      });\n    }\n\n    _classPrivateFieldLooseBase(this, _isReadyPromise)[_isReadyPromise] = new Promise(function (resolve) {\n      _classPrivateFieldLooseBase(_this, _eventemitter)[_eventemitter].once('connected', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\n   * @summary `true` when this provider supports subscriptions\n   */\n\n\n  _createClass(WsProvider, [{\n    key: \"hasSubscriptions\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * @summary Whether the node is connected or not.\n     * @return {boolean} true if connected\n     */\n\n  }, {\n    key: \"isConnected\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _isConnected)[_isConnected];\n    }\n    /**\n     * @description Promise that resolves the first time we are connected and loaded\n     */\n\n  }, {\n    key: \"isReady\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _isReadyPromise)[_isReadyPromise];\n    }\n    /**\n     * @description Returns a clone of the object\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new WsProvider(_classPrivateFieldLooseBase(this, _endpoints)[_endpoints]);\n    }\n    /**\n     * @summary Manually connect\n     * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may\n     * connect manually using this method.\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex] = (_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex] + 1) % _classPrivateFieldLooseBase(this, _endpoints)[_endpoints].length;\n                _classPrivateFieldLooseBase(this, _websocket)[_websocket] = typeof xglobal.WebSocket !== 'undefined' && isChildClass(xglobal.WebSocket, WebSocket) ? new WebSocket(_classPrivateFieldLooseBase(this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex]]) // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore - WS may be an instance of w3cwebsocket, which supports headers\n                : new WebSocket(_classPrivateFieldLooseBase(this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex]], undefined, undefined, _classPrivateFieldLooseBase(this, _headers)[_headers], undefined, {\n                  // default: true\n                  fragmentOutgoingMessages: true,\n                  // default: 16K (bump, the Node has issues with too many fragments, e.g. on setCode)\n                  fragmentationThreshold: 256 * 1024,\n                  // default: 8MB (however Polkadot api.query.staking.erasStakers.entries(356) is over that)\n                  maxReceivedMessageSize: 16 * 1024 * 1024\n                });\n                _classPrivateFieldLooseBase(this, _websocket)[_websocket].onclose = _classPrivateFieldLooseBase(this, _onSocketClose)[_onSocketClose];\n                _classPrivateFieldLooseBase(this, _websocket)[_websocket].onerror = _classPrivateFieldLooseBase(this, _onSocketError)[_onSocketError];\n                _classPrivateFieldLooseBase(this, _websocket)[_websocket].onmessage = _classPrivateFieldLooseBase(this, _onSocketMessage)[_onSocketMessage];\n                _classPrivateFieldLooseBase(this, _websocket)[_websocket].onopen = _classPrivateFieldLooseBase(this, _onSocketOpen)[_onSocketOpen];\n                _context2.next = 14;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                l.error(_context2.t0);\n\n                _classPrivateFieldLooseBase(this, _emit)[_emit]('error', _context2.t0);\n\n                throw _context2.t0;\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n    /**\n     * @description Connect, never throwing an error, but rather forcing a retry\n     */\n\n  }, {\n    key: \"connectWithRetry\",\n    value: function () {\n      var _connectWithRetry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(_classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] > 0)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.prev = 1;\n                _context3.next = 4;\n                return this.connect();\n\n              case 4:\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](1);\n                setTimeout(function () {\n                  _this2.connectWithRetry().catch(function () {// does not throw\n                  });\n                }, _classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs]);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 6]]);\n      }));\n\n      function connectWithRetry() {\n        return _connectWithRetry.apply(this, arguments);\n      }\n\n      return connectWithRetry;\n    }()\n    /**\n     * @description Manually disconnect from the connection, clearing auto-connect logic\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // switch off autoConnect, we are in manual mode now\n                _classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] = 0;\n                _context4.prev = 1;\n\n                if (_classPrivateFieldLooseBase(this, _websocket)[_websocket]) {\n                  // 1000 - Normal closure; the connection successfully completed\n                  _classPrivateFieldLooseBase(this, _websocket)[_websocket].close(1000);\n                }\n\n                _context4.next = 10;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](1);\n                l.error(_context4.t0);\n\n                _classPrivateFieldLooseBase(this, _emit)[_emit]('error', _context4.t0);\n\n                throw _context4.t0;\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 5]]);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n    /**\n     * @summary Listens on events after having subscribed using the [[subscribe]] function.\n     * @param  {ProviderInterfaceEmitted} type Event\n     * @param  {ProviderInterfaceEmitCb}  sub  Callback\n     * @return unsubscribe function\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(type, sub) {\n      var _this3 = this;\n\n      _classPrivateFieldLooseBase(this, _eventemitter)[_eventemitter].on(type, sub);\n\n      return function () {\n        _classPrivateFieldLooseBase(_this3, _eventemitter)[_eventemitter].removeListener(type, sub);\n      };\n    }\n    /**\n     * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.\n     * @param method The RPC methods to execute\n     * @param params Encoded parameters as applicable for the method\n     * @param subscription Subscription details (internally used)\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(method, params, subscription) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          assert(_this4.isConnected && !isNull(_classPrivateFieldLooseBase(_this4, _websocket)[_websocket]), 'WebSocket is not connected');\n\n          var json = _classPrivateFieldLooseBase(_this4, _coder)[_coder].encodeJson(method, params);\n\n          var id = _classPrivateFieldLooseBase(_this4, _coder)[_coder].getId();\n\n          var callback = function callback(error, result) {\n            error ? reject(error) : resolve(result);\n          };\n\n          l.debug(function () {\n            return ['calling', method, json];\n          });\n          _classPrivateFieldLooseBase(_this4, _handlers)[_handlers][id] = {\n            callback: callback,\n            method: method,\n            params: params,\n            subscription: subscription\n          };\n\n          _classPrivateFieldLooseBase(_this4, _websocket)[_websocket].send(json);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    /**\n     * @name subscribe\n     * @summary Allows subscribing to a specific event.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * const provider = new WsProvider('ws://127.0.0.1:9944');\n     * const rpc = new Rpc(provider);\n     *\n     * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {\n     *   console.log(values)\n     * }).then((subscriptionId) => {\n     *   console.log('balance changes subscription id: ', subscriptionId)\n     * })\n     * ```\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(type, method, params, callback) {\n      return this.send(method, params, {\n        callback: callback,\n        type: type\n      });\n    }\n    /**\n     * @summary Allows unsubscribing to subscriptions made with [[subscribe]].\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(type, method, id) {\n        var subscription;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                subscription = \"\".concat(type, \"::\").concat(id); // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub\n                // the assigned id now does not match what the API user originally received. It has\n                // a slight complication in solving - since we cannot rely on the send id, but rather\n                // need to find the actual subscription id to map it\n\n                if (!isUndefined(_classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions][subscription])) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                l.debug(function () {\n                  return \"Unable to find active subscription=\".concat(subscription);\n                });\n                return _context5.abrupt(\"return\", false);\n\n              case 4:\n                delete _classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions][subscription];\n                _context5.prev = 5;\n                return _context5.abrupt(\"return\", this.isConnected && !isNull(_classPrivateFieldLooseBase(this, _websocket)[_websocket]) ? this.send(method, [id]) : true);\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](5);\n                return _context5.abrupt(\"return\", false);\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[5, 9]]);\n      }));\n\n      function unsubscribe(_x2, _x3, _x4) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n  }]);\n\n  return WsProvider;\n}();","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/rpc-provider/ws/index.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","EventEmitter","assert","isChildClass","isNull","isUndefined","logger","xglobal","WebSocket","RpcCoder","defaults","getWSErrorString","ALIASES","chain_finalisedHead","chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads","RETRY_DELAY","l","eraseRecord","record","cb","_coder","_endpoints","_headers","_eventemitter","_handlers","_isReadyPromise","_waitingForId","_autoConnectMs","_endpointIndex","_isConnected","_subscriptions","_websocket","_emit","_onSocketClose","_onSocketError","_onSocketMessage","_onSocketMessageResult","_onSocketMessageSubscribe","_onSocketOpen","_resubscribe","WsProvider","endpoint","WS_URL","autoConnectMs","headers","writable","value","type","args","emit","event","error","Error","code","reason","message","onclose","onerror","onmessage","onopen","h","callback","undefined","setTimeout","connectWithRetry","catch","debug","data","response","JSON","parse","method","handler","id","params","subscription","result","decodeResponse","subId","subscriptions","Promise","all","map","startsWith","subscribe","endpoints","Array","isArray","test","resolve","once","fragmentOutgoingMessages","fragmentationThreshold","maxReceivedMessageSize","connect","close","sub","on","removeListener","reject","isConnected","json","encodeJson","getId","send"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable camelcase */\nimport EventEmitter from 'eventemitter3';\nimport { assert, isChildClass, isNull, isUndefined, logger } from '@polkadot/util';\nimport { xglobal } from '@polkadot/x-global';\nimport { WebSocket } from '@polkadot/x-ws';\nimport { RpcCoder } from \"../coder/index.js\";\nimport defaults from \"../defaults.js\";\nimport { getWSErrorString } from \"./errors.js\";\nconst ALIASES = {\n  chain_finalisedHead: 'chain_finalizedHead',\n  chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',\n  chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'\n};\nconst RETRY_DELAY = 2500;\nconst l = logger('api-ws');\n\nfunction eraseRecord(record, cb) {\n  Object.keys(record).forEach(key => {\n    if (cb) {\n      cb(record[key]);\n    }\n\n    delete record[key];\n  });\n}\n/**\n * # @polkadot/rpc-provider/ws\n *\n * @name WsProvider\n *\n * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import { WsProvider } from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const api = new Api(provider);\n * ```\n *\n * @see [[HttpProvider]]\n */\n\n\nvar _coder = /*#__PURE__*/_classPrivateFieldLooseKey(\"coder\");\n\nvar _endpoints = /*#__PURE__*/_classPrivateFieldLooseKey(\"endpoints\");\n\nvar _headers = /*#__PURE__*/_classPrivateFieldLooseKey(\"headers\");\n\nvar _eventemitter = /*#__PURE__*/_classPrivateFieldLooseKey(\"eventemitter\");\n\nvar _handlers = /*#__PURE__*/_classPrivateFieldLooseKey(\"handlers\");\n\nvar _isReadyPromise = /*#__PURE__*/_classPrivateFieldLooseKey(\"isReadyPromise\");\n\nvar _waitingForId = /*#__PURE__*/_classPrivateFieldLooseKey(\"waitingForId\");\n\nvar _autoConnectMs = /*#__PURE__*/_classPrivateFieldLooseKey(\"autoConnectMs\");\n\nvar _endpointIndex = /*#__PURE__*/_classPrivateFieldLooseKey(\"endpointIndex\");\n\nvar _isConnected = /*#__PURE__*/_classPrivateFieldLooseKey(\"isConnected\");\n\nvar _subscriptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"subscriptions\");\n\nvar _websocket = /*#__PURE__*/_classPrivateFieldLooseKey(\"websocket\");\n\nvar _emit = /*#__PURE__*/_classPrivateFieldLooseKey(\"emit\");\n\nvar _onSocketClose = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketClose\");\n\nvar _onSocketError = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketError\");\n\nvar _onSocketMessage = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketMessage\");\n\nvar _onSocketMessageResult = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketMessageResult\");\n\nvar _onSocketMessageSubscribe = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketMessageSubscribe\");\n\nvar _onSocketOpen = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSocketOpen\");\n\nvar _resubscribe = /*#__PURE__*/_classPrivateFieldLooseKey(\"resubscribe\");\n\nexport class WsProvider {\n  /**\n   * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.\n   * @param {boolean} autoConnect Whether to connect automatically or not.\n   */\n  constructor(endpoint = defaults.WS_URL, autoConnectMs = RETRY_DELAY, headers = {}) {\n    Object.defineProperty(this, _coder, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpoints, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _headers, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _eventemitter, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _handlers, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _isReadyPromise, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _waitingForId, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _autoConnectMs, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpointIndex, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isConnected, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _subscriptions, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _websocket, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _emit, {\n      writable: true,\n      value: (type, ...args) => {\n        _classPrivateFieldLooseBase(this, _eventemitter)[_eventemitter].emit(type, ...args);\n      }\n    });\n    Object.defineProperty(this, _onSocketClose, {\n      writable: true,\n      value: event => {\n        const error = new Error(`disconnected from ${_classPrivateFieldLooseBase(this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex]]}: ${event.code}:: ${event.reason || getWSErrorString(event.code)}`);\n\n        if (_classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] > 0) {\n          l.error(error.message);\n        }\n\n        _classPrivateFieldLooseBase(this, _isConnected)[_isConnected] = false;\n\n        if (_classPrivateFieldLooseBase(this, _websocket)[_websocket]) {\n          _classPrivateFieldLooseBase(this, _websocket)[_websocket].onclose = null;\n          _classPrivateFieldLooseBase(this, _websocket)[_websocket].onerror = null;\n          _classPrivateFieldLooseBase(this, _websocket)[_websocket].onmessage = null;\n          _classPrivateFieldLooseBase(this, _websocket)[_websocket].onopen = null;\n          _classPrivateFieldLooseBase(this, _websocket)[_websocket] = null;\n        }\n\n        _classPrivateFieldLooseBase(this, _emit)[_emit]('disconnected'); // reject all hanging requests\n\n\n        eraseRecord(_classPrivateFieldLooseBase(this, _handlers)[_handlers], h => h.callback(error, undefined));\n        eraseRecord(_classPrivateFieldLooseBase(this, _waitingForId)[_waitingForId]);\n\n        if (_classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] > 0) {\n          setTimeout(() => {\n            this.connectWithRetry().catch(() => {// does not throw\n            });\n          }, _classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs]);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketError, {\n      writable: true,\n      value: error => {\n        l.debug(() => ['socket error', error]);\n\n        _classPrivateFieldLooseBase(this, _emit)[_emit]('error', error);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessage, {\n      writable: true,\n      value: message => {\n        l.debug(() => ['received', message.data]);\n        const response = JSON.parse(message.data);\n        return isUndefined(response.method) ? _classPrivateFieldLooseBase(this, _onSocketMessageResult)[_onSocketMessageResult](response) : _classPrivateFieldLooseBase(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](response);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageResult, {\n      writable: true,\n      value: response => {\n        const handler = _classPrivateFieldLooseBase(this, _handlers)[_handlers][response.id];\n\n        if (!handler) {\n          l.debug(() => `Unable to find handler for id=${response.id}`);\n          return;\n        }\n\n        try {\n          const {\n            method,\n            params,\n            subscription\n          } = handler;\n\n          const result = _classPrivateFieldLooseBase(this, _coder)[_coder].decodeResponse(response); // first send the result - in case of subs, we may have an update\n          // immediately if we have some queued results already\n\n\n          handler.callback(null, result);\n\n          if (subscription) {\n            const subId = `${subscription.type}::${result}`;\n            _classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions][subId] = _objectSpread(_objectSpread({}, subscription), {}, {\n              method,\n              params\n            }); // if we have a result waiting for this subscription already\n\n            if (_classPrivateFieldLooseBase(this, _waitingForId)[_waitingForId][subId]) {\n              _classPrivateFieldLooseBase(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](_classPrivateFieldLooseBase(this, _waitingForId)[_waitingForId][subId]);\n            }\n          }\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n\n        delete _classPrivateFieldLooseBase(this, _handlers)[_handlers][response.id];\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageSubscribe, {\n      writable: true,\n      value: response => {\n        const method = ALIASES[response.method] || response.method || 'invalid';\n        const subId = `${method}::${response.params.subscription}`;\n\n        const handler = _classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions][subId];\n\n        if (!handler) {\n          // store the JSON, we could have out-of-order subid coming in\n          _classPrivateFieldLooseBase(this, _waitingForId)[_waitingForId][subId] = response;\n          l.debug(() => `Unable to find handler for subscription=${subId}`);\n          return;\n        } // housekeeping\n\n\n        delete _classPrivateFieldLooseBase(this, _waitingForId)[_waitingForId][subId];\n\n        try {\n          const result = _classPrivateFieldLooseBase(this, _coder)[_coder].decodeResponse(response);\n\n          handler.callback(null, result);\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketOpen, {\n      writable: true,\n      value: () => {\n        assert(!isNull(_classPrivateFieldLooseBase(this, _websocket)[_websocket]), 'WebSocket cannot be null in onOpen');\n        l.debug(() => ['connected to', _classPrivateFieldLooseBase(this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex]]]);\n        _classPrivateFieldLooseBase(this, _isConnected)[_isConnected] = true;\n\n        _classPrivateFieldLooseBase(this, _emit)[_emit]('connected');\n\n        _classPrivateFieldLooseBase(this, _resubscribe)[_resubscribe]();\n\n        return true;\n      }\n    });\n    Object.defineProperty(this, _resubscribe, {\n      writable: true,\n      value: () => {\n        const subscriptions = _classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions];\n\n        _classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions] = {};\n        Promise.all(Object.keys(subscriptions).map(async id => {\n          const {\n            callback,\n            method,\n            params,\n            type\n          } = subscriptions[id]; // only re-create subscriptions which are not in author (only area where\n          // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'\n          // are not included (and will not be re-broadcast)\n\n          if (type.startsWith('author_')) {\n            return;\n          }\n\n          try {\n            await this.subscribe(type, method, params, callback);\n          } catch (error) {\n            l.error(error);\n          }\n        })).catch(l.error);\n      }\n    });\n    const endpoints = Array.isArray(endpoint) ? endpoint : [endpoint];\n    assert(endpoints.length !== 0, 'WsProvider requires at least one Endpoint');\n    endpoints.forEach(endpoint => {\n      assert(/^(wss|ws):\\/\\//.test(endpoint), () => `Endpoint should start with 'ws://', received '${endpoint}'`);\n    });\n    _classPrivateFieldLooseBase(this, _eventemitter)[_eventemitter] = new EventEmitter();\n    _classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] = autoConnectMs || 0;\n    _classPrivateFieldLooseBase(this, _coder)[_coder] = new RpcCoder();\n    _classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex] = -1;\n    _classPrivateFieldLooseBase(this, _endpoints)[_endpoints] = endpoints;\n    _classPrivateFieldLooseBase(this, _headers)[_headers] = headers;\n    _classPrivateFieldLooseBase(this, _websocket)[_websocket] = null;\n\n    if (autoConnectMs > 0) {\n      this.connectWithRetry().catch(() => {// does not throw\n      });\n    }\n\n    _classPrivateFieldLooseBase(this, _isReadyPromise)[_isReadyPromise] = new Promise(resolve => {\n      _classPrivateFieldLooseBase(this, _eventemitter)[_eventemitter].once('connected', () => {\n        resolve(this);\n      });\n    });\n  }\n  /**\n   * @summary `true` when this provider supports subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return true;\n  }\n  /**\n   * @summary Whether the node is connected or not.\n   * @return {boolean} true if connected\n   */\n\n\n  get isConnected() {\n    return _classPrivateFieldLooseBase(this, _isConnected)[_isConnected];\n  }\n  /**\n   * @description Promise that resolves the first time we are connected and loaded\n   */\n\n\n  get isReady() {\n    return _classPrivateFieldLooseBase(this, _isReadyPromise)[_isReadyPromise];\n  }\n  /**\n   * @description Returns a clone of the object\n   */\n\n\n  clone() {\n    return new WsProvider(_classPrivateFieldLooseBase(this, _endpoints)[_endpoints]);\n  }\n  /**\n   * @summary Manually connect\n   * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may\n   * connect manually using this method.\n   */\n  // eslint-disable-next-line @typescript-eslint/require-await\n\n\n  async connect() {\n    try {\n      _classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex] = (_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex] + 1) % _classPrivateFieldLooseBase(this, _endpoints)[_endpoints].length;\n      _classPrivateFieldLooseBase(this, _websocket)[_websocket] = typeof xglobal.WebSocket !== 'undefined' && isChildClass(xglobal.WebSocket, WebSocket) ? new WebSocket(_classPrivateFieldLooseBase(this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex]]) // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - WS may be an instance of w3cwebsocket, which supports headers\n      : new WebSocket(_classPrivateFieldLooseBase(this, _endpoints)[_endpoints][_classPrivateFieldLooseBase(this, _endpointIndex)[_endpointIndex]], undefined, undefined, _classPrivateFieldLooseBase(this, _headers)[_headers], undefined, {\n        // default: true\n        fragmentOutgoingMessages: true,\n        // default: 16K (bump, the Node has issues with too many fragments, e.g. on setCode)\n        fragmentationThreshold: 256 * 1024,\n        // default: 8MB (however Polkadot api.query.staking.erasStakers.entries(356) is over that)\n        maxReceivedMessageSize: 16 * 1024 * 1024\n      });\n      _classPrivateFieldLooseBase(this, _websocket)[_websocket].onclose = _classPrivateFieldLooseBase(this, _onSocketClose)[_onSocketClose];\n      _classPrivateFieldLooseBase(this, _websocket)[_websocket].onerror = _classPrivateFieldLooseBase(this, _onSocketError)[_onSocketError];\n      _classPrivateFieldLooseBase(this, _websocket)[_websocket].onmessage = _classPrivateFieldLooseBase(this, _onSocketMessage)[_onSocketMessage];\n      _classPrivateFieldLooseBase(this, _websocket)[_websocket].onopen = _classPrivateFieldLooseBase(this, _onSocketOpen)[_onSocketOpen];\n    } catch (error) {\n      l.error(error);\n\n      _classPrivateFieldLooseBase(this, _emit)[_emit]('error', error);\n\n      throw error;\n    }\n  }\n  /**\n   * @description Connect, never throwing an error, but rather forcing a retry\n   */\n\n\n  async connectWithRetry() {\n    if (_classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] > 0) {\n      try {\n        await this.connect();\n      } catch (error) {\n        setTimeout(() => {\n          this.connectWithRetry().catch(() => {// does not throw\n          });\n        }, _classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs]);\n      }\n    }\n  }\n  /**\n   * @description Manually disconnect from the connection, clearing auto-connect logic\n   */\n  // eslint-disable-next-line @typescript-eslint/require-await\n\n\n  async disconnect() {\n    // switch off autoConnect, we are in manual mode now\n    _classPrivateFieldLooseBase(this, _autoConnectMs)[_autoConnectMs] = 0;\n\n    try {\n      if (_classPrivateFieldLooseBase(this, _websocket)[_websocket]) {\n        // 1000 - Normal closure; the connection successfully completed\n        _classPrivateFieldLooseBase(this, _websocket)[_websocket].close(1000);\n      }\n    } catch (error) {\n      l.error(error);\n\n      _classPrivateFieldLooseBase(this, _emit)[_emit]('error', error);\n\n      throw error;\n    }\n  }\n  /**\n   * @summary Listens on events after having subscribed using the [[subscribe]] function.\n   * @param  {ProviderInterfaceEmitted} type Event\n   * @param  {ProviderInterfaceEmitCb}  sub  Callback\n   * @return unsubscribe function\n   */\n\n\n  on(type, sub) {\n    _classPrivateFieldLooseBase(this, _eventemitter)[_eventemitter].on(type, sub);\n\n    return () => {\n      _classPrivateFieldLooseBase(this, _eventemitter)[_eventemitter].removeListener(type, sub);\n    };\n  }\n  /**\n   * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.\n   * @param method The RPC methods to execute\n   * @param params Encoded parameters as applicable for the method\n   * @param subscription Subscription details (internally used)\n   */\n\n\n  send(method, params, subscription) {\n    return new Promise((resolve, reject) => {\n      try {\n        assert(this.isConnected && !isNull(_classPrivateFieldLooseBase(this, _websocket)[_websocket]), 'WebSocket is not connected');\n\n        const json = _classPrivateFieldLooseBase(this, _coder)[_coder].encodeJson(method, params);\n\n        const id = _classPrivateFieldLooseBase(this, _coder)[_coder].getId();\n\n        const callback = (error, result) => {\n          error ? reject(error) : resolve(result);\n        };\n\n        l.debug(() => ['calling', method, json]);\n        _classPrivateFieldLooseBase(this, _handlers)[_handlers][id] = {\n          callback,\n          method,\n          params,\n          subscription\n        };\n\n        _classPrivateFieldLooseBase(this, _websocket)[_websocket].send(json);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  /**\n   * @name subscribe\n   * @summary Allows subscribing to a specific event.\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * const provider = new WsProvider('ws://127.0.0.1:9944');\n   * const rpc = new Rpc(provider);\n   *\n   * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {\n   *   console.log(values)\n   * }).then((subscriptionId) => {\n   *   console.log('balance changes subscription id: ', subscriptionId)\n   * })\n   * ```\n   */\n\n\n  subscribe(type, method, params, callback) {\n    return this.send(method, params, {\n      callback,\n      type\n    });\n  }\n  /**\n   * @summary Allows unsubscribing to subscriptions made with [[subscribe]].\n   */\n\n\n  async unsubscribe(type, method, id) {\n    const subscription = `${type}::${id}`; // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub\n    // the assigned id now does not match what the API user originally received. It has\n    // a slight complication in solving - since we cannot rely on the send id, but rather\n    // need to find the actual subscription id to map it\n\n    if (isUndefined(_classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions][subscription])) {\n      l.debug(() => `Unable to find active subscription=${subscription}`);\n      return false;\n    }\n\n    delete _classPrivateFieldLooseBase(this, _subscriptions)[_subscriptions][subscription];\n\n    try {\n      return this.isConnected && !isNull(_classPrivateFieldLooseBase(this, _websocket)[_websocket]) ? this.send(method, [id]) : true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}