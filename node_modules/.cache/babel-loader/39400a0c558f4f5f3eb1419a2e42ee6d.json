{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _get from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-dupe-class-members */\n\n\nimport { catchError, first, map, mapTo, mergeMap, of, switchMap, tap } from 'rxjs';\nimport { assert, isBn, isFunction, isNumber, isString, isU8a } from '@polkadot/util';\nimport { filterEvents, isKeyringPair } from \"../util/index.js\";\nimport { SubmittableResult } from \"./Result.js\";\n\nvar identity = function identity(input) {\n  return input;\n};\n\nexport function createClass(_ref) {\n  var api = _ref.api,\n      apiType = _ref.apiType,\n      decorateMethod = _ref.decorateMethod;\n  // an instance of the base extrinsic for us to extend\n  var ExtrinsicBase = api.registry.createClass('Extrinsic');\n\n  var _ignoreStatusCb = /*#__PURE__*/_classPrivateFieldLooseKey(\"ignoreStatusCb\");\n\n  var _transformResult = /*#__PURE__*/_classPrivateFieldLooseKey(\"transformResult\");\n\n  var _makeEraOptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"makeEraOptions\");\n\n  var _makeSignOptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"makeSignOptions\");\n\n  var _makeSignAndSendOptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"makeSignAndSendOptions\");\n\n  var _observeSign = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeSign\");\n\n  var _observeStatus = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeStatus\");\n\n  var _observeSend = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeSend\");\n\n  var _observeSubscribe = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeSubscribe\");\n\n  var _optionsOrNonce = /*#__PURE__*/_classPrivateFieldLooseKey(\"optionsOrNonce\");\n\n  var _signViaSigner = /*#__PURE__*/_classPrivateFieldLooseKey(\"signViaSigner\");\n\n  var _updateSigner = /*#__PURE__*/_classPrivateFieldLooseKey(\"updateSigner\");\n\n  var Submittable = /*#__PURE__*/function (_ExtrinsicBase) {\n    _inherits(Submittable, _ExtrinsicBase);\n\n    var _super = _createSuper(Submittable);\n\n    function Submittable(registry, extrinsic) {\n      var _thisSuper, _this;\n\n      _classCallCheck(this, Submittable);\n\n      _this = _super.call(this, registry, extrinsic, {\n        version: api.extrinsicType\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _ignoreStatusCb, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _transformResult, {\n        writable: true,\n        value: identity\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _makeEraOptions, {\n        writable: true,\n        value: function value(options, _ref2) {\n          var header = _ref2.header,\n              mortalLength = _ref2.mortalLength,\n              nonce = _ref2.nonce;\n\n          if (!header) {\n            if (isNumber(options.era)) {\n              // since we have no header, it is immortal, remove any option overrides\n              // so we only supply the genesisHash and no era to the construction\n              delete options.era;\n              delete options.blockHash;\n            }\n\n            return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _makeSignOptions)[_makeSignOptions](options, {\n              nonce: nonce\n            });\n          }\n\n          return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _makeSignOptions)[_makeSignOptions](options, {\n            blockHash: header.hash,\n            era: _this.registry.createType('ExtrinsicEra', {\n              current: header.number,\n              period: options.era || mortalLength\n            }),\n            nonce: nonce\n          });\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _makeSignOptions, {\n        writable: true,\n        value: function value(options, extras) {\n          return _objectSpread(_objectSpread(_objectSpread({\n            blockHash: api.genesisHash,\n            genesisHash: api.genesisHash\n          }, options), extras), {}, {\n            runtimeVersion: api.runtimeVersion,\n            signedExtensions: api.registry.signedExtensions,\n            version: api.extrinsicType\n          });\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _makeSignAndSendOptions, {\n        writable: true,\n        value: function value(optionsOrStatus, statusCb) {\n          var options = {};\n\n          if (isFunction(optionsOrStatus)) {\n            statusCb = optionsOrStatus;\n          } else {\n            options = _objectSpread({}, optionsOrStatus);\n          }\n\n          return [options, statusCb];\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _observeSign, {\n        writable: true,\n        value: function value(account, optionsOrNonce) {\n          var address = isKeyringPair(account) ? account.address : account.toString();\n\n          var options = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _optionsOrNonce)[_optionsOrNonce](optionsOrNonce);\n\n          var updateId;\n          return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe(first(), mergeMap( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(signingInfo) {\n              var eraOptions;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      eraOptions = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _makeEraOptions)[_makeEraOptions](options, signingInfo);\n\n                      if (!isKeyringPair(account)) {\n                        _context.next = 5;\n                        break;\n                      }\n\n                      _this.sign(account, eraOptions);\n\n                      _context.next = 8;\n                      break;\n\n                    case 5:\n                      _context.next = 7;\n                      return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _signViaSigner)[_signViaSigner](address, eraOptions, signingInfo.header);\n\n                    case 7:\n                      updateId = _context.sent;\n\n                    case 8:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref3.apply(this, arguments);\n            };\n          }()), mapTo(updateId));\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _observeStatus, {\n        writable: true,\n        value: function value(hash, status) {\n          if (!status.isFinalized && !status.isInBlock) {\n            return of(_classPrivateFieldLooseBase(_assertThisInitialized(_this), _transformResult)[_transformResult](new SubmittableResult({\n              status: status\n            })));\n          }\n\n          var blockHash = status.isInBlock ? status.asInBlock : status.asFinalized;\n          return api.derive.tx.events(blockHash).pipe(map(function (_ref4) {\n            var block = _ref4.block,\n                events = _ref4.events;\n            return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _transformResult)[_transformResult](new SubmittableResult({\n              events: filterEvents(hash, block, events, status),\n              status: status\n            }));\n          }), catchError(function (internalError) {\n            return of(_classPrivateFieldLooseBase(_assertThisInitialized(_this), _transformResult)[_transformResult](new SubmittableResult({\n              internalError: internalError,\n              status: status\n            })));\n          }));\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _observeSend, {\n        writable: true,\n        value: function value() {\n          var updateId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n          return api.rpc.author.submitExtrinsic(_assertThisInitialized(_this)).pipe(tap(function (hash) {\n            _classPrivateFieldLooseBase(_assertThisInitialized(_this), _updateSigner)[_updateSigner](updateId, hash);\n          }));\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _observeSubscribe, {\n        writable: true,\n        value: function value() {\n          var updateId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n          var hash = _this.hash;\n          return api.rpc.author.submitAndWatchExtrinsic(_assertThisInitialized(_this)).pipe(switchMap(function (status) {\n            return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _observeStatus)[_observeStatus](hash, status);\n          }), tap(function (status) {\n            _classPrivateFieldLooseBase(_assertThisInitialized(_this), _updateSigner)[_updateSigner](updateId, status);\n          }));\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _optionsOrNonce, {\n        writable: true,\n        value: function value() {\n          var optionsOrNonce = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return isBn(optionsOrNonce) || isNumber(optionsOrNonce) ? {\n            nonce: optionsOrNonce\n          } : optionsOrNonce;\n        }\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _signViaSigner, {\n        writable: true,\n        value: function () {\n          var _value = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address, options, header) {\n            var signer, payload, result;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    signer = options.signer || api.signer;\n                    assert(signer, 'No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');\n                    payload = _this.registry.createType('SignerPayload', _objectSpread(_objectSpread({}, options), {}, {\n                      address: address,\n                      blockNumber: header ? header.number : 0,\n                      method: _this.method\n                    }));\n\n                    if (!signer.signPayload) {\n                      _context2.next = 9;\n                      break;\n                    }\n\n                    _context2.next = 6;\n                    return signer.signPayload(payload.toPayload());\n\n                  case 6:\n                    result = _context2.sent;\n                    _context2.next = 16;\n                    break;\n\n                  case 9:\n                    if (!signer.signRaw) {\n                      _context2.next = 15;\n                      break;\n                    }\n\n                    _context2.next = 12;\n                    return signer.signRaw(payload.toRaw());\n\n                  case 12:\n                    result = _context2.sent;\n                    _context2.next = 16;\n                    break;\n\n                  case 15:\n                    throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');\n\n                  case 16:\n                    // Here we explicitly call `toPayload()` again instead of working with an object\n                    // (reference) as passed to the signer. This means that we are sure that the\n                    // payload data is not modified from our inputs, but the signer\n                    _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(Submittable.prototype)), \"addSignature\", _thisSuper).call(_thisSuper, address, result.signature, payload.toPayload());\n\n                    return _context2.abrupt(\"return\", result.id);\n\n                  case 18:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          function value(_x2, _x3, _x4) {\n            return _value.apply(this, arguments);\n          }\n\n          return value;\n        }()\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _updateSigner, {\n        writable: true,\n        value: function value(updateId, status) {\n          if (updateId !== -1 && api.signer && api.signer.update) {\n            api.signer.update(updateId, status);\n          }\n        }\n      });\n      _classPrivateFieldLooseBase(_assertThisInitialized(_this), _ignoreStatusCb)[_ignoreStatusCb] = apiType === 'rxjs';\n      return _this;\n    } // dry run an extrinsic\n\n\n    _createClass(Submittable, [{\n      key: \"dryRun\",\n      value: function dryRun(account, optionsOrHash) {\n        var _this2 = this;\n\n        if (isString(optionsOrHash) || isU8a(optionsOrHash)) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n          return decorateMethod(function () {\n            return api.rpc.system.dryRun(_this2.toHex(), optionsOrHash);\n          });\n        } // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n\n        return decorateMethod(function () {\n          return _classPrivateFieldLooseBase(_this2, _observeSign)[_observeSign](account, optionsOrHash).pipe(switchMap(function () {\n            return api.rpc.system.dryRun(_this2.toHex());\n          }));\n        })();\n      } // calculate the payment info for this transaction (if signed and submitted)\n\n    }, {\n      key: \"paymentInfo\",\n      value: function paymentInfo(account, optionsOrHash) {\n        var _this3 = this;\n\n        if (isString(optionsOrHash) || isU8a(optionsOrHash)) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n          return decorateMethod(function () {\n            return api.rpc.payment.queryInfo(_this3.toHex(), optionsOrHash);\n          });\n        }\n\n        var _classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrHash),\n            _classPrivateFieldLoo2 = _slicedToArray(_classPrivateFieldLoo, 1),\n            allOptions = _classPrivateFieldLoo2[0];\n\n        var address = isKeyringPair(account) ? account.address : account.toString(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n        return decorateMethod(function () {\n          return api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe(first(), switchMap(function (signingInfo) {\n            // setup our options (same way as in signAndSend)\n            var eraOptions = _classPrivateFieldLooseBase(_this3, _makeEraOptions)[_makeEraOptions](allOptions, signingInfo);\n\n            var signOptions = _classPrivateFieldLooseBase(_this3, _makeSignOptions)[_makeSignOptions](eraOptions, {});\n\n            _this3.signFake(address, signOptions);\n\n            return api.rpc.payment.queryInfo(_this3.toHex());\n          }));\n        })();\n      } // send with an immediate Hash result\n      // send implementation for both immediate Hash and statusCb variants\n\n    }, {\n      key: \"send\",\n      value: function send(statusCb) {\n        var isSubscription = api.hasSubscriptions && (_classPrivateFieldLooseBase(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n        return decorateMethod(isSubscription ? _classPrivateFieldLooseBase(this, _observeSubscribe)[_observeSubscribe] : _classPrivateFieldLooseBase(this, _observeSend)[_observeSend])(statusCb);\n      }\n      /**\n       * @description Sign a transaction, returning the this to allow chaining, i.e. .sign(...).send(). When options, e.g. nonce/blockHash are not specified, it will be inferred. To retrieve eg. nonce use `signAsync` (the preferred interface, this is provided for backwards compatibility)\n       * @deprecated\n       */\n\n    }, {\n      key: \"sign\",\n      value: function sign(account, optionsOrNonce) {\n        _get(_getPrototypeOf(Submittable.prototype), \"sign\", this).call(this, account, _classPrivateFieldLooseBase(this, _makeSignOptions)[_makeSignOptions](_classPrivateFieldLooseBase(this, _optionsOrNonce)[_optionsOrNonce](optionsOrNonce), {}));\n\n        return this;\n      }\n      /**\n       * @description Signs a transaction, returning `this` to allow chaining. E.g.: `sign(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.\n       */\n\n    }, {\n      key: \"signAsync\",\n      value: function signAsync(account, optionsOrNonce) {\n        var _this4 = this;\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n        return decorateMethod(function () {\n          return _classPrivateFieldLooseBase(_this4, _observeSign)[_observeSign](account, optionsOrNonce).pipe(mapTo(_this4));\n        })();\n      } // signAndSend with an immediate Hash result\n      // signAndSend implementation for all 3 cases above\n\n    }, {\n      key: \"signAndSend\",\n      value: function signAndSend(account, optionsOrStatus, optionalStatusCb) {\n        var _this5 = this;\n\n        var _classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrStatus, optionalStatusCb),\n            _classPrivateFieldLoo4 = _slicedToArray(_classPrivateFieldLoo3, 2),\n            options = _classPrivateFieldLoo4[0],\n            statusCb = _classPrivateFieldLoo4[1];\n\n        var isSubscription = api.hasSubscriptions && (_classPrivateFieldLooseBase(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n        return decorateMethod(function () {\n          return _classPrivateFieldLooseBase(_this5, _observeSign)[_observeSign](account, options).pipe(switchMap(function (updateId) {\n            return isSubscription ? _classPrivateFieldLooseBase(_this5, _observeSubscribe)[_observeSubscribe](updateId) : _classPrivateFieldLooseBase(_this5, _observeSend)[_observeSend](updateId);\n          }));\n        } // FIXME This is wrong, SubmittableResult is _not_ a codec\n        )(statusCb);\n      } // adds a transform to the result, applied before result is returned\n\n    }, {\n      key: \"withResultTransform\",\n      value: function withResultTransform(transform) {\n        _classPrivateFieldLooseBase(this, _transformResult)[_transformResult] = transform;\n        return this;\n      }\n    }]);\n\n    return Submittable;\n  }(ExtrinsicBase);\n\n  return Submittable;\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api/submittable/createClass.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","catchError","first","map","mapTo","mergeMap","of","switchMap","tap","assert","isBn","isFunction","isNumber","isString","isU8a","filterEvents","isKeyringPair","SubmittableResult","identity","input","createClass","api","apiType","decorateMethod","ExtrinsicBase","registry","_ignoreStatusCb","_transformResult","_makeEraOptions","_makeSignOptions","_makeSignAndSendOptions","_observeSign","_observeStatus","_observeSend","_observeSubscribe","_optionsOrNonce","_signViaSigner","_updateSigner","Submittable","extrinsic","version","extrinsicType","writable","value","options","header","mortalLength","nonce","era","blockHash","hash","createType","current","number","period","extras","genesisHash","runtimeVersion","signedExtensions","optionsOrStatus","statusCb","account","optionsOrNonce","address","toString","updateId","derive","tx","signingInfo","pipe","eraOptions","sign","status","isFinalized","isInBlock","asInBlock","asFinalized","events","block","internalError","rpc","author","submitExtrinsic","submitAndWatchExtrinsic","signer","payload","blockNumber","method","signPayload","toPayload","result","signRaw","toRaw","Error","signature","id","update","optionsOrHash","system","dryRun","toHex","payment","queryInfo","allOptions","signOptions","signFake","isSubscription","hasSubscriptions","optionalStatusCb","transform"],"mappings":";;;;;;;;;;AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,2BAAP,MAAwC,uDAAxC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;;AAAoD,QAAIC,cAAJ,EAAoB;AAAEI,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,eAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,OAAjG,CAAV;AAA+G;;AAACP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAEzV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEvB,QAAAA,eAAe,CAACiB,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;AAAEjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB,C,CAEthB;AACA;;AAEA;;;AACA,SAASU,UAAT,EAAqBC,KAArB,EAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,EAAlD,EAAsDC,SAAtD,EAAiEC,GAAjE,QAA4E,MAA5E;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuDC,KAAvD,QAAoE,gBAApE;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAAtB;;AAEA,OAAO,SAASC,WAAT,OAIJ;AAAA,MAHDC,GAGC,QAHDA,GAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,cACC,QADDA,cACC;AACD;AACA,MAAMC,aAAa,GAAGH,GAAG,CAACI,QAAJ,CAAaL,WAAb,CAAyB,WAAzB,CAAtB;;AAEA,MAAIM,eAAe,GAAG,aAAalD,0BAA0B,CAAC,gBAAD,CAA7D;;AAEA,MAAImD,gBAAgB,GAAG,aAAanD,0BAA0B,CAAC,iBAAD,CAA9D;;AAEA,MAAIoD,eAAe,GAAG,aAAapD,0BAA0B,CAAC,gBAAD,CAA7D;;AAEA,MAAIqD,gBAAgB,GAAG,aAAarD,0BAA0B,CAAC,iBAAD,CAA9D;;AAEA,MAAIsD,uBAAuB,GAAG,aAAatD,0BAA0B,CAAC,wBAAD,CAArE;;AAEA,MAAIuD,YAAY,GAAG,aAAavD,0BAA0B,CAAC,aAAD,CAA1D;;AAEA,MAAIwD,cAAc,GAAG,aAAaxD,0BAA0B,CAAC,eAAD,CAA5D;;AAEA,MAAIyD,YAAY,GAAG,aAAazD,0BAA0B,CAAC,aAAD,CAA1D;;AAEA,MAAI0D,iBAAiB,GAAG,aAAa1D,0BAA0B,CAAC,kBAAD,CAA/D;;AAEA,MAAI2D,eAAe,GAAG,aAAa3D,0BAA0B,CAAC,gBAAD,CAA7D;;AAEA,MAAI4D,cAAc,GAAG,aAAa5D,0BAA0B,CAAC,eAAD,CAA5D;;AAEA,MAAI6D,aAAa,GAAG,aAAa7D,0BAA0B,CAAC,cAAD,CAA3D;;AA1BC,MA4BK8D,WA5BL;AAAA;;AAAA;;AA6BC,yBAAYb,QAAZ,EAAsBc,SAAtB,EAAiC;AAAA;;AAAA;;AAC/B,gCAAMd,QAAN,EAAgBc,SAAhB,EAA2B;AACzBC,QAAAA,OAAO,EAAEnB,GAAG,CAACoB;AADY,OAA3B;AAGA5D,MAAAA,MAAM,CAACmB,cAAP,gCAA4B0B,eAA5B,EAA6C;AAC3CgB,QAAAA,QAAQ,EAAE,IADiC;AAE3CC,QAAAA,KAAK,EAAE,KAAK;AAF+B,OAA7C;AAIA9D,MAAAA,MAAM,CAACmB,cAAP,gCAA4B2B,gBAA5B,EAA8C;AAC5Ce,QAAAA,QAAQ,EAAE,IADkC;AAE5CC,QAAAA,KAAK,EAAEzB;AAFqC,OAA9C;AAIArC,MAAAA,MAAM,CAACmB,cAAP,gCAA4B4B,eAA5B,EAA6C;AAC3Cc,QAAAA,QAAQ,EAAE,IADiC;AAE3CC,QAAAA,KAAK,EAAE,eAACC,OAAD,SAID;AAAA,cAHJC,MAGI,SAHJA,MAGI;AAAA,cAFJC,YAEI,SAFJA,YAEI;AAAA,cADJC,KACI,SADJA,KACI;;AACJ,cAAI,CAACF,MAAL,EAAa;AACX,gBAAIjC,QAAQ,CAACgC,OAAO,CAACI,GAAT,CAAZ,EAA2B;AACzB;AACA;AACA,qBAAOJ,OAAO,CAACI,GAAf;AACA,qBAAOJ,OAAO,CAACK,SAAf;AACD;;AAED,mBAAO1E,2BAA2B,gCAAOsD,gBAAP,CAA3B,CAAoDA,gBAApD,EAAsEe,OAAtE,EAA+E;AACpFG,cAAAA,KAAK,EAALA;AADoF,aAA/E,CAAP;AAGD;;AAED,iBAAOxE,2BAA2B,gCAAOsD,gBAAP,CAA3B,CAAoDA,gBAApD,EAAsEe,OAAtE,EAA+E;AACpFK,YAAAA,SAAS,EAAEJ,MAAM,CAACK,IADkE;AAEpFF,YAAAA,GAAG,EAAE,MAAKvB,QAAL,CAAc0B,UAAd,CAAyB,cAAzB,EAAyC;AAC5CC,cAAAA,OAAO,EAAEP,MAAM,CAACQ,MAD4B;AAE5CC,cAAAA,MAAM,EAAEV,OAAO,CAACI,GAAR,IAAeF;AAFqB,aAAzC,CAF+E;AAMpFC,YAAAA,KAAK,EAALA;AANoF,WAA/E,CAAP;AAQD;AA5B0C,OAA7C;AA8BAlE,MAAAA,MAAM,CAACmB,cAAP,gCAA4B6B,gBAA5B,EAA8C;AAC5Ca,QAAAA,QAAQ,EAAE,IADkC;AAE5CC,QAAAA,KAAK,EAAE,eAACC,OAAD,EAAUW,MAAV,EAAqB;AAC1B,iBAAOjE,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC;AAC/C2D,YAAAA,SAAS,EAAE5B,GAAG,CAACmC,WADgC;AAE/CA,YAAAA,WAAW,EAAEnC,GAAG,CAACmC;AAF8B,WAAD,EAG7CZ,OAH6C,CAAd,EAGrBW,MAHqB,CAAd,EAGE,EAHF,EAGM;AACxBE,YAAAA,cAAc,EAAEpC,GAAG,CAACoC,cADI;AAExBC,YAAAA,gBAAgB,EAAErC,GAAG,CAACI,QAAJ,CAAaiC,gBAFP;AAGxBlB,YAAAA,OAAO,EAAEnB,GAAG,CAACoB;AAHW,WAHN,CAApB;AAQD;AAX2C,OAA9C;AAaA5D,MAAAA,MAAM,CAACmB,cAAP,gCAA4B8B,uBAA5B,EAAqD;AACnDY,QAAAA,QAAQ,EAAE,IADyC;AAEnDC,QAAAA,KAAK,EAAE,eAACgB,eAAD,EAAkBC,QAAlB,EAA+B;AACpC,cAAIhB,OAAO,GAAG,EAAd;;AAEA,cAAIjC,UAAU,CAACgD,eAAD,CAAd,EAAiC;AAC/BC,YAAAA,QAAQ,GAAGD,eAAX;AACD,WAFD,MAEO;AACLf,YAAAA,OAAO,GAAGtD,aAAa,CAAC,EAAD,EAAKqE,eAAL,CAAvB;AACD;;AAED,iBAAO,CAACf,OAAD,EAAUgB,QAAV,CAAP;AACD;AAZkD,OAArD;AAcA/E,MAAAA,MAAM,CAACmB,cAAP,gCAA4B+B,YAA5B,EAA0C;AACxCW,QAAAA,QAAQ,EAAE,IAD8B;AAExCC,QAAAA,KAAK,EAAE,eAACkB,OAAD,EAAUC,cAAV,EAA6B;AAClC,cAAMC,OAAO,GAAG/C,aAAa,CAAC6C,OAAD,CAAb,GAAyBA,OAAO,CAACE,OAAjC,GAA2CF,OAAO,CAACG,QAAR,EAA3D;;AAEA,cAAMpB,OAAO,GAAGrE,2BAA2B,gCAAO4D,eAAP,CAA3B,CAAmDA,eAAnD,EAAoE2B,cAApE,CAAhB;;AAEA,cAAIG,QAAJ;AACA,iBAAO5C,GAAG,CAAC6C,MAAJ,CAAWC,EAAX,CAAcC,WAAd,CAA0BL,OAA1B,EAAmCnB,OAAO,CAACG,KAA3C,EAAkDH,OAAO,CAACI,GAA1D,EAA+DqB,IAA/D,CAAoEnE,KAAK,EAAzE,EAA6EG,QAAQ;AAAA,iFAAC,iBAAM+D,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrFE,sBAAAA,UADqF,GACxE/F,2BAA2B,gCAAOqD,eAAP,CAA3B,CAAmDA,eAAnD,EAAoEgB,OAApE,EAA6EwB,WAA7E,CADwE;;AAAA,2BAGvFpD,aAAa,CAAC6C,OAAD,CAH0E;AAAA;AAAA;AAAA;;AAIzF,4BAAKU,IAAL,CAAUV,OAAV,EAAmBS,UAAnB;;AAJyF;AAAA;;AAAA;AAAA;AAAA,6BAMxE/F,2BAA2B,gCAAO6D,cAAP,CAA3B,CAAkDA,cAAlD,EAAkE2B,OAAlE,EAA2EO,UAA3E,EAAuFF,WAAW,CAACvB,MAAnG,CANwE;;AAAA;AAMzFoB,sBAAAA,QANyF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD;;AAAA;AAAA;AAAA;AAAA,cAArF,EAQH7D,KAAK,CAAC6D,QAAD,CARF,CAAP;AASD;AAjBuC,OAA1C;AAmBApF,MAAAA,MAAM,CAACmB,cAAP,gCAA4BgC,cAA5B,EAA4C;AAC1CU,QAAAA,QAAQ,EAAE,IADgC;AAE1CC,QAAAA,KAAK,EAAE,eAACO,IAAD,EAAOsB,MAAP,EAAkB;AACvB,cAAI,CAACA,MAAM,CAACC,WAAR,IAAuB,CAACD,MAAM,CAACE,SAAnC,EAA8C;AAC5C,mBAAOpE,EAAE,CAAC/B,2BAA2B,gCAAOoD,gBAAP,CAA3B,CAAoDA,gBAApD,EAAsE,IAAIV,iBAAJ,CAAsB;AACpGuD,cAAAA,MAAM,EAANA;AADoG,aAAtB,CAAtE,CAAD,CAAT;AAGD;;AAED,cAAMvB,SAAS,GAAGuB,MAAM,CAACE,SAAP,GAAmBF,MAAM,CAACG,SAA1B,GAAsCH,MAAM,CAACI,WAA/D;AACA,iBAAOvD,GAAG,CAAC6C,MAAJ,CAAWC,EAAX,CAAcU,MAAd,CAAqB5B,SAArB,EAAgCoB,IAAhC,CAAqClE,GAAG,CAAC;AAAA,gBAC9C2E,KAD8C,SAC9CA,KAD8C;AAAA,gBAE9CD,MAF8C,SAE9CA,MAF8C;AAAA,mBAG1CtG,2BAA2B,gCAAOoD,gBAAP,CAA3B,CAAoDA,gBAApD,EAAsE,IAAIV,iBAAJ,CAAsB;AAChG4D,cAAAA,MAAM,EAAE9D,YAAY,CAACmC,IAAD,EAAO4B,KAAP,EAAcD,MAAd,EAAsBL,MAAtB,CAD4E;AAEhGA,cAAAA,MAAM,EAANA;AAFgG,aAAtB,CAAtE,CAH0C;AAAA,WAAD,CAAxC,EAMDvE,UAAU,CAAC,UAAA8E,aAAa;AAAA,mBAAIzE,EAAE,CAAC/B,2BAA2B,gCAAOoD,gBAAP,CAA3B,CAAoDA,gBAApD,EAAsE,IAAIV,iBAAJ,CAAsB;AAC/H8D,cAAAA,aAAa,EAAbA,aAD+H;AAE/HP,cAAAA,MAAM,EAANA;AAF+H,aAAtB,CAAtE,CAAD,CAAN;AAAA,WAAd,CANT,CAAP;AAUD;AApByC,OAA5C;AAsBA3F,MAAAA,MAAM,CAACmB,cAAP,gCAA4BiC,YAA5B,EAA0C;AACxCS,QAAAA,QAAQ,EAAE,IAD8B;AAExCC,QAAAA,KAAK,EAAE,iBAAmB;AAAA,cAAlBsB,QAAkB,uEAAP,CAAC,CAAM;AACxB,iBAAO5C,GAAG,CAAC2D,GAAJ,CAAQC,MAAR,CAAeC,eAAf,gCAAqCb,IAArC,CAA0C7D,GAAG,CAAC,UAAA0C,IAAI,EAAI;AAC3D3E,YAAAA,2BAA2B,gCAAO8D,aAAP,CAA3B,CAAiDA,aAAjD,EAAgE4B,QAAhE,EAA0Ef,IAA1E;AACD,WAFmD,CAA7C,CAAP;AAGD;AANuC,OAA1C;AAQArE,MAAAA,MAAM,CAACmB,cAAP,gCAA4BkC,iBAA5B,EAA+C;AAC7CQ,QAAAA,QAAQ,EAAE,IADmC;AAE7CC,QAAAA,KAAK,EAAE,iBAAmB;AAAA,cAAlBsB,QAAkB,uEAAP,CAAC,CAAM;AACxB,cAAMf,IAAI,GAAG,MAAKA,IAAlB;AACA,iBAAO7B,GAAG,CAAC2D,GAAJ,CAAQC,MAAR,CAAeE,uBAAf,gCAA6Cd,IAA7C,CAAkD9D,SAAS,CAAC,UAAAiE,MAAM;AAAA,mBAAIjG,2BAA2B,gCAAOyD,cAAP,CAA3B,CAAkDA,cAAlD,EAAkEkB,IAAlE,EAAwEsB,MAAxE,CAAJ;AAAA,WAAP,CAA3D,EAAwJhE,GAAG,CAAC,UAAAgE,MAAM,EAAI;AAC3KjG,YAAAA,2BAA2B,gCAAO8D,aAAP,CAA3B,CAAiDA,aAAjD,EAAgE4B,QAAhE,EAA0EO,MAA1E;AACD,WAFiK,CAA3J,CAAP;AAGD;AAP4C,OAA/C;AASA3F,MAAAA,MAAM,CAACmB,cAAP,gCAA4BmC,eAA5B,EAA6C;AAC3CO,QAAAA,QAAQ,EAAE,IADiC;AAE3CC,QAAAA,KAAK,EAAE,iBAAyB;AAAA,cAAxBmB,cAAwB,uEAAP,EAAO;AAC9B,iBAAOpD,IAAI,CAACoD,cAAD,CAAJ,IAAwBlD,QAAQ,CAACkD,cAAD,CAAhC,GAAmD;AACxDf,YAAAA,KAAK,EAAEe;AADiD,WAAnD,GAEHA,cAFJ;AAGD;AAN0C,OAA7C;AAQAjF,MAAAA,MAAM,CAACmB,cAAP,gCAA4BoC,cAA5B,EAA4C;AAC1CM,QAAAA,QAAQ,EAAE,IADgC;AAE1CC,QAAAA,KAAK;AAAA,gFAAE,kBAAOoB,OAAP,EAAgBnB,OAAhB,EAAyBC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCuC,oBAAAA,MADD,GACUxC,OAAO,CAACwC,MAAR,IAAkB/D,GAAG,CAAC+D,MADhC;AAEL3E,oBAAAA,MAAM,CAAC2E,MAAD,EAAS,wKAAT,CAAN;AACMC,oBAAAA,OAHD,GAGW,MAAK5D,QAAL,CAAc0B,UAAd,CAAyB,eAAzB,EAA0C7D,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKsD,OAAL,CAAd,EAA6B,EAA7B,EAAiC;AACtGmB,sBAAAA,OAAO,EAAPA,OADsG;AAEtGuB,sBAAAA,WAAW,EAAEzC,MAAM,GAAGA,MAAM,CAACQ,MAAV,GAAmB,CAFgE;AAGtGkC,sBAAAA,MAAM,EAAE,MAAKA;AAHyF,qBAAjC,CAAvD,CAHX;;AAAA,yBAUDH,MAAM,CAACI,WAVN;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAWYJ,MAAM,CAACI,WAAP,CAAmBH,OAAO,CAACI,SAAR,EAAnB,CAXZ;;AAAA;AAWHC,oBAAAA,MAXG;AAAA;AAAA;;AAAA;AAAA,yBAYMN,MAAM,CAACO,OAZb;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAaYP,MAAM,CAACO,OAAP,CAAeN,OAAO,CAACO,KAAR,EAAf,CAbZ;;AAAA;AAaHF,oBAAAA,MAbG;AAAA;AAAA;;AAAA;AAAA,0BAeG,IAAIG,KAAJ,CAAU,uFAAV,CAfH;;AAAA;AAgBH;AACF;AACA;AAGA,4JAAmB9B,OAAnB,EAA4B2B,MAAM,CAACI,SAAnC,EAA8CT,OAAO,CAACI,SAAR,EAA9C;;AArBK,sDAsBEC,MAAM,CAACK,EAtBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFqC,OAA5C;AA2BAlH,MAAAA,MAAM,CAACmB,cAAP,gCAA4BqC,aAA5B,EAA2C;AACzCK,QAAAA,QAAQ,EAAE,IAD+B;AAEzCC,QAAAA,KAAK,EAAE,eAACsB,QAAD,EAAWO,MAAX,EAAsB;AAC3B,cAAIP,QAAQ,KAAK,CAAC,CAAd,IAAmB5C,GAAG,CAAC+D,MAAvB,IAAiC/D,GAAG,CAAC+D,MAAJ,CAAWY,MAAhD,EAAwD;AACtD3E,YAAAA,GAAG,CAAC+D,MAAJ,CAAWY,MAAX,CAAkB/B,QAAlB,EAA4BO,MAA5B;AACD;AACF;AANwC,OAA3C;AAQAjG,MAAAA,2BAA2B,gCAAOmD,eAAP,CAA3B,CAAmDA,eAAnD,IAAsEJ,OAAO,KAAK,MAAlF;AA1K+B;AA2KhC,KAxMF,CAwMG;;;AAxMH;AAAA;AAAA,aA2MC,gBAAOuC,OAAP,EAAgBoC,aAAhB,EAA+B;AAAA;;AAC7B,YAAIpF,QAAQ,CAACoF,aAAD,CAAR,IAA2BnF,KAAK,CAACmF,aAAD,CAApC,EAAqD;AACnD;AACA,iBAAO1E,cAAc,CAAC;AAAA,mBAAMF,GAAG,CAAC2D,GAAJ,CAAQkB,MAAR,CAAeC,MAAf,CAAsB,MAAI,CAACC,KAAL,EAAtB,EAAoCH,aAApC,CAAN;AAAA,WAAD,CAArB;AACD,SAJ4B,CAI3B;;;AAGF,eAAO1E,cAAc,CAAC;AAAA,iBAAMhD,2BAA2B,CAAC,MAAD,EAAOwD,YAAP,CAA3B,CAAgDA,YAAhD,EAA8D8B,OAA9D,EAAuEoC,aAAvE,EAAsF5B,IAAtF,CAA2F9D,SAAS,CAAC;AAAA,mBAAMc,GAAG,CAAC2D,GAAJ,CAAQkB,MAAR,CAAeC,MAAf,CAAsB,MAAI,CAACC,KAAL,EAAtB,CAAN;AAAA,WAAD,CAApG,CAAN;AAAA,SAAD,CAAd,EAAP;AACD,OAnNF,CAmNG;;AAnNH;AAAA;AAAA,aAsNC,qBAAYvC,OAAZ,EAAqBoC,aAArB,EAAoC;AAAA;;AAClC,YAAIpF,QAAQ,CAACoF,aAAD,CAAR,IAA2BnF,KAAK,CAACmF,aAAD,CAApC,EAAqD;AACnD;AACA,iBAAO1E,cAAc,CAAC;AAAA,mBAAMF,GAAG,CAAC2D,GAAJ,CAAQqB,OAAR,CAAgBC,SAAhB,CAA0B,MAAI,CAACF,KAAL,EAA1B,EAAwCH,aAAxC,CAAN;AAAA,WAAD,CAArB;AACD;;AAED,oCAAqB1H,2BAA2B,CAAC,IAAD,EAAOuD,uBAAP,CAA3B,CAA2DA,uBAA3D,EAAoFmE,aAApF,CAArB;AAAA;AAAA,YAAOM,UAAP;;AAEA,YAAMxC,OAAO,GAAG/C,aAAa,CAAC6C,OAAD,CAAb,GAAyBA,OAAO,CAACE,OAAjC,GAA2CF,OAAO,CAACG,QAAR,EAA3D,CARkC,CAQ6C;;AAE/E,eAAOzC,cAAc,CAAC;AAAA,iBAAMF,GAAG,CAAC6C,MAAJ,CAAWC,EAAX,CAAcC,WAAd,CAA0BL,OAA1B,EAAmCwC,UAAU,CAACxD,KAA9C,EAAqDwD,UAAU,CAACvD,GAAhE,EAAqEqB,IAArE,CAA0EnE,KAAK,EAA/E,EAAmFK,SAAS,CAAC,UAAA6D,WAAW,EAAI;AACtI;AACA,gBAAME,UAAU,GAAG/F,2BAA2B,CAAC,MAAD,EAAOqD,eAAP,CAA3B,CAAmDA,eAAnD,EAAoE2E,UAApE,EAAgFnC,WAAhF,CAAnB;;AAEA,gBAAMoC,WAAW,GAAGjI,2BAA2B,CAAC,MAAD,EAAOsD,gBAAP,CAA3B,CAAoDA,gBAApD,EAAsEyC,UAAtE,EAAkF,EAAlF,CAApB;;AAEA,YAAA,MAAI,CAACmC,QAAL,CAAc1C,OAAd,EAAuByC,WAAvB;;AACA,mBAAOnF,GAAG,CAAC2D,GAAJ,CAAQqB,OAAR,CAAgBC,SAAhB,CAA0B,MAAI,CAACF,KAAL,EAA1B,CAAP;AACD,WARuH,CAA5F,CAAN;AAAA,SAAD,CAAd,EAAP;AASD,OAzOF,CAyOG;AAGF;;AA5OD;AAAA;AAAA,aA6OC,cAAKxC,QAAL,EAAe;AACb,YAAM8C,cAAc,GAAGrF,GAAG,CAACsF,gBAAJ,KAAyBpI,2BAA2B,CAAC,IAAD,EAAOmD,eAAP,CAA3B,CAAmDA,eAAnD,KAAuE,CAAC,CAACkC,QAAlG,CAAvB,CADa,CACuH;;AAEpI,eAAOrC,cAAc,CAACmF,cAAc,GAAGnI,2BAA2B,CAAC,IAAD,EAAO2D,iBAAP,CAA3B,CAAqDA,iBAArD,CAAH,GAA6E3D,2BAA2B,CAAC,IAAD,EAAO0D,YAAP,CAA3B,CAAgDA,YAAhD,CAA5F,CAAd,CAAyK2B,QAAzK,CAAP;AACD;AACD;AACJ;AACA;AACA;;AArPG;AAAA;AAAA,aAwPC,cAAKC,OAAL,EAAcC,cAAd,EAA8B;AAC5B,8EAAWD,OAAX,EAAoBtF,2BAA2B,CAAC,IAAD,EAAOsD,gBAAP,CAA3B,CAAoDA,gBAApD,EAAsEtD,2BAA2B,CAAC,IAAD,EAAO4D,eAAP,CAA3B,CAAmDA,eAAnD,EAAoE2B,cAApE,CAAtE,EAA2J,EAA3J,CAApB;;AACA,eAAO,IAAP;AACD;AACD;AACJ;AACA;;AA9PG;AAAA;AAAA,aAiQC,mBAAUD,OAAV,EAAmBC,cAAnB,EAAmC;AAAA;;AACjC;AACA,eAAOvC,cAAc,CAAC;AAAA,iBAAMhD,2BAA2B,CAAC,MAAD,EAAOwD,YAAP,CAA3B,CAAgDA,YAAhD,EAA8D8B,OAA9D,EAAuEC,cAAvE,EAAuFO,IAAvF,CAA4FjE,KAAK,CAAC,MAAD,CAAjG,CAAN;AAAA,SAAD,CAAd,EAAP;AACD,OApQF,CAoQG;AAGF;;AAvQD;AAAA;AAAA,aAwQC,qBAAYyD,OAAZ,EAAqBF,eAArB,EAAsCiD,gBAAtC,EAAwD;AAAA;;AACtD,qCAA4BrI,2BAA2B,CAAC,IAAD,EAAOuD,uBAAP,CAA3B,CAA2DA,uBAA3D,EAAoF6B,eAApF,EAAqGiD,gBAArG,CAA5B;AAAA;AAAA,YAAOhE,OAAP;AAAA,YAAgBgB,QAAhB;;AAEA,YAAM8C,cAAc,GAAGrF,GAAG,CAACsF,gBAAJ,KAAyBpI,2BAA2B,CAAC,IAAD,EAAOmD,eAAP,CAA3B,CAAmDA,eAAnD,KAAuE,CAAC,CAACkC,QAAlG,CAAvB,CAHsD,CAG8E;;AAEpI,eAAOrC,cAAc,CAAC;AAAA,iBAAMhD,2BAA2B,CAAC,MAAD,EAAOwD,YAAP,CAA3B,CAAgDA,YAAhD,EAA8D8B,OAA9D,EAAuEjB,OAAvE,EAAgFyB,IAAhF,CAAqF9D,SAAS,CAAC,UAAA0D,QAAQ;AAAA,mBAAIyC,cAAc,GAAGnI,2BAA2B,CAAC,MAAD,EAAO2D,iBAAP,CAA3B,CAAqDA,iBAArD,EAAwE+B,QAAxE,CAAH,GAAuF1F,2BAA2B,CAAC,MAAD,EAAO0D,YAAP,CAA3B,CAAgDA,YAAhD,EAA8DgC,QAA9D,CAAzG;AAAA,WAAT,CAA9F,CAAN;AAAA,SAAD,CAAiS;AAAjS,SAAd,CACLL,QADK,CAAP;AAED,OA/QF,CA+QG;;AA/QH;AAAA;AAAA,aAkRC,6BAAoBiD,SAApB,EAA+B;AAC7BtI,QAAAA,2BAA2B,CAAC,IAAD,EAAOoD,gBAAP,CAA3B,CAAoDA,gBAApD,IAAwEkF,SAAxE;AACA,eAAO,IAAP;AACD;AArRF;;AAAA;AAAA,IA4ByBrF,aA5BzB;;AAyRD,SAAOc,WAAP;AACD","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-dupe-class-members */\nimport { catchError, first, map, mapTo, mergeMap, of, switchMap, tap } from 'rxjs';\nimport { assert, isBn, isFunction, isNumber, isString, isU8a } from '@polkadot/util';\nimport { filterEvents, isKeyringPair } from \"../util/index.js\";\nimport { SubmittableResult } from \"./Result.js\";\n\nconst identity = input => input;\n\nexport function createClass({\n  api,\n  apiType,\n  decorateMethod\n}) {\n  // an instance of the base extrinsic for us to extend\n  const ExtrinsicBase = api.registry.createClass('Extrinsic');\n\n  var _ignoreStatusCb = /*#__PURE__*/_classPrivateFieldLooseKey(\"ignoreStatusCb\");\n\n  var _transformResult = /*#__PURE__*/_classPrivateFieldLooseKey(\"transformResult\");\n\n  var _makeEraOptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"makeEraOptions\");\n\n  var _makeSignOptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"makeSignOptions\");\n\n  var _makeSignAndSendOptions = /*#__PURE__*/_classPrivateFieldLooseKey(\"makeSignAndSendOptions\");\n\n  var _observeSign = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeSign\");\n\n  var _observeStatus = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeStatus\");\n\n  var _observeSend = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeSend\");\n\n  var _observeSubscribe = /*#__PURE__*/_classPrivateFieldLooseKey(\"observeSubscribe\");\n\n  var _optionsOrNonce = /*#__PURE__*/_classPrivateFieldLooseKey(\"optionsOrNonce\");\n\n  var _signViaSigner = /*#__PURE__*/_classPrivateFieldLooseKey(\"signViaSigner\");\n\n  var _updateSigner = /*#__PURE__*/_classPrivateFieldLooseKey(\"updateSigner\");\n\n  class Submittable extends ExtrinsicBase {\n    constructor(registry, extrinsic) {\n      super(registry, extrinsic, {\n        version: api.extrinsicType\n      });\n      Object.defineProperty(this, _ignoreStatusCb, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _transformResult, {\n        writable: true,\n        value: identity\n      });\n      Object.defineProperty(this, _makeEraOptions, {\n        writable: true,\n        value: (options, {\n          header,\n          mortalLength,\n          nonce\n        }) => {\n          if (!header) {\n            if (isNumber(options.era)) {\n              // since we have no header, it is immortal, remove any option overrides\n              // so we only supply the genesisHash and no era to the construction\n              delete options.era;\n              delete options.blockHash;\n            }\n\n            return _classPrivateFieldLooseBase(this, _makeSignOptions)[_makeSignOptions](options, {\n              nonce\n            });\n          }\n\n          return _classPrivateFieldLooseBase(this, _makeSignOptions)[_makeSignOptions](options, {\n            blockHash: header.hash,\n            era: this.registry.createType('ExtrinsicEra', {\n              current: header.number,\n              period: options.era || mortalLength\n            }),\n            nonce\n          });\n        }\n      });\n      Object.defineProperty(this, _makeSignOptions, {\n        writable: true,\n        value: (options, extras) => {\n          return _objectSpread(_objectSpread(_objectSpread({\n            blockHash: api.genesisHash,\n            genesisHash: api.genesisHash\n          }, options), extras), {}, {\n            runtimeVersion: api.runtimeVersion,\n            signedExtensions: api.registry.signedExtensions,\n            version: api.extrinsicType\n          });\n        }\n      });\n      Object.defineProperty(this, _makeSignAndSendOptions, {\n        writable: true,\n        value: (optionsOrStatus, statusCb) => {\n          let options = {};\n\n          if (isFunction(optionsOrStatus)) {\n            statusCb = optionsOrStatus;\n          } else {\n            options = _objectSpread({}, optionsOrStatus);\n          }\n\n          return [options, statusCb];\n        }\n      });\n      Object.defineProperty(this, _observeSign, {\n        writable: true,\n        value: (account, optionsOrNonce) => {\n          const address = isKeyringPair(account) ? account.address : account.toString();\n\n          const options = _classPrivateFieldLooseBase(this, _optionsOrNonce)[_optionsOrNonce](optionsOrNonce);\n\n          let updateId;\n          return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe(first(), mergeMap(async signingInfo => {\n            const eraOptions = _classPrivateFieldLooseBase(this, _makeEraOptions)[_makeEraOptions](options, signingInfo);\n\n            if (isKeyringPair(account)) {\n              this.sign(account, eraOptions);\n            } else {\n              updateId = await _classPrivateFieldLooseBase(this, _signViaSigner)[_signViaSigner](address, eraOptions, signingInfo.header);\n            }\n          }), mapTo(updateId));\n        }\n      });\n      Object.defineProperty(this, _observeStatus, {\n        writable: true,\n        value: (hash, status) => {\n          if (!status.isFinalized && !status.isInBlock) {\n            return of(_classPrivateFieldLooseBase(this, _transformResult)[_transformResult](new SubmittableResult({\n              status\n            })));\n          }\n\n          const blockHash = status.isInBlock ? status.asInBlock : status.asFinalized;\n          return api.derive.tx.events(blockHash).pipe(map(({\n            block,\n            events\n          }) => _classPrivateFieldLooseBase(this, _transformResult)[_transformResult](new SubmittableResult({\n            events: filterEvents(hash, block, events, status),\n            status\n          }))), catchError(internalError => of(_classPrivateFieldLooseBase(this, _transformResult)[_transformResult](new SubmittableResult({\n            internalError,\n            status\n          })))));\n        }\n      });\n      Object.defineProperty(this, _observeSend, {\n        writable: true,\n        value: (updateId = -1) => {\n          return api.rpc.author.submitExtrinsic(this).pipe(tap(hash => {\n            _classPrivateFieldLooseBase(this, _updateSigner)[_updateSigner](updateId, hash);\n          }));\n        }\n      });\n      Object.defineProperty(this, _observeSubscribe, {\n        writable: true,\n        value: (updateId = -1) => {\n          const hash = this.hash;\n          return api.rpc.author.submitAndWatchExtrinsic(this).pipe(switchMap(status => _classPrivateFieldLooseBase(this, _observeStatus)[_observeStatus](hash, status)), tap(status => {\n            _classPrivateFieldLooseBase(this, _updateSigner)[_updateSigner](updateId, status);\n          }));\n        }\n      });\n      Object.defineProperty(this, _optionsOrNonce, {\n        writable: true,\n        value: (optionsOrNonce = {}) => {\n          return isBn(optionsOrNonce) || isNumber(optionsOrNonce) ? {\n            nonce: optionsOrNonce\n          } : optionsOrNonce;\n        }\n      });\n      Object.defineProperty(this, _signViaSigner, {\n        writable: true,\n        value: async (address, options, header) => {\n          const signer = options.signer || api.signer;\n          assert(signer, 'No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');\n          const payload = this.registry.createType('SignerPayload', _objectSpread(_objectSpread({}, options), {}, {\n            address,\n            blockNumber: header ? header.number : 0,\n            method: this.method\n          }));\n          let result;\n\n          if (signer.signPayload) {\n            result = await signer.signPayload(payload.toPayload());\n          } else if (signer.signRaw) {\n            result = await signer.signRaw(payload.toRaw());\n          } else {\n            throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');\n          } // Here we explicitly call `toPayload()` again instead of working with an object\n          // (reference) as passed to the signer. This means that we are sure that the\n          // payload data is not modified from our inputs, but the signer\n\n\n          super.addSignature(address, result.signature, payload.toPayload());\n          return result.id;\n        }\n      });\n      Object.defineProperty(this, _updateSigner, {\n        writable: true,\n        value: (updateId, status) => {\n          if (updateId !== -1 && api.signer && api.signer.update) {\n            api.signer.update(updateId, status);\n          }\n        }\n      });\n      _classPrivateFieldLooseBase(this, _ignoreStatusCb)[_ignoreStatusCb] = apiType === 'rxjs';\n    } // dry run an extrinsic\n\n\n    dryRun(account, optionsOrHash) {\n      if (isString(optionsOrHash) || isU8a(optionsOrHash)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return decorateMethod(() => api.rpc.system.dryRun(this.toHex(), optionsOrHash));\n      } // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n\n      return decorateMethod(() => _classPrivateFieldLooseBase(this, _observeSign)[_observeSign](account, optionsOrHash).pipe(switchMap(() => api.rpc.system.dryRun(this.toHex()))))();\n    } // calculate the payment info for this transaction (if signed and submitted)\n\n\n    paymentInfo(account, optionsOrHash) {\n      if (isString(optionsOrHash) || isU8a(optionsOrHash)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return decorateMethod(() => api.rpc.payment.queryInfo(this.toHex(), optionsOrHash));\n      }\n\n      const [allOptions] = _classPrivateFieldLooseBase(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrHash);\n\n      const address = isKeyringPair(account) ? account.address : account.toString(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(() => api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe(first(), switchMap(signingInfo => {\n        // setup our options (same way as in signAndSend)\n        const eraOptions = _classPrivateFieldLooseBase(this, _makeEraOptions)[_makeEraOptions](allOptions, signingInfo);\n\n        const signOptions = _classPrivateFieldLooseBase(this, _makeSignOptions)[_makeSignOptions](eraOptions, {});\n\n        this.signFake(address, signOptions);\n        return api.rpc.payment.queryInfo(this.toHex());\n      })))();\n    } // send with an immediate Hash result\n\n\n    // send implementation for both immediate Hash and statusCb variants\n    send(statusCb) {\n      const isSubscription = api.hasSubscriptions && (_classPrivateFieldLooseBase(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(isSubscription ? _classPrivateFieldLooseBase(this, _observeSubscribe)[_observeSubscribe] : _classPrivateFieldLooseBase(this, _observeSend)[_observeSend])(statusCb);\n    }\n    /**\n     * @description Sign a transaction, returning the this to allow chaining, i.e. .sign(...).send(). When options, e.g. nonce/blockHash are not specified, it will be inferred. To retrieve eg. nonce use `signAsync` (the preferred interface, this is provided for backwards compatibility)\n     * @deprecated\n     */\n\n\n    sign(account, optionsOrNonce) {\n      super.sign(account, _classPrivateFieldLooseBase(this, _makeSignOptions)[_makeSignOptions](_classPrivateFieldLooseBase(this, _optionsOrNonce)[_optionsOrNonce](optionsOrNonce), {}));\n      return this;\n    }\n    /**\n     * @description Signs a transaction, returning `this` to allow chaining. E.g.: `sign(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.\n     */\n\n\n    signAsync(account, optionsOrNonce) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n      return decorateMethod(() => _classPrivateFieldLooseBase(this, _observeSign)[_observeSign](account, optionsOrNonce).pipe(mapTo(this)))();\n    } // signAndSend with an immediate Hash result\n\n\n    // signAndSend implementation for all 3 cases above\n    signAndSend(account, optionsOrStatus, optionalStatusCb) {\n      const [options, statusCb] = _classPrivateFieldLooseBase(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrStatus, optionalStatusCb);\n\n      const isSubscription = api.hasSubscriptions && (_classPrivateFieldLooseBase(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(() => _classPrivateFieldLooseBase(this, _observeSign)[_observeSign](account, options).pipe(switchMap(updateId => isSubscription ? _classPrivateFieldLooseBase(this, _observeSubscribe)[_observeSubscribe](updateId) : _classPrivateFieldLooseBase(this, _observeSend)[_observeSend](updateId))) // FIXME This is wrong, SubmittableResult is _not_ a codec\n      )(statusCb);\n    } // adds a transform to the result, applied before result is returned\n\n\n    withResultTransform(transform) {\n      _classPrivateFieldLooseBase(this, _transformResult)[_transformResult] = transform;\n      return this;\n    }\n\n  }\n\n  return Submittable;\n}"]},"metadata":{},"sourceType":"module"}