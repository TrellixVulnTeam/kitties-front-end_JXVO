{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexAddPrefix } from \"./addPrefix.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\n/**\n * @name hexFixLength\n * @summary Shifts a hex string to a specific bitLength\n * @description\n * Returns a `0x` prefixed string with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length. Input values with less bits are returned as-is by default. When `withPadding` is set, shorter values are padded with `0`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexFixLength } from '@polkadot/util';\n *\n * console.log('fixed', hexFixLength('0x12', 16)); // => 0x12\n * console.log('fixed', hexFixLength('0x12', 16, true)); // => 0x0012\n * console.log('fixed', hexFixLength('0x0012', 8)); // => 0x12\n * ```\n */\n\nexport function hexFixLength(value) {\n  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  var withPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var strLength = Math.ceil(bitLength / 4);\n  var hexLength = strLength + 2;\n  return hexAddPrefix(bitLength === -1 || value.length === hexLength || !withPadding && value.length < hexLength ? hexStripPrefix(value) : value.length > hexLength ? hexStripPrefix(value).slice(-1 * strLength) : \"\".concat('0'.repeat(strLength)).concat(hexStripPrefix(value)).slice(-1 * strLength));\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/util/hex/fixLength.js"],"names":["hexAddPrefix","hexStripPrefix","hexFixLength","value","bitLength","withPadding","strLength","Math","ceil","hexLength","length","slice","repeat"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAkE;AAAA,MAArCC,SAAqC,uEAAzB,CAAC,CAAwB;AAAA,MAArBC,WAAqB,uEAAP,KAAO;AACvE,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,SAAS,GAAG,CAAtB,CAAlB;AACA,MAAMK,SAAS,GAAGH,SAAS,GAAG,CAA9B;AACA,SAAON,YAAY,CAACI,SAAS,KAAK,CAAC,CAAf,IAAoBD,KAAK,CAACO,MAAN,KAAiBD,SAArC,IAAkD,CAACJ,WAAD,IAAgBF,KAAK,CAACO,MAAN,GAAeD,SAAjF,GAA6FR,cAAc,CAACE,KAAD,CAA3G,GAAqHA,KAAK,CAACO,MAAN,GAAeD,SAAf,GAA2BR,cAAc,CAACE,KAAD,CAAd,CAAsBQ,KAAtB,CAA4B,CAAC,CAAD,GAAKL,SAAjC,CAA3B,GAAyE,UAAG,IAAIM,MAAJ,CAAWN,SAAX,CAAH,SAA2BL,cAAc,CAACE,KAAD,CAAzC,EAAmDQ,KAAnD,CAAyD,CAAC,CAAD,GAAKL,SAA9D,CAA/L,CAAnB;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexAddPrefix } from \"./addPrefix.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\n/**\n * @name hexFixLength\n * @summary Shifts a hex string to a specific bitLength\n * @description\n * Returns a `0x` prefixed string with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length. Input values with less bits are returned as-is by default. When `withPadding` is set, shorter values are padded with `0`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexFixLength } from '@polkadot/util';\n *\n * console.log('fixed', hexFixLength('0x12', 16)); // => 0x12\n * console.log('fixed', hexFixLength('0x12', 16, true)); // => 0x0012\n * console.log('fixed', hexFixLength('0x0012', 8)); // => 0x12\n * ```\n */\n\nexport function hexFixLength(value, bitLength = -1, withPadding = false) {\n  const strLength = Math.ceil(bitLength / 4);\n  const hexLength = strLength + 2;\n  return hexAddPrefix(bitLength === -1 || value.length === hexLength || !withPadding && value.length < hexLength ? hexStripPrefix(value) : value.length > hexLength ? hexStripPrefix(value).slice(-1 * strLength) : `${'0'.repeat(strLength)}${hexStripPrefix(value)}`.slice(-1 * strLength));\n}"]},"metadata":{},"sourceType":"module"}