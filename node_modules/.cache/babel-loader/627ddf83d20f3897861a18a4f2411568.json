{"ast":null,"code":"import _defineProperty from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Input,Grid,Label,Icon}from'semantic-ui-react';import{TxButton}from'./substrate-lib/components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Main(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _useState3=useState({addressTo:null,amount:0}),_useState4=_slicedToArray(_useState3,2),formState=_useState4[0],setFormState=_useState4[1];var accountPair=props.accountPair;var onChange=function onChange(_,data){return setFormState(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},data.state,data.value));});};var addressTo=formState.addressTo,amount=formState.amount;return/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Transfer\"}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsxs(Label,{basic:true,color:\"teal\",children:[/*#__PURE__*/_jsx(Icon,{name:\"hand point right\"}),\"1 Unit = 1000000000000\"]})}),/*#__PURE__*/_jsx(Form.Field,{children:\"Transfer more than the existential amount for account with 0 balance\"}),/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Input,{fluid:true,label:\"To\",type:\"text\",placeholder:\"address\",state:\"addressTo\",onChange:onChange})}),/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Input,{fluid:true,label:\"Amount\",type:\"number\",state:\"amount\",onChange:onChange})}),/*#__PURE__*/_jsx(Form.Field,{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(TxButton,{accountPair:accountPair,label:\"Submit\",type:\"SIGNED-TX\",setStatus:setStatus,attrs:{palletRpc:'balances',callable:'transfer',inputParams:[addressTo,amount],paramFields:[true,true]}})}),/*#__PURE__*/_jsx(\"div\",{style:{overflowWrap:'break-word'},children:status})]})]});}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/src/Transfer.js"],"names":["React","useState","Form","Input","Grid","Label","Icon","TxButton","Main","props","status","setStatus","addressTo","amount","formState","setFormState","accountPair","onChange","_","data","prev","state","value","textAlign","palletRpc","callable","inputParams","paramFields","overflowWrap"],"mappings":"ylBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,IAAtB,CAA4BC,KAA5B,CAAmCC,IAAnC,KAA+C,mBAA/C,CACA,OAASC,QAAT,KAAyB,4BAAzB,C,wFAEA,cAAe,SAASC,CAAAA,IAAT,CAAeC,KAAf,CAAsB,CACnC,cAA4BR,QAAQ,CAAC,IAAD,CAApC,wCAAOS,MAAP,eAAeC,SAAf,eACA,eAAkCV,QAAQ,CAAC,CAAEW,SAAS,CAAE,IAAb,CAAmBC,MAAM,CAAE,CAA3B,CAAD,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eACA,GAAQC,CAAAA,WAAR,CAAwBP,KAAxB,CAAQO,WAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAIC,IAAJ,QACfJ,CAAAA,YAAY,CAAC,SAAAK,IAAI,wCAAUA,IAAV,wBAAiBD,IAAI,CAACE,KAAtB,CAA8BF,IAAI,CAACG,KAAnC,IAAL,CADG,EAAjB,CAGA,GAAQV,CAAAA,SAAR,CAA8BE,SAA9B,CAAQF,SAAR,CAAmBC,MAAnB,CAA8BC,SAA9B,CAAmBD,MAAnB,CAEA,mBACE,MAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,wBACE,gCADF,cAEE,MAAC,IAAD,yBACE,KAAC,IAAD,CAAM,KAAN,wBACE,MAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,KAAK,CAAC,MAAnB,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,kBAAX,EADF,4BADF,EADF,cAOE,KAAC,IAAD,CAAM,KAAN,mFAPF,cAQE,KAAC,IAAD,CAAM,KAAN,wBACE,KAAC,KAAD,EACE,KAAK,KADP,CAEE,KAAK,CAAC,IAFR,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,SAJd,CAKE,KAAK,CAAC,WALR,CAME,QAAQ,CAAEI,QANZ,EADF,EARF,cAkBE,KAAC,IAAD,CAAM,KAAN,wBACE,KAAC,KAAD,EACE,KAAK,KADP,CAEE,KAAK,CAAC,QAFR,CAGE,IAAI,CAAC,QAHP,CAIE,KAAK,CAAC,QAJR,CAKE,QAAQ,CAAEA,QALZ,EADF,EAlBF,cA2BE,KAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAE,CAAEM,SAAS,CAAE,QAAb,CAAnB,uBACE,KAAC,QAAD,EACE,WAAW,CAAEP,WADf,CAEE,KAAK,CAAC,QAFR,CAGE,IAAI,CAAC,WAHP,CAIE,SAAS,CAAEL,SAJb,CAKE,KAAK,CAAE,CACLa,SAAS,CAAE,UADN,CAELC,QAAQ,CAAE,UAFL,CAGLC,WAAW,CAAE,CAACd,SAAD,CAAYC,MAAZ,CAHR,CAILc,WAAW,CAAE,CAAC,IAAD,CAAO,IAAP,CAJR,CALT,EADF,EA3BF,cAyCE,YAAK,KAAK,CAAE,CAAEC,YAAY,CAAE,YAAhB,CAAZ,UAA6ClB,MAA7C,EAzCF,GAFF,GADF,CAgDD","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Input, Grid, Label, Icon } from 'semantic-ui-react'\nimport { TxButton } from './substrate-lib/components'\n\nexport default function Main (props) {\n  const [status, setStatus] = useState(null)\n  const [formState, setFormState] = useState({ addressTo: null, amount: 0 })\n  const { accountPair } = props\n\n  const onChange = (_, data) =>\n    setFormState(prev => ({ ...prev, [data.state]: data.value }))\n\n  const { addressTo, amount } = formState\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Transfer</h1>\n      <Form>\n        <Form.Field>\n          <Label basic color='teal'>\n            <Icon name='hand point right' />\n            1 Unit = 1000000000000\n          </Label>\n        </Form.Field>\n        <Form.Field>Transfer more than the existential amount for account with 0 balance</Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label='To'\n            type='text'\n            placeholder='address'\n            state='addressTo'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label='Amount'\n            type='number'\n            state='amount'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Submit'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'balances',\n              callable: 'transfer',\n              inputParams: [addressTo, amount],\n              paramFields: [true, true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}