{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n/**\n * @name idToIndex\n * @param {( AccountId | string )} accountId - An accounts Id in different formats.\n * @returns Returns the corresponding AccountIndex.\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';\n * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {\n *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);\n * });\n * ```\n */\n\nexport function idToIndex(instanceId, api) {\n  return memo(instanceId, function (accountId) {\n    return api.derive.accounts.indexes().pipe(map(function (indexes) {\n      return (indexes || {})[accountId.toString()];\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/accounts/idToIndex.js"],"names":["map","memo","idToIndex","instanceId","api","accountId","derive","accounts","indexes","pipe","toString"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,QAAoB,MAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,GAA/B,EAAoC;AACzC,SAAOH,IAAI,CAACE,UAAD,EAAa,UAAAE,SAAS;AAAA,WAAID,GAAG,CAACE,MAAJ,CAAWC,QAAX,CAAoBC,OAApB,GAA8BC,IAA9B,CAAmCT,GAAG,CAAC,UAAAQ,OAAO;AAAA,aAAI,CAACA,OAAO,IAAI,EAAZ,EAAgBH,SAAS,CAACK,QAAV,EAAhB,CAAJ;AAAA,KAAR,CAAtC,CAAJ;AAAA,GAAtB,CAAX;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n/**\n * @name idToIndex\n * @param {( AccountId | string )} accountId - An accounts Id in different formats.\n * @returns Returns the corresponding AccountIndex.\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';\n * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {\n *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);\n * });\n * ```\n */\n\nexport function idToIndex(instanceId, api) {\n  return memo(instanceId, accountId => api.derive.accounts.indexes().pipe(map(indexes => (indexes || {})[accountId.toString()])));\n}"]},"metadata":{},"sourceType":"module"}