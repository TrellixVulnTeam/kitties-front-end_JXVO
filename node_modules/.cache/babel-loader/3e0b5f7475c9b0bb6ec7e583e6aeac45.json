{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of } from 'rxjs';\nimport { memo } from \"../util/index.js\"; // parse into Indexes\n\nfunction parse(_ref) {\n  var _ref2 = _slicedToArray(_ref, 5),\n      currentIndex = _ref2[0],\n      activeEra = _ref2[1],\n      activeEraStart = _ref2[2],\n      currentEra = _ref2[3],\n      validatorCount = _ref2[4];\n\n  return {\n    activeEra: activeEra,\n    activeEraStart: activeEraStart,\n    currentEra: currentEra,\n    currentIndex: currentIndex,\n    validatorCount: validatorCount\n  };\n} // query based on latest\n\n\nfunction queryStaking(api) {\n  return api.queryMulti([api.query.session.currentIndex, api.query.staking.activeEra, api.query.staking.currentEra, api.query.staking.validatorCount]).pipe(map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 4),\n        currentIndex = _ref4[0],\n        activeOpt = _ref4[1],\n        currentEra = _ref4[2],\n        validatorCount = _ref4[3];\n\n    var _activeOpt$unwrapOrDe = activeOpt.unwrapOrDefault(),\n        index = _activeOpt$unwrapOrDe.index,\n        start = _activeOpt$unwrapOrDe.start;\n\n    return parse([currentIndex, index, start, currentEra.unwrapOrDefault(), validatorCount]);\n  }));\n} // query based on latest\n\n\nfunction querySession(api) {\n  return api.query.session.currentIndex().pipe(map(function (currentIndex) {\n    return parse([currentIndex, api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')]);\n  }));\n} // empty set when none is available\n\n\nfunction empty(api) {\n  return of(parse([api.registry.createType('SessionIndex', 1), api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')]));\n}\n\nexport function indexes(instanceId, api) {\n  return memo(instanceId, function () {\n    return api.query.session ? api.query.staking ? queryStaking(api) : querySession(api) : empty(api);\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/session/indexes.js"],"names":["map","of","memo","parse","currentIndex","activeEra","activeEraStart","currentEra","validatorCount","queryStaking","api","queryMulti","query","session","staking","pipe","activeOpt","unwrapOrDefault","index","start","querySession","registry","createType","empty","indexes","instanceId"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of } from 'rxjs';\nimport { memo } from \"../util/index.js\"; // parse into Indexes\n\nfunction parse([currentIndex, activeEra, activeEraStart, currentEra, validatorCount]) {\n  return {\n    activeEra,\n    activeEraStart,\n    currentEra,\n    currentIndex,\n    validatorCount\n  };\n} // query based on latest\n\n\nfunction queryStaking(api) {\n  return api.queryMulti([api.query.session.currentIndex, api.query.staking.activeEra, api.query.staking.currentEra, api.query.staking.validatorCount]).pipe(map(([currentIndex, activeOpt, currentEra, validatorCount]) => {\n    const {\n      index,\n      start\n    } = activeOpt.unwrapOrDefault();\n    return parse([currentIndex, index, start, currentEra.unwrapOrDefault(), validatorCount]);\n  }));\n} // query based on latest\n\n\nfunction querySession(api) {\n  return api.query.session.currentIndex().pipe(map(currentIndex => parse([currentIndex, api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')])));\n} // empty set when none is available\n\n\nfunction empty(api) {\n  return of(parse([api.registry.createType('SessionIndex', 1), api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')]));\n}\n\nexport function indexes(instanceId, api) {\n  return memo(instanceId, () => api.query.session ? api.query.staking ? queryStaking(api) : querySession(api) : empty(api));\n}"]},"metadata":{},"sourceType":"module"}