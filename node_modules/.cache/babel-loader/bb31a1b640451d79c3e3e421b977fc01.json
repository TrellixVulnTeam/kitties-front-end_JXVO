{"ast":null,"code":"import _objectSpread from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Grid,Modal,Button,Card}from'semantic-ui-react';import{useSubstrate}from'./substrate-lib';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(props){var _useSubstrate=useSubstrate(),api=_useSubstrate.api;var _useState=useState({data:null,version:null}),_useState2=_slicedToArray(_useState,2),metadata=_useState2[0],setMetadata=_useState2[1];useEffect(function(){var getMetadata=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.rpc.state.getMetadata();case 3:data=_context.sent;setMetadata({data:data,version:data.version});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function getMetadata(){return _ref.apply(this,arguments);};}();getMetadata();},[api.rpc.state]);return/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Card.Content,{children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Metadata\"}),/*#__PURE__*/_jsx(Card.Meta,{children:/*#__PURE__*/_jsxs(\"span\",{children:[\"v\",metadata.version]})})]}),/*#__PURE__*/_jsx(Card.Content,{extra:true,children:/*#__PURE__*/_jsxs(Modal,{trigger:/*#__PURE__*/_jsx(Button,{children:\"Show Metadata\"}),children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Runtime Metadata\"}),/*#__PURE__*/_jsx(Modal.Content,{scrolling:true,children:/*#__PURE__*/_jsx(Modal.Description,{children:/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{children:JSON.stringify(metadata.data,null,2)})})})})]})})]})});}export default function Metadata(props){var _useSubstrate2=useSubstrate(),api=_useSubstrate2.api;return api.rpc&&api.rpc.state&&api.rpc.state.getMetadata?/*#__PURE__*/_jsx(Main,_objectSpread({},props)):null;}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/src/Metadata.js"],"names":["React","useEffect","useState","Grid","Modal","Button","Card","useSubstrate","Main","props","api","data","version","metadata","setMetadata","getMetadata","rpc","state","console","error","JSON","stringify","Metadata"],"mappings":"4xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,IAA9B,KAA0C,mBAA1C,CAEA,OAASC,YAAT,KAA6B,iBAA7B,C,wFAEA,QAASC,CAAAA,IAAT,CAAeC,KAAf,CAAsB,CACpB,kBAAgBF,YAAY,EAA5B,CAAQG,GAAR,eAAQA,GAAR,CACA,cAAgCR,QAAQ,CAAC,CAAES,IAAI,CAAE,IAAR,CAAcC,OAAO,CAAE,IAAvB,CAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eAEAb,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,WAAW,0FAAG,kLAEGL,CAAAA,GAAG,CAACM,GAAJ,CAAQC,KAAR,CAAcF,WAAd,EAFH,QAEVJ,IAFU,eAGhBG,WAAW,CAAC,CAAEH,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAED,IAAI,CAACC,OAAtB,CAAD,CAAX,CAHgB,+EAKhBM,OAAO,CAACC,KAAR,cALgB,oEAAH,kBAAXJ,CAAAA,WAAW,0CAAjB,CAQAA,WAAW,GACZ,CAVQ,CAUN,CAACL,GAAG,CAACM,GAAJ,CAAQC,KAAT,CAVM,CAAT,CAYA,mBACE,KAAC,IAAD,CAAM,MAAN,wBACE,MAAC,IAAD,yBACE,MAAC,IAAD,CAAM,OAAN,yBACE,KAAC,IAAD,CAAM,MAAN,uBADF,cAEE,KAAC,IAAD,CAAM,IAAN,wBACE,4BAAQJ,QAAQ,CAACD,OAAjB,GADF,EAFF,GADF,cAOE,KAAC,IAAD,CAAM,OAAN,EAAc,KAAK,KAAnB,uBACE,MAAC,KAAD,EAAO,OAAO,cAAE,KAAC,MAAD,4BAAhB,wBACE,KAAC,KAAD,CAAO,MAAP,+BADF,cAEE,KAAC,KAAD,CAAO,OAAP,EAAe,SAAS,KAAxB,uBACE,KAAC,KAAD,CAAO,WAAP,wBACE,kCACE,sBAAOQ,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACF,IAAxB,CAA8B,IAA9B,CAAoC,CAApC,CAAP,EADF,EADF,EADF,EAFF,GADF,EAPF,GADF,EADF,CAwBD,CAED,cAAe,SAASW,CAAAA,QAAT,CAAmBb,KAAnB,CAA0B,CACvC,mBAAgBF,YAAY,EAA5B,CAAQG,GAAR,gBAAQA,GAAR,CACA,MAAOA,CAAAA,GAAG,CAACM,GAAJ,EAAWN,GAAG,CAACM,GAAJ,CAAQC,KAAnB,EAA4BP,GAAG,CAACM,GAAJ,CAAQC,KAAR,CAAcF,WAA1C,cAEL,KAAC,IAAD,kBAAUN,KAAV,EAFK,CAIH,IAJJ,CAKD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [metadata, setMetadata] = useState({ data: null, version: null })\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      try {\n        const data = await api.rpc.state.getMetadata()\n        setMetadata({ data, version: data.version })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getMetadata()\n  }, [api.rpc.state])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>Metadata</Card.Header>\n          <Card.Meta>\n            <span>v{metadata.version}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <Modal trigger={<Button>Show Metadata</Button>}>\n            <Modal.Header>Runtime Metadata</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <pre>\n                  <code>{JSON.stringify(metadata.data, null, 2)}</code>\n                </pre>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function Metadata (props) {\n  const { api } = useSubstrate()\n  return api.rpc && api.rpc.state && api.rpc.state.getMetadata\n    ? (\n    <Main {...props} />\n      )\n    : null\n}\n"]},"metadata":{},"sourceType":"module"}