{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringToU8a } from '@polkadot/util';\nimport { bip39ToMiniSecret, isReady } from '@polkadot/wasm-crypto';\nimport { pbkdf2Encode } from \"../pbkdf2/index.js\";\nimport { mnemonicToEntropy } from \"./toEntropy.js\";\nimport { mnemonicValidate } from \"./validate.js\";\nexport function mnemonicToMiniSecret(mnemonic) {\n  var password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var onlyJs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  assert(mnemonicValidate(mnemonic), 'Invalid bip39 mnemonic specified');\n\n  if (isReady() && !onlyJs) {\n    return bip39ToMiniSecret(mnemonic, password);\n  }\n\n  var entropy = mnemonicToEntropy(mnemonic);\n  var salt = stringToU8a(\"mnemonic\".concat(password)); // return the first 32 bytes as the seed\n\n  return pbkdf2Encode(entropy, salt).password.slice(0, 32);\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js"],"names":["assert","stringToU8a","bip39ToMiniSecret","isReady","pbkdf2Encode","mnemonicToEntropy","mnemonicValidate","mnemonicToMiniSecret","mnemonic","password","onlyJs","entropy","salt","slice"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,gBAApC;AACA,SAASC,iBAAT,EAA4BC,OAA5B,QAA2C,uBAA3C;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAO,SAASC,oBAAT,CAA8BC,QAA9B,EAAuE;AAAA,MAA/BC,QAA+B,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;AAC5EV,EAAAA,MAAM,CAACM,gBAAgB,CAACE,QAAD,CAAjB,EAA6B,kCAA7B,CAAN;;AAEA,MAAIL,OAAO,MAAM,CAACO,MAAlB,EAA0B;AACxB,WAAOR,iBAAiB,CAACM,QAAD,EAAWC,QAAX,CAAxB;AACD;;AAED,MAAME,OAAO,GAAGN,iBAAiB,CAACG,QAAD,CAAjC;AACA,MAAMI,IAAI,GAAGX,WAAW,mBAAYQ,QAAZ,EAAxB,CAR4E,CAQ3B;;AAEjD,SAAOL,YAAY,CAACO,OAAD,EAAUC,IAAV,CAAZ,CAA4BH,QAA5B,CAAqCI,KAArC,CAA2C,CAA3C,EAA8C,EAA9C,CAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringToU8a } from '@polkadot/util';\nimport { bip39ToMiniSecret, isReady } from '@polkadot/wasm-crypto';\nimport { pbkdf2Encode } from \"../pbkdf2/index.js\";\nimport { mnemonicToEntropy } from \"./toEntropy.js\";\nimport { mnemonicValidate } from \"./validate.js\";\nexport function mnemonicToMiniSecret(mnemonic, password = '', onlyJs = false) {\n  assert(mnemonicValidate(mnemonic), 'Invalid bip39 mnemonic specified');\n\n  if (isReady() && !onlyJs) {\n    return bip39ToMiniSecret(mnemonic, password);\n  }\n\n  const entropy = mnemonicToEntropy(mnemonic);\n  const salt = stringToU8a(`mnemonic${password}`); // return the first 32 bytes as the seed\n\n  return pbkdf2Encode(entropy, salt).password.slice(0, 32);\n}"]},"metadata":{},"sourceType":"module"}