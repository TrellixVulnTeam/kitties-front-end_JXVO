{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, isUndefined } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nvar LOCKUPS = [0, 1, 2, 4, 8, 16, 32];\n\nfunction parseEnd(api, vote, _ref) {\n  var approved = _ref.approved,\n      end = _ref.end;\n  return [end, approved.isTrue && vote.isAye || approved.isFalse && vote.isNay ? end.add(api.consts.democracy.enactmentPeriod.muln(LOCKUPS[vote.conviction.index])) : BN_ZERO];\n}\n\nfunction parseLock(api, _ref2, referendum) {\n  var _ref3 = _slicedToArray(_ref2, 2),\n      referendumId = _ref3[0],\n      accountVote = _ref3[1];\n\n  var _accountVote$asStanda = accountVote.asStandard,\n      balance = _accountVote$asStanda.balance,\n      vote = _accountVote$asStanda.vote;\n\n  var _ref4 = referendum.isFinished ? parseEnd(api, vote, referendum.asFinished) : [BN_ZERO, BN_ZERO],\n      _ref5 = _slicedToArray(_ref4, 2),\n      referendumEnd = _ref5[0],\n      unlockAt = _ref5[1];\n\n  return {\n    balance: balance,\n    isDelegated: false,\n    isFinished: referendum.isFinished,\n    referendumEnd: referendumEnd,\n    referendumId: referendumId,\n    unlockAt: unlockAt,\n    vote: vote\n  };\n}\n\nfunction delegateLocks(api, _ref6) {\n  var balance = _ref6.balance,\n      conviction = _ref6.conviction,\n      target = _ref6.target;\n  return api.derive.democracy.locks(target).pipe(map(function (available) {\n    return available.map(function (_ref7) {\n      var isFinished = _ref7.isFinished,\n          referendumEnd = _ref7.referendumEnd,\n          referendumId = _ref7.referendumId,\n          unlockAt = _ref7.unlockAt,\n          vote = _ref7.vote;\n      return {\n        balance: balance,\n        isDelegated: true,\n        isFinished: isFinished,\n        referendumEnd: referendumEnd,\n        referendumId: referendumId,\n        unlockAt: unlockAt.isZero() ? unlockAt : referendumEnd.add(api.consts.democracy.enactmentPeriod.muln(LOCKUPS[conviction.index])),\n        vote: api.registry.createType('Vote', {\n          aye: vote.isAye,\n          conviction: conviction\n        })\n      };\n    });\n  }));\n}\n\nfunction directLocks(api, _ref8) {\n  var votes = _ref8.votes;\n\n  if (!votes.length) {\n    return of([]);\n  }\n\n  return api.query.democracy.referendumInfoOf.multi(votes.map(function (_ref9) {\n    var _ref10 = _slicedToArray(_ref9, 1),\n        referendumId = _ref10[0];\n\n    return referendumId;\n  })).pipe(map(function (referendums) {\n    return votes.map(function (vote, index) {\n      return [vote, referendums[index].unwrapOr(null)];\n    }).filter(function (item) {\n      return !!item[1] && isUndefined(item[1].end) && item[0][1].isStandard;\n    }).map(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n          directVote = _ref12[0],\n          referendum = _ref12[1];\n\n      return parseLock(api, directVote, referendum);\n    });\n  }));\n}\n\nexport function locks(instanceId, api) {\n  return memo(instanceId, function (accountId) {\n    return api.query.democracy.votingOf ? api.query.democracy.votingOf(accountId).pipe(switchMap(function (voting) {\n      return voting.isDirect ? directLocks(api, voting.asDirect) : voting.isDelegating ? delegateLocks(api, voting.asDelegating) : of([]);\n    })) : of([]);\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/democracy/locks.js"],"names":["map","of","switchMap","BN_ZERO","isUndefined","memo","LOCKUPS","parseEnd","api","vote","approved","end","isTrue","isAye","isFalse","isNay","add","consts","democracy","enactmentPeriod","muln","conviction","index","parseLock","referendum","referendumId","accountVote","asStandard","balance","isFinished","asFinished","referendumEnd","unlockAt","isDelegated","delegateLocks","target","derive","locks","pipe","available","isZero","registry","createType","aye","directLocks","votes","length","query","referendumInfoOf","multi","referendums","unwrapOr","filter","item","isStandard","directVote","instanceId","accountId","votingOf","voting","isDirect","asDirect","isDelegating","asDelegating"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, isUndefined } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nconst LOCKUPS = [0, 1, 2, 4, 8, 16, 32];\n\nfunction parseEnd(api, vote, {\n  approved,\n  end\n}) {\n  return [end, approved.isTrue && vote.isAye || approved.isFalse && vote.isNay ? end.add(api.consts.democracy.enactmentPeriod.muln(LOCKUPS[vote.conviction.index])) : BN_ZERO];\n}\n\nfunction parseLock(api, [referendumId, accountVote], referendum) {\n  const {\n    balance,\n    vote\n  } = accountVote.asStandard;\n  const [referendumEnd, unlockAt] = referendum.isFinished ? parseEnd(api, vote, referendum.asFinished) : [BN_ZERO, BN_ZERO];\n  return {\n    balance,\n    isDelegated: false,\n    isFinished: referendum.isFinished,\n    referendumEnd,\n    referendumId,\n    unlockAt,\n    vote\n  };\n}\n\nfunction delegateLocks(api, {\n  balance,\n  conviction,\n  target\n}) {\n  return api.derive.democracy.locks(target).pipe(map(available => available.map(({\n    isFinished,\n    referendumEnd,\n    referendumId,\n    unlockAt,\n    vote\n  }) => ({\n    balance,\n    isDelegated: true,\n    isFinished,\n    referendumEnd,\n    referendumId,\n    unlockAt: unlockAt.isZero() ? unlockAt : referendumEnd.add(api.consts.democracy.enactmentPeriod.muln(LOCKUPS[conviction.index])),\n    vote: api.registry.createType('Vote', {\n      aye: vote.isAye,\n      conviction\n    })\n  }))));\n}\n\nfunction directLocks(api, {\n  votes\n}) {\n  if (!votes.length) {\n    return of([]);\n  }\n\n  return api.query.democracy.referendumInfoOf.multi(votes.map(([referendumId]) => referendumId)).pipe(map(referendums => votes.map((vote, index) => [vote, referendums[index].unwrapOr(null)]).filter(item => !!item[1] && isUndefined(item[1].end) && item[0][1].isStandard).map(([directVote, referendum]) => parseLock(api, directVote, referendum))));\n}\n\nexport function locks(instanceId, api) {\n  return memo(instanceId, accountId => api.query.democracy.votingOf ? api.query.democracy.votingOf(accountId).pipe(switchMap(voting => voting.isDirect ? directLocks(api, voting.asDirect) : voting.isDelegating ? delegateLocks(api, voting.asDelegating) : of([]))) : of([]));\n}"]},"metadata":{},"sourceType":"module"}