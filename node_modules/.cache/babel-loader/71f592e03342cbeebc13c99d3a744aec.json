{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\nimport { blake2AsU8a } from \"./asU8a.js\";\n/**\n * @name blake2AsHex\n * @summary Creates a blake2b hex from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a hex string with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsHex } from '@polkadot/util-crypto';\n *\n * blake2AsHex('abc'); // => 0xba80a53f981c4d0d\n * ```\n */\n\nexport function blake2AsHex(data) {\n  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 256;\n  var key = arguments.length > 2 ? arguments[2] : undefined;\n  var onlyJs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  return u8aToHex(blake2AsU8a(data, bitLength, key, onlyJs));\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/util-crypto/blake2/asHex.js"],"names":["u8aToHex","blake2AsU8a","blake2AsHex","data","bitLength","key","onlyJs"],"mappings":"AAAA;AACA;AACA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAAiE;AAAA,MAAtCC,SAAsC,uEAA1B,GAA0B;AAAA,MAArBC,GAAqB;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;AACtE,SAAON,QAAQ,CAACC,WAAW,CAACE,IAAD,EAAOC,SAAP,EAAkBC,GAAlB,EAAuBC,MAAvB,CAAZ,CAAf;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\nimport { blake2AsU8a } from \"./asU8a.js\";\n/**\n * @name blake2AsHex\n * @summary Creates a blake2b hex from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a hex string with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsHex } from '@polkadot/util-crypto';\n *\n * blake2AsHex('abc'); // => 0xba80a53f981c4d0d\n * ```\n */\n\nexport function blake2AsHex(data, bitLength = 256, key, onlyJs = false) {\n  return u8aToHex(blake2AsU8a(data, bitLength, key, onlyJs));\n}"]},"metadata":{},"sourceType":"module"}