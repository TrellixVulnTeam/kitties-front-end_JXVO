{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable } from 'rxjs';\nimport { memoize } from '@polkadot/util';\nimport { drr } from \"./drr.js\"; // Wraps a derive, doing 2 things to optimize calls -\n//   1. creates a memo of the inner fn -> Observable, removing when unsubscribed\n//   2. wraps the observable in a drr() (which includes an unsub delay)\n\n/** @internal */\n\nexport function memo(instanceId, inner) {\n  var options = {\n    getInstanceId: function getInstanceId() {\n      return instanceId;\n    }\n  };\n  var cached = memoize(function () {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    return new Observable(function (observer) {\n      var subscription = inner.apply(void 0, params).subscribe(observer);\n      return function () {\n        cached.unmemoize.apply(cached, params);\n        subscription.unsubscribe();\n      };\n    }).pipe(drr());\n  }, options);\n  return cached;\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/rpc-core/util/memo.js"],"names":["Observable","memoize","drr","memo","instanceId","inner","options","getInstanceId","cached","params","observer","subscription","subscribe","unmemoize","unsubscribe","pipe"],"mappings":"AAAA;AACA;AACA,SAASA,UAAT,QAA2B,MAA3B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,GAAT,QAAoB,UAApB,C,CACA;AACA;AACA;;AAEA;;AACA,OAAO,SAASC,IAAT,CAAcC,UAAd,EAA0BC,KAA1B,EAAiC;AACtC,MAAMC,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAE;AAAA,aAAMH,UAAN;AAAA;AADD,GAAhB;AAGA,MAAMI,MAAM,GAAGP,OAAO,CAAC;AAAA,sCAAIQ,MAAJ;AAAIA,MAAAA,MAAJ;AAAA;;AAAA,WAAe,IAAIT,UAAJ,CAAe,UAAAU,QAAQ,EAAI;AAC/D,UAAMC,YAAY,GAAGN,KAAK,MAAL,SAASI,MAAT,EAAiBG,SAAjB,CAA2BF,QAA3B,CAArB;AACA,aAAO,YAAM;AACXF,QAAAA,MAAM,CAACK,SAAP,OAAAL,MAAM,EAAcC,MAAd,CAAN;AACAE,QAAAA,YAAY,CAACG,WAAb;AACD,OAHD;AAID,KANqC,EAMnCC,IANmC,CAM9Bb,GAAG,EAN2B,CAAf;AAAA,GAAD,EAMNI,OANM,CAAtB;AAOA,SAAOE,MAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable } from 'rxjs';\nimport { memoize } from '@polkadot/util';\nimport { drr } from \"./drr.js\";\n// Wraps a derive, doing 2 things to optimize calls -\n//   1. creates a memo of the inner fn -> Observable, removing when unsubscribed\n//   2. wraps the observable in a drr() (which includes an unsub delay)\n\n/** @internal */\nexport function memo(instanceId, inner) {\n  const options = {\n    getInstanceId: () => instanceId\n  };\n  const cached = memoize((...params) => new Observable(observer => {\n    const subscription = inner(...params).subscribe(observer);\n    return () => {\n      cached.unmemoize(...params);\n      subscription.unsubscribe();\n    };\n  }).pipe(drr()), options);\n  return cached;\n}"]},"metadata":{},"sourceType":"module"}