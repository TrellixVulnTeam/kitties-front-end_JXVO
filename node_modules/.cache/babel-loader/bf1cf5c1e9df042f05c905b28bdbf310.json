{"ast":null,"code":"// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { catchError, distinctUntilChanged, publishReplay, refCount, tap } from 'rxjs';\nimport { logger, stringify } from '@polkadot/util';\nimport { refCountDelay } from \"./refCountDelay.js\";\nvar l = logger('drr');\n\nvar CMP = function CMP(a, b) {\n  return stringify({\n    t: a\n  }) === stringify({\n    t: b\n  });\n};\n\nvar ERR = function ERR(error) {\n  l.error(error.message);\n  throw error;\n};\n\nvar NOOP = function NOOP() {\n  return undefined;\n};\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\n\n\nexport var drr = function drr() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      delay = _ref.delay,\n      _ref$skipChange = _ref.skipChange,\n      skipChange = _ref$skipChange === void 0 ? false : _ref$skipChange,\n      _ref$skipTimeout = _ref.skipTimeout,\n      skipTimeout = _ref$skipTimeout === void 0 ? false : _ref$skipTimeout;\n\n  return function (source$) {\n    return source$.pipe(catchError(ERR), skipChange ? tap(NOOP) : distinctUntilChanged(CMP), publishReplay(1), skipTimeout ? refCount() : refCountDelay(delay));\n  };\n};","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/rpc-core/util/drr.js"],"names":["catchError","distinctUntilChanged","publishReplay","refCount","tap","logger","stringify","refCountDelay","l","CMP","a","b","t","ERR","error","message","NOOP","undefined","drr","delay","skipChange","skipTimeout","source$","pipe"],"mappings":"AAAA;AACA;AACA,SAASA,UAAT,EAAqBC,oBAArB,EAA2CC,aAA3C,EAA0DC,QAA1D,EAAoEC,GAApE,QAA+E,MAA/E;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,gBAAlC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,IAAMC,CAAC,GAAGH,MAAM,CAAC,KAAD,CAAhB;;AAEA,IAAMI,GAAG,GAAG,SAANA,GAAM,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUL,SAAS,CAAC;AAC9BM,IAAAA,CAAC,EAAEF;AAD2B,GAAD,CAAT,KAEfJ,SAAS,CAAC;AACfM,IAAAA,CAAC,EAAED;AADY,GAAD,CAFJ;AAAA,CAAZ;;AAMA,IAAME,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AACnBN,EAAAA,CAAC,CAACM,KAAF,CAAQA,KAAK,CAACC,OAAd;AACA,QAAMD,KAAN;AACD,CAHD;;AAKA,IAAME,IAAI,GAAG,SAAPA,IAAO;AAAA,SAAMC,SAAN;AAAA,CAAb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,iFAIf,EAJe;AAAA,MACjBC,KADiB,QACjBA,KADiB;AAAA,6BAEjBC,UAFiB;AAAA,MAEjBA,UAFiB,gCAEJ,KAFI;AAAA,8BAGjBC,WAHiB;AAAA,MAGjBA,WAHiB,iCAGH,KAHG;;AAAA,SAIR,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACC,IAAR,CAAavB,UAAU,CAACa,GAAD,CAAvB,EAA8BO,UAAU,GAAGhB,GAAG,CAACY,IAAD,CAAN,GAAef,oBAAoB,CAACQ,GAAD,CAA3E,EAAkFP,aAAa,CAAC,CAAD,CAA/F,EAAoGmB,WAAW,GAAGlB,QAAQ,EAAX,GAAgBI,aAAa,CAACY,KAAD,CAA5I,CAAJ;AAAA,GAJC;AAAA,CAAZ","sourcesContent":["// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { catchError, distinctUntilChanged, publishReplay, refCount, tap } from 'rxjs';\nimport { logger, stringify } from '@polkadot/util';\nimport { refCountDelay } from \"./refCountDelay.js\";\nconst l = logger('drr');\n\nconst CMP = (a, b) => stringify({\n  t: a\n}) === stringify({\n  t: b\n});\n\nconst ERR = error => {\n  l.error(error.message);\n  throw error;\n};\n\nconst NOOP = () => undefined;\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\n\n\nexport const drr = ({\n  delay,\n  skipChange = false,\n  skipTimeout = false\n} = {}) => source$ => source$.pipe(catchError(ERR), skipChange ? tap(NOOP) : distinctUntilChanged(CMP), publishReplay(1), skipTimeout ? refCount() : refCountDelay(delay));"]},"metadata":{},"sourceType":"module"}