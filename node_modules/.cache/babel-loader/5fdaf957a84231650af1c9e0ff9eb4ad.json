{"ast":null,"code":"// Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeAddress } from '@polkadot/keyring';\nimport { u8aToHex } from '@polkadot/util';\nvar ACCOUNT_PREFIX = 'account:';\nvar ADDRESS_PREFIX = 'address:';\nvar CONTRACT_PREFIX = 'contract:';\n\nfunction toHex(address) {\n  return u8aToHex( // When saving pre-checksum changes, ensure that we can decode\n  decodeAddress(address, true));\n}\n\nvar accountKey = function accountKey(address) {\n  return \"\".concat(ACCOUNT_PREFIX).concat(toHex(address));\n};\n\nvar addressKey = function addressKey(address) {\n  return \"\".concat(ADDRESS_PREFIX).concat(toHex(address));\n};\n\nvar contractKey = function contractKey(address) {\n  return \"\".concat(CONTRACT_PREFIX).concat(toHex(address));\n};\n\nvar accountRegex = new RegExp(\"^\".concat(ACCOUNT_PREFIX, \"0x[0-9a-f]*\"), '');\nvar addressRegex = new RegExp(\"^\".concat(ADDRESS_PREFIX, \"0x[0-9a-f]*\"), '');\nvar contractRegex = new RegExp(\"^\".concat(CONTRACT_PREFIX, \"0x[0-9a-f]*\"), '');\nexport { accountKey, accountRegex, addressKey, addressRegex, contractKey, contractRegex };","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/ui-keyring/defaults.js"],"names":["decodeAddress","u8aToHex","ACCOUNT_PREFIX","ADDRESS_PREFIX","CONTRACT_PREFIX","toHex","address","accountKey","addressKey","contractKey","accountRegex","RegExp","addressRegex","contractRegex"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,IAAMC,cAAc,GAAG,UAAvB;AACA,IAAMC,cAAc,GAAG,UAAvB;AACA,IAAMC,eAAe,GAAG,WAAxB;;AAEA,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACtB,SAAOL,QAAQ,EAAE;AACjBD,EAAAA,aAAa,CAACM,OAAD,EAAU,IAAV,CADE,CAAf;AAED;;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAD,OAAO;AAAA,mBAAOJ,cAAP,SAAwBG,KAAK,CAACC,OAAD,CAA7B;AAAA,CAA1B;;AAEA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAF,OAAO;AAAA,mBAAOH,cAAP,SAAwBE,KAAK,CAACC,OAAD,CAA7B;AAAA,CAA1B;;AAEA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAH,OAAO;AAAA,mBAAOF,eAAP,SAAyBC,KAAK,CAACC,OAAD,CAA9B;AAAA,CAA3B;;AAEA,IAAMI,YAAY,GAAG,IAAIC,MAAJ,YAAeT,cAAf,kBAA4C,EAA5C,CAArB;AACA,IAAMU,YAAY,GAAG,IAAID,MAAJ,YAAeR,cAAf,kBAA4C,EAA5C,CAArB;AACA,IAAMU,aAAa,GAAG,IAAIF,MAAJ,YAAeP,eAAf,kBAA6C,EAA7C,CAAtB;AACA,SAASG,UAAT,EAAqBG,YAArB,EAAmCF,UAAnC,EAA+CI,YAA/C,EAA6DH,WAA7D,EAA0EI,aAA1E","sourcesContent":["// Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeAddress } from '@polkadot/keyring';\nimport { u8aToHex } from '@polkadot/util';\nconst ACCOUNT_PREFIX = 'account:';\nconst ADDRESS_PREFIX = 'address:';\nconst CONTRACT_PREFIX = 'contract:';\n\nfunction toHex(address) {\n  return u8aToHex( // When saving pre-checksum changes, ensure that we can decode\n  decodeAddress(address, true));\n}\n\nconst accountKey = address => `${ACCOUNT_PREFIX}${toHex(address)}`;\n\nconst addressKey = address => `${ADDRESS_PREFIX}${toHex(address)}`;\n\nconst contractKey = address => `${CONTRACT_PREFIX}${toHex(address)}`;\n\nconst accountRegex = new RegExp(`^${ACCOUNT_PREFIX}0x[0-9a-f]*`, '');\nconst addressRegex = new RegExp(`^${ADDRESS_PREFIX}0x[0-9a-f]*`, '');\nconst contractRegex = new RegExp(`^${CONTRACT_PREFIX}0x[0-9a-f]*`, '');\nexport { accountKey, accountRegex, addressKey, addressRegex, contractKey, contractRegex };"]},"metadata":{},"sourceType":"module"}