{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\nimport { Base } from \"../codec/Base.js\";\nimport { DEFAULT_VERSION } from \"./constants.js\";\nvar VERSIONS = ['ExtrinsicPayloadUnknown', // v0 is unknown\n'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadV4'];\n/**\n * @name GenericExtrinsicPayload\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\n\nexport var GenericExtrinsicPayload = /*#__PURE__*/function (_Base) {\n  _inherits(GenericExtrinsicPayload, _Base);\n\n  var _super = _createSuper(GenericExtrinsicPayload);\n\n  function GenericExtrinsicPayload(registry, value) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        version = _ref.version;\n\n    _classCallCheck(this, GenericExtrinsicPayload);\n\n    return _super.call(this, registry, GenericExtrinsicPayload.decodeExtrinsicPayload(registry, value, version));\n  }\n  /** @internal */\n\n\n  _createClass(GenericExtrinsicPayload, [{\n    key: \"blockHash\",\n    get:\n    /**\n     * @description The block [[Hash]] the signature applies to (mortal/immortal)\n     */\n    function get() {\n      return this._raw.blockHash;\n    }\n    /**\n     * @description The [[ExtrinsicEra]]\n     */\n\n  }, {\n    key: \"era\",\n    get: function get() {\n      return this._raw.era;\n    }\n    /**\n     * @description The genesis block [[Hash]] the signature applies to\n     */\n\n  }, {\n    key: \"genesisHash\",\n    get: function get() {\n      // NOTE only v3+\n      return this._raw.genesisHash || this.registry.createType('Hash');\n    }\n    /**\n     * @description The [[Raw]] contained in the payload\n     */\n\n  }, {\n    key: \"method\",\n    get: function get() {\n      return this._raw.method;\n    }\n    /**\n     * @description The [[Index]]\n     */\n\n  }, {\n    key: \"nonce\",\n    get: function get() {\n      return this._raw.nonce;\n    }\n    /**\n     * @description The specVersion as a [[u32]] for this payload\n     */\n\n  }, {\n    key: \"specVersion\",\n    get: function get() {\n      // NOTE only v3+\n      return this._raw.specVersion || this.registry.createType('u32');\n    }\n    /**\n     * @description The [[Balance]]\n     */\n\n  }, {\n    key: \"tip\",\n    get: function get() {\n      // NOTE from v2+\n      return this._raw.tip || this.registry.createType('Compact<Balance>');\n    }\n    /**\n     * @description The transaction version as a [[u32]] for this payload\n     */\n\n  }, {\n    key: \"transactionVersion\",\n    get: function get() {\n      // NOTE only v4+\n      return this._raw.transactionVersion || this.registry.createType('u32');\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return this._raw.eq(other);\n    }\n    /**\n     * @description Sign the payload with the keypair\n     */\n\n  }, {\n    key: \"sign\",\n    value: function sign(signerPair) {\n      var signature = this._raw.sign(signerPair); // This is extensible, so we could quite readily extend to send back extra\n      // information, such as for instance the payload, i.e. `payload: this.toHex()`\n      // For the case here we sign via the extrinsic, we ignore the return, so generally\n      // this is applicable for external signing\n\n\n      return {\n        signature: u8aToHex(signature)\n      };\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman(isExtended) {\n      return this._raw.toHuman(isExtended);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toHex();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.toHex();\n    }\n    /**\n     * @description Returns a serialized u8a form\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      // call our parent, with only the method stripped\n      return _get(_getPrototypeOf(GenericExtrinsicPayload.prototype), \"toU8a\", this).call(this, isBare ? {\n        method: true\n      } : false);\n    }\n  }], [{\n    key: \"decodeExtrinsicPayload\",\n    value: function decodeExtrinsicPayload(registry, value) {\n      var version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_VERSION;\n\n      if (value instanceof GenericExtrinsicPayload) {\n        return value._raw;\n      }\n\n      return registry.createType(VERSIONS[version] || VERSIONS[0], value, {\n        version: version\n      });\n    }\n  }]);\n\n  return GenericExtrinsicPayload;\n}(Base);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js"],"names":["u8aToHex","Base","DEFAULT_VERSION","VERSIONS","GenericExtrinsicPayload","registry","value","version","decodeExtrinsicPayload","_raw","blockHash","era","genesisHash","createType","method","nonce","specVersion","tip","transactionVersion","other","eq","signerPair","signature","sign","isExtended","toHuman","toHex","isBare"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\nimport { Base } from \"../codec/Base.js\";\nimport { DEFAULT_VERSION } from \"./constants.js\";\nconst VERSIONS = ['ExtrinsicPayloadUnknown', // v0 is unknown\n'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadV4'];\n/**\n * @name GenericExtrinsicPayload\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\n\nexport class GenericExtrinsicPayload extends Base {\n  constructor(registry, value, {\n    version\n  } = {}) {\n    super(registry, GenericExtrinsicPayload.decodeExtrinsicPayload(registry, value, version));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicPayload(registry, value, version = DEFAULT_VERSION) {\n    if (value instanceof GenericExtrinsicPayload) {\n      return value._raw;\n    }\n\n    return registry.createType(VERSIONS[version] || VERSIONS[0], value, {\n      version\n    });\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this._raw.blockHash;\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this._raw.era;\n  }\n  /**\n   * @description The genesis block [[Hash]] the signature applies to\n   */\n\n\n  get genesisHash() {\n    // NOTE only v3+\n    return this._raw.genesisHash || this.registry.createType('Hash');\n  }\n  /**\n   * @description The [[Raw]] contained in the payload\n   */\n\n\n  get method() {\n    return this._raw.method;\n  }\n  /**\n   * @description The [[Index]]\n   */\n\n\n  get nonce() {\n    return this._raw.nonce;\n  }\n  /**\n   * @description The specVersion as a [[u32]] for this payload\n   */\n\n\n  get specVersion() {\n    // NOTE only v3+\n    return this._raw.specVersion || this.registry.createType('u32');\n  }\n  /**\n   * @description The [[Balance]]\n   */\n\n\n  get tip() {\n    // NOTE from v2+\n    return this._raw.tip || this.registry.createType('Compact<Balance>');\n  }\n  /**\n   * @description The transaction version as a [[u32]] for this payload\n   */\n\n\n  get transactionVersion() {\n    // NOTE only v4+\n    return this._raw.transactionVersion || this.registry.createType('u32');\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this._raw.eq(other);\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n\n\n  sign(signerPair) {\n    const signature = this._raw.sign(signerPair); // This is extensible, so we could quite readily extend to send back extra\n    // information, such as for instance the payload, i.e. `payload: this.toHex()`\n    // For the case here we sign via the extrinsic, we ignore the return, so generally\n    // this is applicable for external signing\n\n\n    return {\n      signature: u8aToHex(signature)\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this._raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns a serialized u8a form\n   */\n\n\n  toU8a(isBare) {\n    // call our parent, with only the method stripped\n    return super.toU8a(isBare ? {\n      method: true\n    } : false);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}