{"ast":null,"code":"import _toConsumableArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject, isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\";\n\nfunction hasMismatch(a, b) {\n  return isUndefined(a) || (hasEq(a) ? !a.eq(b) : a !== b);\n}\n\nfunction notEntry(value) {\n  return !Array.isArray(value) || value.length !== 2;\n}\n\nfunction compareMapArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(function (entry) {\n    return notEntry(entry) || hasMismatch(a.get(entry[0]), entry[1]);\n  });\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Map<string, Codec> that the first has to be as well\n\n\nexport function compareMap(a, b) {\n  if (Array.isArray(b)) {\n    return compareMapArray(a, b);\n  } else if (b instanceof Map) {\n    return compareMapArray(a, _toConsumableArray(b.entries()));\n  } else if (isObject(b)) {\n    return compareMapArray(a, Object.entries(b));\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/codec/utils/compareMap.js"],"names":["isObject","isUndefined","hasEq","hasMismatch","a","b","eq","notEntry","value","Array","isArray","length","compareMapArray","size","some","entry","get","compareMap","Map","entries","Object"],"mappings":";AAAA;AACA;AACA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,KAAT,QAAsB,WAAtB;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzB,SAAOJ,WAAW,CAACG,CAAD,CAAX,KAAmBF,KAAK,CAACE,CAAD,CAAL,GAAW,CAACA,CAAC,CAACE,EAAF,CAAKD,CAAL,CAAZ,GAAsBD,CAAC,KAAKC,CAA/C,CAAP;AACD;;AAED,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAD,IAAyBA,KAAK,CAACG,MAAN,KAAiB,CAAjD;AACD;;AAED,SAASC,eAAT,CAAyBR,CAAzB,EAA4BC,CAA5B,EAA+B;AAC7B;AACA,SAAOD,CAAC,CAACS,IAAF,KAAWR,CAAC,CAACM,MAAb,IAAuB,CAACN,CAAC,CAACS,IAAF,CAAO,UAAAC,KAAK;AAAA,WAAIR,QAAQ,CAACQ,KAAD,CAAR,IAAmBZ,WAAW,CAACC,CAAC,CAACY,GAAF,CAAMD,KAAK,CAAC,CAAD,CAAX,CAAD,EAAkBA,KAAK,CAAC,CAAD,CAAvB,CAAlC;AAAA,GAAZ,CAA/B;AACD,C,CAAC;AACF;;;AAGA,OAAO,SAASE,UAAT,CAAoBb,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAII,KAAK,CAACC,OAAN,CAAcL,CAAd,CAAJ,EAAsB;AACpB,WAAOO,eAAe,CAACR,CAAD,EAAIC,CAAJ,CAAtB;AACD,GAFD,MAEO,IAAIA,CAAC,YAAYa,GAAjB,EAAsB;AAC3B,WAAON,eAAe,CAACR,CAAD,qBAAQC,CAAC,CAACc,OAAF,EAAR,EAAtB;AACD,GAFM,MAEA,IAAInB,QAAQ,CAACK,CAAD,CAAZ,EAAiB;AACtB,WAAOO,eAAe,CAACR,CAAD,EAAIgB,MAAM,CAACD,OAAP,CAAed,CAAf,CAAJ,CAAtB;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject, isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\";\n\nfunction hasMismatch(a, b) {\n  return isUndefined(a) || (hasEq(a) ? !a.eq(b) : a !== b);\n}\n\nfunction notEntry(value) {\n  return !Array.isArray(value) || value.length !== 2;\n}\n\nfunction compareMapArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(entry => notEntry(entry) || hasMismatch(a.get(entry[0]), entry[1]));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Map<string, Codec> that the first has to be as well\n\n\nexport function compareMap(a, b) {\n  if (Array.isArray(b)) {\n    return compareMapArray(a, b);\n  } else if (b instanceof Map) {\n    return compareMapArray(a, [...b.entries()]);\n  } else if (isObject(b)) {\n    return compareMapArray(a, Object.entries(b));\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}