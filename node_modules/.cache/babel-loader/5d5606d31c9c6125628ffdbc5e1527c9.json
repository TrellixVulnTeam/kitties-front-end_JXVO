{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { u8aToString } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\n\nfunction retrieveNick(api, accountId) {\n  var _api$query$nicks;\n\n  return (accountId && (_api$query$nicks = api.query.nicks) !== null && _api$query$nicks !== void 0 && _api$query$nicks.nameOf ? api.query.nicks.nameOf(accountId) : of(undefined)).pipe(map(function (nameOf) {\n    return nameOf !== null && nameOf !== void 0 && nameOf.isSome ? u8aToString(nameOf.unwrap()[0]).substr(0, api.consts.nicks.maxLength.toNumber()) : undefined;\n  }));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\n\n\nexport function info(instanceId, api) {\n  return memo(instanceId, function (address) {\n    return api.derive.accounts.idAndIndex(address).pipe(switchMap(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          accountId = _ref2[0],\n          accountIndex = _ref2[1];\n\n      return combineLatest([of({\n        accountId: accountId,\n        accountIndex: accountIndex\n      }), api.derive.accounts.identity(accountId), retrieveNick(api, accountId)]);\n    }), map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          _ref4$ = _ref4[0],\n          accountId = _ref4$.accountId,\n          accountIndex = _ref4$.accountIndex,\n          identity = _ref4[1],\n          nickname = _ref4[2];\n\n      return {\n        accountId: accountId,\n        accountIndex: accountIndex,\n        identity: identity,\n        nickname: nickname\n      };\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/accounts/info.js"],"names":["combineLatest","map","of","switchMap","u8aToString","memo","retrieveNick","api","accountId","_api$query$nicks","query","nicks","nameOf","undefined","pipe","isSome","unwrap","substr","consts","maxLength","toNumber","info","instanceId","address","derive","accounts","idAndIndex","accountIndex","identity","nickname"],"mappings":";AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,EAA6BC,EAA7B,EAAiCC,SAAjC,QAAkD,MAAlD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,SAA3B,EAAsC;AACpC,MAAIC,gBAAJ;;AAEA,SAAO,CAACD,SAAS,IAAI,CAACC,gBAAgB,GAAGF,GAAG,CAACG,KAAJ,CAAUC,KAA9B,MAAyC,IAAtD,IAA8DF,gBAAgB,KAAK,KAAK,CAAxF,IAA6FA,gBAAgB,CAACG,MAA9G,GAAuHL,GAAG,CAACG,KAAJ,CAAUC,KAAV,CAAgBC,MAAhB,CAAuBJ,SAAvB,CAAvH,GAA2JN,EAAE,CAACW,SAAD,CAA9J,EAA2KC,IAA3K,CAAgLb,GAAG,CAAC,UAAAW,MAAM;AAAA,WAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,IAAwCA,MAAM,CAACG,MAA/C,GAAwDX,WAAW,CAACQ,MAAM,CAACI,MAAP,GAAgB,CAAhB,CAAD,CAAX,CAAgCC,MAAhC,CAAuC,CAAvC,EAA0CV,GAAG,CAACW,MAAJ,CAAWP,KAAX,CAAiBQ,SAAjB,CAA2BC,QAA3B,EAA1C,CAAxD,GAA2IP,SAA/I;AAAA,GAAP,CAAnL,CAAP;AACD;AACD;AACA;AACA;AACA;;;AAGA,OAAO,SAASQ,IAAT,CAAcC,UAAd,EAA0Bf,GAA1B,EAA+B;AACpC,SAAOF,IAAI,CAACiB,UAAD,EAAa,UAAAC,OAAO;AAAA,WAAIhB,GAAG,CAACiB,MAAJ,CAAWC,QAAX,CAAoBC,UAApB,CAA+BH,OAA/B,EAAwCT,IAAxC,CAA6CX,SAAS,CAAC;AAAA;AAAA,UAAEK,SAAF;AAAA,UAAamB,YAAb;;AAAA,aAA+B3B,aAAa,CAAC,CAACE,EAAE,CAAC;AACzIM,QAAAA,SAAS,EAATA,SADyI;AAEzImB,QAAAA,YAAY,EAAZA;AAFyI,OAAD,CAAH,EAGnIpB,GAAG,CAACiB,MAAJ,CAAWC,QAAX,CAAoBG,QAApB,CAA6BpB,SAA7B,CAHmI,EAG1FF,YAAY,CAACC,GAAD,EAAMC,SAAN,CAH8E,CAAD,CAA5C;AAAA,KAAD,CAAtD,EAG2CP,GAAG,CAAC;AAAA;AAAA;AAAA,UAChFO,SADgF,UAChFA,SADgF;AAAA,UAEhFmB,YAFgF,UAEhFA,YAFgF;AAAA,UAG/EC,QAH+E;AAAA,UAGrEC,QAHqE;;AAAA,aAGtD;AAC1BrB,QAAAA,SAAS,EAATA,SAD0B;AAE1BmB,QAAAA,YAAY,EAAZA,YAF0B;AAG1BC,QAAAA,QAAQ,EAARA,QAH0B;AAI1BC,QAAAA,QAAQ,EAARA;AAJ0B,OAHsD;AAAA,KAAD,CAH9C,CAAJ;AAAA,GAApB,CAAX;AAYD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { u8aToString } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\n\nfunction retrieveNick(api, accountId) {\n  var _api$query$nicks;\n\n  return (accountId && (_api$query$nicks = api.query.nicks) !== null && _api$query$nicks !== void 0 && _api$query$nicks.nameOf ? api.query.nicks.nameOf(accountId) : of(undefined)).pipe(map(nameOf => nameOf !== null && nameOf !== void 0 && nameOf.isSome ? u8aToString(nameOf.unwrap()[0]).substr(0, api.consts.nicks.maxLength.toNumber()) : undefined));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\n\n\nexport function info(instanceId, api) {\n  return memo(instanceId, address => api.derive.accounts.idAndIndex(address).pipe(switchMap(([accountId, accountIndex]) => combineLatest([of({\n    accountId,\n    accountIndex\n  }), api.derive.accounts.identity(accountId), retrieveNick(api, accountId)])), map(([{\n    accountId,\n    accountIndex\n  }, identity, nickname]) => ({\n    accountId,\n    accountIndex,\n    identity,\n    nickname\n  }))));\n}"]},"metadata":{},"sourceType":"module"}