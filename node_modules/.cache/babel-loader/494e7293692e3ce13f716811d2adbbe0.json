{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactFromU8a, logger, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"./AbstractArray.js\";\nimport { decodeU8a, typeToConstructor } from \"./utils/index.js\";\nvar MAX_LENGTH = 64 * 1024;\nvar l = logger('Vec');\n/**\n * @name Vec\n * @description\n * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows\n * construction with the passed `Type` in the constructor. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n */\n\nexport var Vec = /*#__PURE__*/function (_AbstractArray) {\n  _inherits(Vec, _AbstractArray);\n\n  var _super = _createSuper(Vec);\n\n  function Vec(registry, Type) {\n    var _this;\n\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    _classCallCheck(this, Vec);\n\n    var Clazz = typeToConstructor(registry, Type);\n    _this = _super.call.apply(_super, [this, registry].concat(_toConsumableArray(Vec.decodeVec(registry, Clazz, value))));\n    _this._Type = void 0;\n    _this._Type = Clazz;\n    return _this;\n  }\n  /** @internal */\n\n\n  _createClass(Vec, [{\n    key: \"Type\",\n    get:\n    /**\n     * @description The type for the items\n     */\n    function get() {\n      return this._Type.name;\n    }\n    /**\n     * @description Finds the index of the value in the array\n     */\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(_other) {\n      // convert type first, this removes overhead from the eq\n      var other = _other instanceof this._Type ? _other : new this._Type(this.registry, _other);\n\n      for (var i = 0; i < this.length; i++) {\n        if (other.eq(this[i])) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return \"Vec<\".concat(this.registry.getClassName(this._Type) || new this._Type(this.registry).toRawType(), \">\");\n    }\n  }], [{\n    key: \"decodeVec\",\n    value: function decodeVec(registry, Type, value) {\n      if (Array.isArray(value)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value.map(function (entry, index) {\n          try {\n            return entry instanceof Type ? entry : new Type(registry, entry);\n          } catch (error) {\n            l.error(\"Unable to decode on index \".concat(index), error.message);\n            throw error;\n          }\n        });\n      }\n\n      var u8a = u8aToU8a(value);\n\n      var _compactFromU8a = compactFromU8a(u8a),\n          _compactFromU8a2 = _slicedToArray(_compactFromU8a, 2),\n          offset = _compactFromU8a2[0],\n          length = _compactFromU8a2[1];\n\n      assert(length.lten(MAX_LENGTH), function () {\n        return \"Vec length \".concat(length.toString(), \" exceeds \").concat(MAX_LENGTH);\n      });\n      return decodeU8a(registry, u8a.subarray(offset), new Array(length.toNumber()).fill(Type));\n    }\n  }, {\n    key: \"with\",\n    value: function _with(Type) {\n      return /*#__PURE__*/function (_Vec) {\n        _inherits(_class, _Vec);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super2.call(this, registry, Type, value);\n        }\n\n        return _class;\n      }(Vec);\n    }\n  }]);\n\n  return Vec;\n}(AbstractArray);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/codec/Vec.js"],"names":["assert","compactFromU8a","logger","u8aToU8a","AbstractArray","decodeU8a","typeToConstructor","MAX_LENGTH","l","Vec","registry","Type","value","Clazz","decodeVec","_Type","name","_other","other","i","length","eq","getClassName","toRawType","Array","isArray","map","entry","index","error","message","u8a","offset","lten","toString","subarray","toNumber","fill"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactFromU8a, logger, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"./AbstractArray.js\";\nimport { decodeU8a, typeToConstructor } from \"./utils/index.js\";\nconst MAX_LENGTH = 64 * 1024;\nconst l = logger('Vec');\n/**\n * @name Vec\n * @description\n * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows\n * construction with the passed `Type` in the constructor. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n */\n\nexport class Vec extends AbstractArray {\n  constructor(registry, Type, value = []) {\n    const Clazz = typeToConstructor(registry, Type);\n    super(registry, ...Vec.decodeVec(registry, Clazz, value));\n    this._Type = void 0;\n    this._Type = Clazz;\n  }\n  /** @internal */\n\n\n  static decodeVec(registry, Type, value) {\n    if (Array.isArray(value)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return value.map((entry, index) => {\n        try {\n          return entry instanceof Type ? entry : new Type(registry, entry);\n        } catch (error) {\n          l.error(`Unable to decode on index ${index}`, error.message);\n          throw error;\n        }\n      });\n    }\n\n    const u8a = u8aToU8a(value);\n    const [offset, length] = compactFromU8a(u8a);\n    assert(length.lten(MAX_LENGTH), () => `Vec length ${length.toString()} exceeds ${MAX_LENGTH}`);\n    return decodeU8a(registry, u8a.subarray(offset), new Array(length.toNumber()).fill(Type));\n  }\n\n  static with(Type) {\n    return class extends Vec {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description The type for the items\n   */\n\n\n  get Type() {\n    return this._Type.name;\n  }\n  /**\n   * @description Finds the index of the value in the array\n   */\n\n\n  indexOf(_other) {\n    // convert type first, this removes overhead from the eq\n    const other = _other instanceof this._Type ? _other : new this._Type(this.registry, _other);\n\n    for (let i = 0; i < this.length; i++) {\n      if (other.eq(this[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Vec<${this.registry.getClassName(this._Type) || new this._Type(this.registry).toRawType()}>`;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}