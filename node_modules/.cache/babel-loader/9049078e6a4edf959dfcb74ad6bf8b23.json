{"ast":null,"code":"import _slicedToArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer,useContext}from'react';import jsonrpc from'@polkadot/types/interfaces/jsonrpc';import queryString from'query-string';import{ApiPromise,WsProvider}from'@polkadot/api';import{web3Accounts,web3Enable}from'@polkadot/extension-dapp';import keyring from'@polkadot/ui-keyring';import config from'../config';import{jsx as _jsx}from\"react/jsx-runtime\";var parsedQuery=queryString.parse(window.location.search);var connectedSocket=parsedQuery.rpc||config.PROVIDER_SOCKET;console.log(\"Connected socket: \".concat(connectedSocket));///\n// Initial state for `useReducer`\nvar INIT_STATE={socket:connectedSocket,jsonrpc:_objectSpread(_objectSpread({},jsonrpc),config.RPC),types:config.types,keyring:null,keyringState:null,api:null,apiError:null,apiState:null};///\n// Reducer function for `useReducer`\nvar reducer=function reducer(state,action){switch(action.type){case'CONNECT_INIT':return _objectSpread(_objectSpread({},state),{},{apiState:'CONNECT_INIT'});case'CONNECT':return _objectSpread(_objectSpread({},state),{},{api:action.payload,apiState:'CONNECTING'});case'CONNECT_SUCCESS':return _objectSpread(_objectSpread({},state),{},{apiState:'READY'});case'CONNECT_ERROR':return _objectSpread(_objectSpread({},state),{},{apiState:'ERROR',apiError:action.payload});case'LOAD_KEYRING':return _objectSpread(_objectSpread({},state),{},{keyringState:'LOADING'});case'SET_KEYRING':return _objectSpread(_objectSpread({},state),{},{keyring:action.payload,keyringState:'READY'});case'KEYRING_ERROR':return _objectSpread(_objectSpread({},state),{},{keyring:null,keyringState:'ERROR'});default:throw new Error(\"Unknown type: \".concat(action.type));}};///\n// Connecting to the Substrate node\nvar connect=function connect(state,dispatch){var apiState=state.apiState,socket=state.socket,jsonrpc=state.jsonrpc,types=state.types;// We only want this function to be performed once\nif(apiState)return;dispatch({type:'CONNECT_INIT'});var provider=new WsProvider(socket);var _api=new ApiPromise({provider:provider,types:types,rpc:jsonrpc});// Set listeners for disconnection and reconnection event.\n_api.on('connected',function(){dispatch({type:'CONNECT',payload:_api});// `ready` event is not emitted upon reconnection and is checked explicitly here.\n_api.isReady.then(function(_api){return dispatch({type:'CONNECT_SUCCESS'});});});_api.on('ready',function(){return dispatch({type:'CONNECT_SUCCESS'});});_api.on('error',function(err){return dispatch({type:'CONNECT_ERROR',payload:err});});};///\n// Loading accounts from dev and polkadot-js extension\nvar loadAccts=false;var loadAccounts=function loadAccounts(state,dispatch){var asyncLoadAccounts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var allAccounts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:'LOAD_KEYRING'});_context.prev=1;_context.next=4;return web3Enable(config.APP_NAME);case 4:_context.next=6;return web3Accounts();case 6:allAccounts=_context.sent;allAccounts=allAccounts.map(function(_ref2){var address=_ref2.address,meta=_ref2.meta;return{address:address,meta:_objectSpread(_objectSpread({},meta),{},{name:\"\".concat(meta.name,\" (\").concat(meta.source,\")\")})};});keyring.loadAll({isDevelopment:config.DEVELOPMENT_KEYRING},allAccounts);dispatch({type:'SET_KEYRING',payload:keyring});_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);console.error(_context.t0);dispatch({type:'KEYRING_ERROR'});case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);}));return function asyncLoadAccounts(){return _ref.apply(this,arguments);};}();var keyringState=state.keyringState;// If `keyringState` is not null `asyncLoadAccounts` is running.\nif(keyringState)return;// If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\nif(loadAccts)return dispatch({type:'SET_KEYRING',payload:keyring});// This is the heavy duty work\nloadAccts=true;asyncLoadAccounts();};var SubstrateContext=/*#__PURE__*/React.createContext();var SubstrateContextProvider=function SubstrateContextProvider(props){// filtering props and merge with default param value\nvar initState=_objectSpread({},INIT_STATE);var neededPropNames=['socket','types'];neededPropNames.forEach(function(key){initState[key]=typeof props[key]==='undefined'?initState[key]:props[key];});var _useReducer=useReducer(reducer,initState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];connect(state,dispatch);loadAccounts(state,dispatch);return/*#__PURE__*/_jsx(SubstrateContext.Provider,{value:state,children:props.children});};// prop typechecking\nvar useSubstrate=function useSubstrate(){return _objectSpread({},useContext(SubstrateContext));};export{SubstrateContextProvider,useSubstrate};","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/src/substrate-lib/SubstrateContext.js"],"names":["React","useReducer","useContext","jsonrpc","queryString","ApiPromise","WsProvider","web3Accounts","web3Enable","keyring","config","parsedQuery","parse","window","location","search","connectedSocket","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","RPC","types","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","connect","dispatch","provider","_api","on","isReady","then","err","loadAccts","loadAccounts","asyncLoadAccounts","APP_NAME","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","SubstrateContext","createContext","SubstrateContextProvider","props","initState","neededPropNames","forEach","key","children","useSubstrate"],"mappings":"4xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,UAA5B,KAA8C,OAA9C,CAEA,MAAOC,CAAAA,OAAP,KAAoB,oCAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAEA,OAASC,UAAT,CAAqBC,UAArB,KAAuC,eAAvC,CACA,OAASC,YAAT,CAAuBC,UAAvB,KAAyC,0BAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,C,2CAEA,GAAMC,CAAAA,WAAW,CAAGP,WAAW,CAACQ,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAApB,CACA,GAAMC,CAAAA,eAAe,CAAGL,WAAW,CAACM,GAAZ,EAAmBP,MAAM,CAACQ,eAAlD,CACAC,OAAO,CAACC,GAAR,6BAAiCJ,eAAjC,GAEA;AACA;AAEA,GAAMK,CAAAA,UAAU,CAAG,CACjBC,MAAM,CAAEN,eADS,CAEjBb,OAAO,gCAAOA,OAAP,EAAmBO,MAAM,CAACa,GAA1B,CAFU,CAGjBC,KAAK,CAAEd,MAAM,CAACc,KAHG,CAIjBf,OAAO,CAAE,IAJQ,CAKjBgB,YAAY,CAAE,IALG,CAMjBC,GAAG,CAAE,IANY,CAOjBC,QAAQ,CAAE,IAPO,CAQjBC,QAAQ,CAAE,IARO,CAAnB,CAWA;AACA;AAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACjC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,cAAL,CACE,sCAAYF,KAAZ,MAAmBF,QAAQ,CAAE,cAA7B,GAEF,IAAK,SAAL,CACE,sCAAYE,KAAZ,MAAmBJ,GAAG,CAAEK,MAAM,CAACE,OAA/B,CAAwCL,QAAQ,CAAE,YAAlD,GAEF,IAAK,iBAAL,CACE,sCAAYE,KAAZ,MAAmBF,QAAQ,CAAE,OAA7B,GAEF,IAAK,eAAL,CACE,sCAAYE,KAAZ,MAAmBF,QAAQ,CAAE,OAA7B,CAAsCD,QAAQ,CAAEI,MAAM,CAACE,OAAvD,GAEF,IAAK,cAAL,CACE,sCAAYH,KAAZ,MAAmBL,YAAY,CAAE,SAAjC,GAEF,IAAK,aAAL,CACE,sCAAYK,KAAZ,MAAmBrB,OAAO,CAAEsB,MAAM,CAACE,OAAnC,CAA4CR,YAAY,CAAE,OAA1D,GAEF,IAAK,eAAL,CACE,sCAAYK,KAAZ,MAAmBrB,OAAO,CAAE,IAA5B,CAAkCgB,YAAY,CAAE,OAAhD,GAEF,QACE,KAAM,IAAIS,CAAAA,KAAJ,yBAA2BH,MAAM,CAACC,IAAlC,EAAN,CAvBJ,CAyBD,CA1BD,CA4BA;AACA;AAEA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACL,KAAD,CAAQM,QAAR,CAAqB,CACnC,GAAQR,CAAAA,QAAR,CAA6CE,KAA7C,CAAQF,QAAR,CAAkBN,MAAlB,CAA6CQ,KAA7C,CAAkBR,MAAlB,CAA0BnB,OAA1B,CAA6C2B,KAA7C,CAA0B3B,OAA1B,CAAmCqB,KAAnC,CAA6CM,KAA7C,CAAmCN,KAAnC,CACA;AACA,GAAII,QAAJ,CAAc,OAEdQ,QAAQ,CAAC,CAAEJ,IAAI,CAAE,cAAR,CAAD,CAAR,CAEA,GAAMK,CAAAA,QAAQ,CAAG,GAAI/B,CAAAA,UAAJ,CAAegB,MAAf,CAAjB,CACA,GAAMgB,CAAAA,IAAI,CAAG,GAAIjC,CAAAA,UAAJ,CAAe,CAAEgC,QAAQ,CAARA,QAAF,CAAYb,KAAK,CAALA,KAAZ,CAAmBP,GAAG,CAAEd,OAAxB,CAAf,CAAb,CAEA;AACAmC,IAAI,CAACC,EAAL,CAAQ,WAAR,CAAqB,UAAM,CACzBH,QAAQ,CAAC,CAAEJ,IAAI,CAAE,SAAR,CAAmBC,OAAO,CAAEK,IAA5B,CAAD,CAAR,CACA;AACAA,IAAI,CAACE,OAAL,CAAaC,IAAb,CAAkB,SAACH,IAAD,QAAUF,CAAAA,QAAQ,CAAC,CAAEJ,IAAI,CAAE,iBAAR,CAAD,CAAlB,EAAlB,EACD,CAJD,EAKAM,IAAI,CAACC,EAAL,CAAQ,OAAR,CAAiB,iBAAMH,CAAAA,QAAQ,CAAC,CAAEJ,IAAI,CAAE,iBAAR,CAAD,CAAd,EAAjB,EACAM,IAAI,CAACC,EAAL,CAAQ,OAAR,CAAiB,SAAAG,GAAG,QAAIN,CAAAA,QAAQ,CAAC,CAAEJ,IAAI,CAAE,eAAR,CAAyBC,OAAO,CAAES,GAAlC,CAAD,CAAZ,EAApB,EACD,CAlBD,CAoBA;AACA;AAEA,GAAIC,CAAAA,SAAS,CAAG,KAAhB,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACd,KAAD,CAAQM,QAAR,CAAqB,CACxC,GAAMS,CAAAA,iBAAiB,0FAAG,mJACxBT,QAAQ,CAAC,CAAEJ,IAAI,CAAE,cAAR,CAAD,CAAR,CADwB,sCAGhBxB,CAAAA,UAAU,CAACE,MAAM,CAACoC,QAAR,CAHM,8BAIEvC,CAAAA,YAAY,EAJd,QAIlBwC,WAJkB,eAKtBA,WAAW,CAAGA,WAAW,CAACC,GAAZ,CAAgB,mBAAGC,CAAAA,OAAH,OAAGA,OAAH,CAAYC,IAAZ,OAAYA,IAAZ,OAC3B,CAAED,OAAO,CAAPA,OAAF,CAAWC,IAAI,gCAAOA,IAAP,MAAaC,IAAI,WAAKD,IAAI,CAACC,IAAV,cAAmBD,IAAI,CAACE,MAAxB,KAAjB,EAAf,CAD2B,EAAhB,CAAd,CAEA3C,OAAO,CAAC4C,OAAR,CAAgB,CAAEC,aAAa,CAAE5C,MAAM,CAAC6C,mBAAxB,CAAhB,CAA+DR,WAA/D,EACAX,QAAQ,CAAC,CAAEJ,IAAI,CAAE,aAAR,CAAuBC,OAAO,CAAExB,OAAhC,CAAD,CAAR,CARsB,iFAUtBU,OAAO,CAACqC,KAAR,cACApB,QAAQ,CAAC,CAAEJ,IAAI,CAAE,eAAR,CAAD,CAAR,CAXsB,qEAAH,kBAAjBa,CAAAA,iBAAiB,0CAAvB,CAeA,GAAQpB,CAAAA,YAAR,CAAyBK,KAAzB,CAAQL,YAAR,CACA;AACA,GAAIA,YAAJ,CAAkB,OAClB;AACA,GAAIkB,SAAJ,CAAe,MAAOP,CAAAA,QAAQ,CAAC,CAAEJ,IAAI,CAAE,aAAR,CAAuBC,OAAO,CAAExB,OAAhC,CAAD,CAAf,CAEf;AACAkC,SAAS,CAAG,IAAZ,CACAE,iBAAiB,GAClB,CAzBD,CA2BA,GAAMY,CAAAA,gBAAgB,cAAGzD,KAAK,CAAC0D,aAAN,EAAzB,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,KAAD,CAAW,CAC1C;AACA,GAAMC,CAAAA,SAAS,kBAAQxC,UAAR,CAAf,CACA,GAAMyC,CAAAA,eAAe,CAAG,CAAC,QAAD,CAAW,OAAX,CAAxB,CACAA,eAAe,CAACC,OAAhB,CAAwB,SAAAC,GAAG,CAAI,CAC7BH,SAAS,CAACG,GAAD,CAAT,CAAkB,MAAOJ,CAAAA,KAAK,CAACI,GAAD,CAAZ,GAAsB,WAAtB,CAAoCH,SAAS,CAACG,GAAD,CAA7C,CAAqDJ,KAAK,CAACI,GAAD,CAA5E,CACD,CAFD,EAIA,gBAA0B/D,UAAU,CAAC4B,OAAD,CAAUgC,SAAV,CAApC,4CAAO/B,KAAP,iBAAcM,QAAd,iBACAD,OAAO,CAACL,KAAD,CAAQM,QAAR,CAAP,CACAQ,YAAY,CAACd,KAAD,CAAQM,QAAR,CAAZ,CAEA,mBAAO,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAEN,KAAlC,UACJ8B,KAAK,CAACK,QADF,EAAP,CAGD,CAfD,CAiBA;AAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,2BAAYhE,UAAU,CAACuD,gBAAD,CAAtB,GAArB,CAEA,OAASE,wBAAT,CAAmCO,YAAnC","sourcesContent":["import React, { useReducer, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc'\nimport queryString from 'query-string'\n\nimport { ApiPromise, WsProvider } from '@polkadot/api'\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp'\nimport keyring from '@polkadot/ui-keyring'\n\nimport config from '../config'\n\nconst parsedQuery = queryString.parse(window.location.search)\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET\nconsole.log(`Connected socket: ${connectedSocket}`)\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.types,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n}\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' }\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' }\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' }\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload }\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' }\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' }\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' }\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`)\n  }\n}\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state\n  // We only want this function to be performed once\n  if (apiState) return\n\n  dispatch({ type: 'CONNECT_INIT' })\n\n  const provider = new WsProvider(socket)\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc })\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api })\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }))\n  })\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }))\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }))\n}\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' })\n    try {\n      await web3Enable(config.APP_NAME)\n      let allAccounts = await web3Accounts()\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }))\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts)\n      dispatch({ type: 'SET_KEYRING', payload: keyring })\n    } catch (e) {\n      console.error(e)\n      dispatch({ type: 'KEYRING_ERROR' })\n    }\n  }\n\n  const { keyringState } = state\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring })\n\n  // This is the heavy duty work\n  loadAccts = true\n  asyncLoadAccounts()\n}\n\nconst SubstrateContext = React.createContext()\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE }\n  const neededPropNames = ['socket', 'types']\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key])\n  })\n\n  const [state, dispatch] = useReducer(reducer, initState)\n  connect(state, dispatch)\n  loadAccounts(state, dispatch)\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>\n}\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n}\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) })\n\nexport { SubstrateContextProvider, useSubstrate }\n"]},"metadata":{},"sourceType":"module"}