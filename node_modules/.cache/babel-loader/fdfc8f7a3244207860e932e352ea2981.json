{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from \"./MetadataVersioned.js\"; // magic u32 preceding the version id\n\nvar VERSION_IDX = 4; // magic + lowest supported version\n\nvar EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\nvar EMPTY_U8A = new Uint8Array();\n\nfunction toU8a() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_U8A;\n  return isHex(value) ? toU8a(u8aToU8a(value)) : isU8a(value) && value.length === 0 ? EMPTY_METADATA : value;\n}\n\nfunction decodeMetadata(registry, _value) {\n  if (!_value || isU8a(_value) || isHex(_value)) {\n    var value = toU8a(_value);\n    var version = value[VERSION_IDX];\n\n    try {\n      return new MetadataVersioned(registry, value);\n    } catch (error) {\n      // This is an f-ing hack as a follow-up to another ugly hack\n      // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n      // when we fail on V9, try to re-parse it as v10... yes... HACK\n      if (version === 9) {\n        value[VERSION_IDX] = 10;\n        return decodeMetadata(registry, value);\n      }\n\n      throw error;\n    }\n  }\n\n  return new MetadataVersioned(registry, _value);\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nexport var Metadata = /*#__PURE__*/function (_MetadataVersioned) {\n  _inherits(Metadata, _MetadataVersioned);\n\n  var _super = _createSuper(Metadata);\n\n  function Metadata(registry, value) {\n    _classCallCheck(this, Metadata);\n\n    return _super.call(this, registry, decodeMetadata(registry, value));\n  }\n\n  return Metadata;\n}(MetadataVersioned);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/metadata/Metadata.js"],"names":["isHex","isU8a","u8aToU8a","MetadataVersioned","VERSION_IDX","EMPTY_METADATA","Uint8Array","EMPTY_U8A","toU8a","value","length","decodeMetadata","registry","_value","version","error","Metadata"],"mappings":";;;AAAA;AACA;AACA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAuC,gBAAvC;AACA,SAASC,iBAAT,QAAkC,wBAAlC,C,CAA4D;;AAE5D,IAAMC,WAAW,GAAG,CAApB,C,CAAuB;;AAEvB,IAAMC,cAAc,GAAG,IAAIC,UAAJ,CAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,CAAzB,CAAf,CAAvB;AACA,IAAMC,SAAS,GAAG,IAAID,UAAJ,EAAlB;;AAEA,SAASE,KAAT,GAAkC;AAAA,MAAnBC,KAAmB,uEAAXF,SAAW;AAChC,SAAOP,KAAK,CAACS,KAAD,CAAL,GAAeD,KAAK,CAACN,QAAQ,CAACO,KAAD,CAAT,CAApB,GAAwCR,KAAK,CAACQ,KAAD,CAAL,IAAgBA,KAAK,CAACC,MAAN,KAAiB,CAAjC,GAAqCL,cAArC,GAAsDI,KAArG;AACD;;AAED,SAASE,cAAT,CAAwBC,QAAxB,EAAkCC,MAAlC,EAA0C;AACxC,MAAI,CAACA,MAAD,IAAWZ,KAAK,CAACY,MAAD,CAAhB,IAA4Bb,KAAK,CAACa,MAAD,CAArC,EAA+C;AAC7C,QAAMJ,KAAK,GAAGD,KAAK,CAACK,MAAD,CAAnB;AACA,QAAMC,OAAO,GAAGL,KAAK,CAACL,WAAD,CAArB;;AAEA,QAAI;AACF,aAAO,IAAID,iBAAJ,CAAsBS,QAAtB,EAAgCH,KAAhC,CAAP;AACD,KAFD,CAEE,OAAOM,KAAP,EAAc;AACd;AACA;AACA;AACA,UAAID,OAAO,KAAK,CAAhB,EAAmB;AACjBL,QAAAA,KAAK,CAACL,WAAD,CAAL,GAAqB,EAArB;AACA,eAAOO,cAAc,CAACC,QAAD,EAAWH,KAAX,CAArB;AACD;;AAED,YAAMM,KAAN;AACD;AACF;;AAED,SAAO,IAAIZ,iBAAJ,CAAsBS,QAAtB,EAAgCC,MAAhC,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,WAAaG,QAAb;AAAA;;AAAA;;AACE,oBAAYJ,QAAZ,EAAsBH,KAAtB,EAA6B;AAAA;;AAAA,6BACrBG,QADqB,EACXD,cAAc,CAACC,QAAD,EAAWH,KAAX,CADH;AAE5B;;AAHH;AAAA,EAA8BN,iBAA9B","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from \"./MetadataVersioned.js\"; // magic u32 preceding the version id\n\nconst VERSION_IDX = 4; // magic + lowest supported version\n\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\nconst EMPTY_U8A = new Uint8Array();\n\nfunction toU8a(value = EMPTY_U8A) {\n  return isHex(value) ? toU8a(u8aToU8a(value)) : isU8a(value) && value.length === 0 ? EMPTY_METADATA : value;\n}\n\nfunction decodeMetadata(registry, _value) {\n  if (!_value || isU8a(_value) || isHex(_value)) {\n    const value = toU8a(_value);\n    const version = value[VERSION_IDX];\n\n    try {\n      return new MetadataVersioned(registry, value);\n    } catch (error) {\n      // This is an f-ing hack as a follow-up to another ugly hack\n      // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n      // when we fail on V9, try to re-parse it as v10... yes... HACK\n      if (version === 9) {\n        value[VERSION_IDX] = 10;\n        return decodeMetadata(registry, value);\n      }\n\n      throw error;\n    }\n  }\n\n  return new MetadataVersioned(registry, _value);\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nexport class Metadata extends MetadataVersioned {\n  constructor(registry, value) {\n    super(registry, decodeMetadata(registry, value));\n  }\n\n}"]},"metadata":{},"sourceType":"module"}