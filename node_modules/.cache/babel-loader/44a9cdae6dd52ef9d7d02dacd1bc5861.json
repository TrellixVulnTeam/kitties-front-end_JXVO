{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nexport function _stakerPrefs(instanceId, api) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return memo(instanceId, function (accountId, eras, _withActive) {\n    return api.query.staking.erasValidatorPrefs.multi(eras.map(function (era) {\n      return [era, accountId];\n    })).pipe(map(function (all) {\n      return all.map(function (validatorPrefs, index) {\n        return {\n          era: eras[index],\n          validatorPrefs: validatorPrefs\n        };\n      });\n    }));\n  });\n}\nexport function stakerPrefs(instanceId, api) {\n  return memo(instanceId, function (accountId) {\n    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(function (eras) {\n      return api.derive.staking._stakerPrefs(accountId, eras, withActive);\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/staking/stakerPrefs.js"],"names":["map","switchMap","memo","_stakerPrefs","instanceId","api","accountId","eras","_withActive","query","staking","erasValidatorPrefs","multi","era","pipe","all","validatorPrefs","index","stakerPrefs","withActive","derive","erasHistoric"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,EAAcC,SAAd,QAA+B,MAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,GAAlC,EAAuC;AAC5C;AACA,SAAOH,IAAI,CAACE,UAAD,EAAa,UAACE,SAAD,EAAYC,IAAZ,EAAkBC,WAAlB;AAAA,WAAkCH,GAAG,CAACI,KAAJ,CAAUC,OAAV,CAAkBC,kBAAlB,CAAqCC,KAArC,CAA2CL,IAAI,CAACP,GAAL,CAAS,UAAAa,GAAG;AAAA,aAAI,CAACA,GAAD,EAAMP,SAAN,CAAJ;AAAA,KAAZ,CAA3C,EAA8EQ,IAA9E,CAAmFd,GAAG,CAAC,UAAAe,GAAG;AAAA,aAAIA,GAAG,CAACf,GAAJ,CAAQ,UAACgB,cAAD,EAAiBC,KAAjB;AAAA,eAA4B;AAC1LJ,UAAAA,GAAG,EAAEN,IAAI,CAACU,KAAD,CADiL;AAE1LD,UAAAA,cAAc,EAAdA;AAF0L,SAA5B;AAAA,OAAR,CAAJ;AAAA,KAAJ,CAAtF,CAAlC;AAAA,GAAb,CAAX;AAID;AACD,OAAO,SAASE,WAAT,CAAqBd,UAArB,EAAiCC,GAAjC,EAAsC;AAC3C,SAAOH,IAAI,CAACE,UAAD,EAAa,UAACE,SAAD;AAAA,QAAYa,UAAZ,uEAAyB,KAAzB;AAAA,WAAmCd,GAAG,CAACe,MAAJ,CAAWV,OAAX,CAAmBW,YAAnB,CAAgCF,UAAhC,EAA4CL,IAA5C,CAAiDb,SAAS,CAAC,UAAAM,IAAI;AAAA,aAAIF,GAAG,CAACe,MAAJ,CAAWV,OAAX,CAAmBP,YAAnB,CAAgCG,SAAhC,EAA2CC,IAA3C,EAAiDY,UAAjD,CAAJ;AAAA,KAAL,CAA1D,CAAnC;AAAA,GAAb,CAAX;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nexport function _stakerPrefs(instanceId, api) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return memo(instanceId, (accountId, eras, _withActive) => api.query.staking.erasValidatorPrefs.multi(eras.map(era => [era, accountId])).pipe(map(all => all.map((validatorPrefs, index) => ({\n    era: eras[index],\n    validatorPrefs\n  })))));\n}\nexport function stakerPrefs(instanceId, api) {\n  return memo(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._stakerPrefs(accountId, eras, withActive))));\n}"]},"metadata":{},"sourceType":"module"}