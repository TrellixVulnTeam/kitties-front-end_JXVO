{"ast":null,"code":"// Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER } from \"./defaults.js\";\nexport function encodePair(_ref, passphrase) {\n  var publicKey = _ref.publicKey,\n      secretKey = _ref.secretKey;\n  assert(secretKey, 'Expected a valid secretKey to be passed to encode');\n  var encoded = u8aConcat(PKCS8_HEADER, secretKey, PKCS8_DIVIDER, publicKey);\n\n  if (!passphrase) {\n    return encoded;\n  }\n\n  var _scryptEncode = scryptEncode(passphrase),\n      params = _scryptEncode.params,\n      password = _scryptEncode.password,\n      salt = _scryptEncode.salt;\n\n  var _naclEncrypt = naclEncrypt(encoded, password.subarray(0, 32)),\n      encrypted = _naclEncrypt.encrypted,\n      nonce = _naclEncrypt.nonce;\n\n  return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/keyring/pair/encode.js"],"names":["assert","u8aConcat","naclEncrypt","scryptEncode","scryptToU8a","PKCS8_DIVIDER","PKCS8_HEADER","encodePair","passphrase","publicKey","secretKey","encoded","params","password","salt","subarray","encrypted","nonce"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,gBAAlC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,QAAuD,uBAAvD;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AACA,OAAO,SAASC,UAAT,OAGJC,UAHI,EAGQ;AAAA,MAFbC,SAEa,QAFbA,SAEa;AAAA,MADbC,SACa,QADbA,SACa;AACbV,EAAAA,MAAM,CAACU,SAAD,EAAY,mDAAZ,CAAN;AACA,MAAMC,OAAO,GAAGV,SAAS,CAACK,YAAD,EAAeI,SAAf,EAA0BL,aAA1B,EAAyCI,SAAzC,CAAzB;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACf,WAAOG,OAAP;AACD;;AAED,sBAIIR,YAAY,CAACK,UAAD,CAJhB;AAAA,MACEI,MADF,iBACEA,MADF;AAAA,MAEEC,QAFF,iBAEEA,QAFF;AAAA,MAGEC,IAHF,iBAGEA,IAHF;;AAKA,qBAGIZ,WAAW,CAACS,OAAD,EAAUE,QAAQ,CAACE,QAAT,CAAkB,CAAlB,EAAqB,EAArB,CAAV,CAHf;AAAA,MACEC,SADF,gBACEA,SADF;AAAA,MAEEC,KAFF,gBAEEA,KAFF;;AAIA,SAAOhB,SAAS,CAACG,WAAW,CAACU,IAAD,EAAOF,MAAP,CAAZ,EAA4BK,KAA5B,EAAmCD,SAAnC,CAAhB;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER } from \"./defaults.js\";\nexport function encodePair({\n  publicKey,\n  secretKey\n}, passphrase) {\n  assert(secretKey, 'Expected a valid secretKey to be passed to encode');\n  const encoded = u8aConcat(PKCS8_HEADER, secretKey, PKCS8_DIVIDER, publicKey);\n\n  if (!passphrase) {\n    return encoded;\n  }\n\n  const {\n    params,\n    password,\n    salt\n  } = scryptEncode(passphrase);\n  const {\n    encrypted,\n    nonce\n  } = naclEncrypt(encoded, password.subarray(0, 32));\n  return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}"]},"metadata":{},"sourceType":"module"}