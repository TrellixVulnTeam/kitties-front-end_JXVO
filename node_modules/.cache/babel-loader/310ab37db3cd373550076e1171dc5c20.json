{"ast":null,"code":"import _toConsumableArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToU8a, compactToU8a, stringToU8a, u8aConcat, u8aSorted } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nimport { decodeAddress } from \"./decode.js\";\nvar PREFIX = stringToU8a('modlpy/utilisuba');\nexport function createKeyMulti(who, threshold) {\n  return blake2AsU8a(u8aConcat.apply(void 0, [PREFIX, compactToU8a(who.length)].concat(_toConsumableArray(u8aSorted(who.map(function (who) {\n    return decodeAddress(who);\n  }))), [bnToU8a(threshold, {\n    bitLength: 16,\n    isLe: true\n  })])));\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/util-crypto/address/keyMulti.js"],"names":["bnToU8a","compactToU8a","stringToU8a","u8aConcat","u8aSorted","blake2AsU8a","decodeAddress","PREFIX","createKeyMulti","who","threshold","length","map","bitLength","isLe"],"mappings":";AAAA;AACA;AACA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,WAAhC,EAA6CC,SAA7C,EAAwDC,SAAxD,QAAyE,gBAAzE;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,IAAMC,MAAM,GAAGL,WAAW,CAAC,kBAAD,CAA1B;AACA,OAAO,SAASM,cAAT,CAAwBC,GAAxB,EAA6BC,SAA7B,EAAwC;AAC7C,SAAOL,WAAW,CAACF,SAAS,MAAT,UAAUI,MAAV,EAAkBN,YAAY,CAACQ,GAAG,CAACE,MAAL,CAA9B,4BAA+CP,SAAS,CAACK,GAAG,CAACG,GAAJ,CAAQ,UAAAH,GAAG;AAAA,WAAIH,aAAa,CAACG,GAAD,CAAjB;AAAA,GAAX,CAAD,CAAxD,IAA8FT,OAAO,CAACU,SAAD,EAAY;AAClIG,IAAAA,SAAS,EAAE,EADuH;AAElIC,IAAAA,IAAI,EAAE;AAF4H,GAAZ,CAArG,GAAD,CAAlB;AAID","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToU8a, compactToU8a, stringToU8a, u8aConcat, u8aSorted } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nimport { decodeAddress } from \"./decode.js\";\nconst PREFIX = stringToU8a('modlpy/utilisuba');\nexport function createKeyMulti(who, threshold) {\n  return blake2AsU8a(u8aConcat(PREFIX, compactToU8a(who.length), ...u8aSorted(who.map(who => decodeAddress(who))), bnToU8a(threshold, {\n    bitLength: 16,\n    isLe: true\n  })));\n}"]},"metadata":{},"sourceType":"module"}