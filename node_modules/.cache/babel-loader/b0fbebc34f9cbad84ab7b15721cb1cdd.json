{"ast":null,"code":"import _toConsumableArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { flattenUniq } from \"./flattenUniq.js\";\nimport { validateTypes } from \"./validateTypes.js\";\n/** @internal */\n\nfunction unwrapCalls(mod) {\n  return mod.calls ? mod.calls.unwrapOr([]) : [];\n}\n/** @internal */\n\n\nfunction typeToString(_ref) {\n  var type = _ref.type;\n  return type.toString();\n}\n/** @internal */\n\n\nfunction getCallNames(_ref2) {\n  var modules = _ref2.modules;\n  return modules.map(function (mod) {\n    return unwrapCalls(mod).map(function (_ref3) {\n      var args = _ref3.args;\n      return args.map(typeToString);\n    });\n  });\n}\n/** @internal */\n\n\nfunction getConstantNames(_ref4) {\n  var modules = _ref4.modules;\n  return modules.map(function (_ref5) {\n    var constants = _ref5.constants;\n    return (constants || []).map(typeToString);\n  });\n}\n/** @internal */\n\n\nfunction unwrapEvents(events) {\n  return events ? events.unwrapOr([]) : [];\n}\n/** @internal */\n\n\nfunction getEventNames(_ref6) {\n  var modules = _ref6.modules;\n  return modules.map(function (_ref7) {\n    var events = _ref7.events;\n    return unwrapEvents(events).map(function (_ref8) {\n      var args = _ref8.args;\n      return args.map(function (a) {\n        return a.toString();\n      });\n    });\n  });\n}\n/** @internal */\n\n\nfunction unwrapStorage(storage) {\n  return storage ? storage.unwrapOr({\n    items: []\n  }).items : [];\n}\n/** @internal */\n\n\nfunction getStorageNames(_ref9) {\n  var modules = _ref9.modules;\n  return modules.map(function (_ref10) {\n    var storage = _ref10.storage;\n    return unwrapStorage(storage).map(function (_ref11) {\n      var type = _ref11.type;\n      return type.isPlain ? [type.asPlain.toString()] : type.isMap ? [type.asMap.value.toString(), type.asMap.key.toString()] : type.isDoubleMap ? [type.asDoubleMap.value.toString(), type.asDoubleMap.key1.toString(), type.asDoubleMap.key2.toString()] : [type.asNMap.value.toString()].concat(_toConsumableArray(type.asNMap.keyVec.map(function (k) {\n        return k.toString();\n      })));\n    });\n  });\n}\n/** @internal */\n\n\nexport function getUniqTypes(registry, meta, throwError) {\n  return validateTypes(registry, throwError, flattenUniq([getCallNames(meta), getConstantNames(meta), getEventNames(meta), getStorageNames(meta)]));\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/metadata/util/getUniqTypes.js"],"names":["flattenUniq","validateTypes","unwrapCalls","mod","calls","unwrapOr","typeToString","type","toString","getCallNames","modules","map","args","getConstantNames","constants","unwrapEvents","events","getEventNames","a","unwrapStorage","storage","items","getStorageNames","isPlain","asPlain","isMap","asMap","value","key","isDoubleMap","asDoubleMap","key1","key2","asNMap","keyVec","k","getUniqTypes","registry","meta","throwError"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { flattenUniq } from \"./flattenUniq.js\";\nimport { validateTypes } from \"./validateTypes.js\";\n\n/** @internal */\nfunction unwrapCalls(mod) {\n  return mod.calls ? mod.calls.unwrapOr([]) : [];\n}\n/** @internal */\n\n\nfunction typeToString({\n  type\n}) {\n  return type.toString();\n}\n/** @internal */\n\n\nfunction getCallNames({\n  modules\n}) {\n  return modules.map(mod => unwrapCalls(mod).map(({\n    args\n  }) => args.map(typeToString)));\n}\n/** @internal */\n\n\nfunction getConstantNames({\n  modules\n}) {\n  return modules.map(({\n    constants\n  }) => (constants || []).map(typeToString));\n}\n/** @internal */\n\n\nfunction unwrapEvents(events) {\n  return events ? events.unwrapOr([]) : [];\n}\n/** @internal */\n\n\nfunction getEventNames({\n  modules\n}) {\n  return modules.map(({\n    events\n  }) => unwrapEvents(events).map(({\n    args\n  }) => args.map(a => a.toString())));\n}\n/** @internal */\n\n\nfunction unwrapStorage(storage) {\n  return storage ? storage.unwrapOr({\n    items: []\n  }).items : [];\n}\n/** @internal */\n\n\nfunction getStorageNames({\n  modules\n}) {\n  return modules.map(({\n    storage\n  }) => unwrapStorage(storage).map(({\n    type\n  }) => type.isPlain ? [type.asPlain.toString()] : type.isMap ? [type.asMap.value.toString(), type.asMap.key.toString()] : type.isDoubleMap ? [type.asDoubleMap.value.toString(), type.asDoubleMap.key1.toString(), type.asDoubleMap.key2.toString()] : [type.asNMap.value.toString(), ...type.asNMap.keyVec.map(k => k.toString())]));\n}\n/** @internal */\n\n\nexport function getUniqTypes(registry, meta, throwError) {\n  return validateTypes(registry, throwError, flattenUniq([getCallNames(meta), getConstantNames(meta), getEventNames(meta), getStorageNames(meta)]));\n}"]},"metadata":{},"sourceType":"module"}