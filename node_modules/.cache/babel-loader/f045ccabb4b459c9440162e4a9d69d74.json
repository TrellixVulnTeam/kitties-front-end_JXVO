{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { asmJsInit } from '@polkadot/wasm-crypto-asmjs';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nimport { allocString, allocU8a, getWasm, initWasm, resultString, resultU8a, withWasm } from \"./bridge.js\";\nimport * as imports from \"./imports.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nvar wasmPromise = initWasm(wasmBytes, asmJsInit, imports).catch(function () {\n  return null;\n});\nexport var bip39Generate = withWasm(function (wasm) {\n  return function (words) {\n    wasm.ext_bip39_generate(8, words);\n    return resultString();\n  };\n});\nexport var bip39ToEntropy = withWasm(function (wasm) {\n  return function (phrase) {\n    var _allocString = allocString(phrase),\n        _allocString2 = _slicedToArray(_allocString, 2),\n        ptr0 = _allocString2[0],\n        len0 = _allocString2[1];\n\n    wasm.ext_bip39_to_entropy(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var bip39ToMiniSecret = withWasm(function (wasm) {\n  return function (phrase, password) {\n    var _allocString3 = allocString(phrase),\n        _allocString4 = _slicedToArray(_allocString3, 2),\n        ptr0 = _allocString4[0],\n        len0 = _allocString4[1];\n\n    var _allocString5 = allocString(password),\n        _allocString6 = _slicedToArray(_allocString5, 2),\n        ptr1 = _allocString6[0],\n        len1 = _allocString6[1];\n\n    wasm.ext_bip39_to_mini_secret(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var bip39ToSeed = withWasm(function (wasm) {\n  return function (phrase, password) {\n    var _allocString7 = allocString(phrase),\n        _allocString8 = _slicedToArray(_allocString7, 2),\n        ptr0 = _allocString8[0],\n        len0 = _allocString8[1];\n\n    var _allocString9 = allocString(password),\n        _allocString10 = _slicedToArray(_allocString9, 2),\n        ptr1 = _allocString10[0],\n        len1 = _allocString10[1];\n\n    wasm.ext_bip39_to_seed(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var bip39Validate = withWasm(function (wasm) {\n  return function (phrase) {\n    var _allocString11 = allocString(phrase),\n        _allocString12 = _slicedToArray(_allocString11, 2),\n        ptr0 = _allocString12[0],\n        len0 = _allocString12[1];\n\n    var ret = wasm.ext_bip39_validate(ptr0, len0);\n    return ret !== 0;\n  };\n});\nexport var ed25519KeypairFromSeed = withWasm(function (wasm) {\n  return function (seed) {\n    var _allocU8a = allocU8a(seed),\n        _allocU8a2 = _slicedToArray(_allocU8a, 2),\n        ptr0 = _allocU8a2[0],\n        len0 = _allocU8a2[1];\n\n    wasm.ext_ed_from_seed(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var ed25519Sign = withWasm(function (wasm) {\n  return function (pubkey, seckey, message) {\n    var _allocU8a3 = allocU8a(pubkey),\n        _allocU8a4 = _slicedToArray(_allocU8a3, 2),\n        ptr0 = _allocU8a4[0],\n        len0 = _allocU8a4[1];\n\n    var _allocU8a5 = allocU8a(seckey),\n        _allocU8a6 = _slicedToArray(_allocU8a5, 2),\n        ptr1 = _allocU8a6[0],\n        len1 = _allocU8a6[1];\n\n    var _allocU8a7 = allocU8a(message),\n        _allocU8a8 = _slicedToArray(_allocU8a7, 2),\n        ptr2 = _allocU8a8[0],\n        len2 = _allocU8a8[1];\n\n    wasm.ext_ed_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n    return resultU8a();\n  };\n});\nexport var ed25519Verify = withWasm(function (wasm) {\n  return function (signature, message, pubkey) {\n    var _allocU8a9 = allocU8a(signature),\n        _allocU8a10 = _slicedToArray(_allocU8a9, 2),\n        ptr0 = _allocU8a10[0],\n        len0 = _allocU8a10[1];\n\n    var _allocU8a11 = allocU8a(message),\n        _allocU8a12 = _slicedToArray(_allocU8a11, 2),\n        ptr1 = _allocU8a12[0],\n        len1 = _allocU8a12[1];\n\n    var _allocU8a13 = allocU8a(pubkey),\n        _allocU8a14 = _slicedToArray(_allocU8a13, 2),\n        ptr2 = _allocU8a14[0],\n        len2 = _allocU8a14[1];\n\n    var ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret !== 0;\n  };\n});\nexport var sr25519DeriveKeypairHard = withWasm(function (wasm) {\n  return function (pair, cc) {\n    var _allocU8a15 = allocU8a(pair),\n        _allocU8a16 = _slicedToArray(_allocU8a15, 2),\n        ptr0 = _allocU8a16[0],\n        len0 = _allocU8a16[1];\n\n    var _allocU8a17 = allocU8a(cc),\n        _allocU8a18 = _slicedToArray(_allocU8a17, 2),\n        ptr1 = _allocU8a18[0],\n        len1 = _allocU8a18[1];\n\n    wasm.ext_sr_derive_keypair_hard(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var sr25519DeriveKeypairSoft = withWasm(function (wasm) {\n  return function (pair, cc) {\n    var _allocU8a19 = allocU8a(pair),\n        _allocU8a20 = _slicedToArray(_allocU8a19, 2),\n        ptr0 = _allocU8a20[0],\n        len0 = _allocU8a20[1];\n\n    var _allocU8a21 = allocU8a(cc),\n        _allocU8a22 = _slicedToArray(_allocU8a21, 2),\n        ptr1 = _allocU8a22[0],\n        len1 = _allocU8a22[1];\n\n    wasm.ext_sr_derive_keypair_soft(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var sr25519DerivePublicSoft = withWasm(function (wasm) {\n  return function (pubkey, cc) {\n    var _allocU8a23 = allocU8a(pubkey),\n        _allocU8a24 = _slicedToArray(_allocU8a23, 2),\n        ptr0 = _allocU8a24[0],\n        len0 = _allocU8a24[1];\n\n    var _allocU8a25 = allocU8a(cc),\n        _allocU8a26 = _slicedToArray(_allocU8a25, 2),\n        ptr1 = _allocU8a26[0],\n        len1 = _allocU8a26[1];\n\n    wasm.ext_sr_derive_public_soft(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var sr25519KeypairFromSeed = withWasm(function (wasm) {\n  return function (seed) {\n    var _allocU8a27 = allocU8a(seed),\n        _allocU8a28 = _slicedToArray(_allocU8a27, 2),\n        ptr0 = _allocU8a28[0],\n        len0 = _allocU8a28[1];\n\n    wasm.ext_sr_from_seed(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var sr25519Sign = withWasm(function (wasm) {\n  return function (pubkey, secret, message) {\n    var _allocU8a29 = allocU8a(pubkey),\n        _allocU8a30 = _slicedToArray(_allocU8a29, 2),\n        ptr0 = _allocU8a30[0],\n        len0 = _allocU8a30[1];\n\n    var _allocU8a31 = allocU8a(secret),\n        _allocU8a32 = _slicedToArray(_allocU8a31, 2),\n        ptr1 = _allocU8a32[0],\n        len1 = _allocU8a32[1];\n\n    var _allocU8a33 = allocU8a(message),\n        _allocU8a34 = _slicedToArray(_allocU8a33, 2),\n        ptr2 = _allocU8a34[0],\n        len2 = _allocU8a34[1];\n\n    wasm.ext_sr_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n    return resultU8a();\n  };\n});\nexport var sr25519Verify = withWasm(function (wasm) {\n  return function (signature, message, pubkey) {\n    var _allocU8a35 = allocU8a(signature),\n        _allocU8a36 = _slicedToArray(_allocU8a35, 2),\n        ptr0 = _allocU8a36[0],\n        len0 = _allocU8a36[1];\n\n    var _allocU8a37 = allocU8a(message),\n        _allocU8a38 = _slicedToArray(_allocU8a37, 2),\n        ptr1 = _allocU8a38[0],\n        len1 = _allocU8a38[1];\n\n    var _allocU8a39 = allocU8a(pubkey),\n        _allocU8a40 = _slicedToArray(_allocU8a39, 2),\n        ptr2 = _allocU8a40[0],\n        len2 = _allocU8a40[1];\n\n    var ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret !== 0;\n  };\n});\nexport var vrfSign = withWasm(function (wasm) {\n  return function (secret, context, message, extra) {\n    var _allocU8a41 = allocU8a(secret),\n        _allocU8a42 = _slicedToArray(_allocU8a41, 2),\n        ptr0 = _allocU8a42[0],\n        len0 = _allocU8a42[1];\n\n    var _allocU8a43 = allocU8a(context),\n        _allocU8a44 = _slicedToArray(_allocU8a43, 2),\n        ptr1 = _allocU8a44[0],\n        len1 = _allocU8a44[1];\n\n    var _allocU8a45 = allocU8a(message),\n        _allocU8a46 = _slicedToArray(_allocU8a45, 2),\n        ptr2 = _allocU8a46[0],\n        len2 = _allocU8a46[1];\n\n    var _allocU8a47 = allocU8a(extra),\n        _allocU8a48 = _slicedToArray(_allocU8a47, 2),\n        ptr3 = _allocU8a48[0],\n        len3 = _allocU8a48[1];\n\n    wasm.ext_vrf_sign(8, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return resultU8a();\n  };\n});\nexport var vrfVerify = withWasm(function (wasm) {\n  return function (pubkey, context, message, extra, outAndProof) {\n    var _allocU8a49 = allocU8a(pubkey),\n        _allocU8a50 = _slicedToArray(_allocU8a49, 2),\n        ptr0 = _allocU8a50[0],\n        len0 = _allocU8a50[1];\n\n    var _allocU8a51 = allocU8a(context),\n        _allocU8a52 = _slicedToArray(_allocU8a51, 2),\n        ptr1 = _allocU8a52[0],\n        len1 = _allocU8a52[1];\n\n    var _allocU8a53 = allocU8a(message),\n        _allocU8a54 = _slicedToArray(_allocU8a53, 2),\n        ptr2 = _allocU8a54[0],\n        len2 = _allocU8a54[1];\n\n    var _allocU8a55 = allocU8a(extra),\n        _allocU8a56 = _slicedToArray(_allocU8a55, 2),\n        ptr3 = _allocU8a56[0],\n        len3 = _allocU8a56[1];\n\n    var _allocU8a57 = allocU8a(outAndProof),\n        _allocU8a58 = _slicedToArray(_allocU8a57, 2),\n        ptr4 = _allocU8a58[0],\n        len4 = _allocU8a58[1];\n\n    var ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return ret !== 0;\n  };\n});\nexport var blake2b = withWasm(function (wasm) {\n  return function (data, key, size) {\n    var _allocU8a59 = allocU8a(data),\n        _allocU8a60 = _slicedToArray(_allocU8a59, 2),\n        ptr0 = _allocU8a60[0],\n        len0 = _allocU8a60[1];\n\n    var _allocU8a61 = allocU8a(key),\n        _allocU8a62 = _slicedToArray(_allocU8a61, 2),\n        ptr1 = _allocU8a62[0],\n        len1 = _allocU8a62[1];\n\n    wasm.ext_blake2b(8, ptr0, len0, ptr1, len1, size);\n    return resultU8a();\n  };\n});\nexport var keccak256 = withWasm(function (wasm) {\n  return function (data) {\n    var _allocU8a63 = allocU8a(data),\n        _allocU8a64 = _slicedToArray(_allocU8a63, 2),\n        ptr0 = _allocU8a64[0],\n        len0 = _allocU8a64[1];\n\n    wasm.ext_keccak256(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var pbkdf2 = withWasm(function (wasm) {\n  return function (data, salt, rounds) {\n    var _allocU8a65 = allocU8a(data),\n        _allocU8a66 = _slicedToArray(_allocU8a65, 2),\n        ptr0 = _allocU8a66[0],\n        len0 = _allocU8a66[1];\n\n    var _allocU8a67 = allocU8a(salt),\n        _allocU8a68 = _slicedToArray(_allocU8a67, 2),\n        ptr1 = _allocU8a68[0],\n        len1 = _allocU8a68[1];\n\n    wasm.ext_pbkdf2(8, ptr0, len0, ptr1, len1, rounds);\n    return resultU8a();\n  };\n});\nexport var scrypt = withWasm(function (wasm) {\n  return function (password, salt, log2n, r, p) {\n    var _allocU8a69 = allocU8a(password),\n        _allocU8a70 = _slicedToArray(_allocU8a69, 2),\n        ptr0 = _allocU8a70[0],\n        len0 = _allocU8a70[1];\n\n    var _allocU8a71 = allocU8a(salt),\n        _allocU8a72 = _slicedToArray(_allocU8a71, 2),\n        ptr1 = _allocU8a72[0],\n        len1 = _allocU8a72[1];\n\n    wasm.ext_scrypt(8, ptr0, len0, ptr1, len1, log2n, r, p);\n    return resultU8a();\n  };\n});\nexport var sha512 = withWasm(function (wasm) {\n  return function (data) {\n    var _allocU8a73 = allocU8a(data),\n        _allocU8a74 = _slicedToArray(_allocU8a73, 2),\n        ptr0 = _allocU8a74[0],\n        len0 = _allocU8a74[1];\n\n    wasm.ext_sha512(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var twox = withWasm(function (wasm) {\n  return function (data, rounds) {\n    var _allocU8a75 = allocU8a(data),\n        _allocU8a76 = _slicedToArray(_allocU8a75, 2),\n        ptr0 = _allocU8a76[0],\n        len0 = _allocU8a76[1];\n\n    wasm.ext_twox(8, ptr0, len0, rounds);\n    return resultU8a();\n  };\n});\nexport function isReady() {\n  return !!getWasm();\n}\nexport function waitReady() {\n  return wasmPromise.then(function () {\n    return isReady();\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/wasm-crypto/bundle.js"],"names":["asmJsInit","wasmBytes","allocString","allocU8a","getWasm","initWasm","resultString","resultU8a","withWasm","imports","packageInfo","wasmPromise","catch","bip39Generate","wasm","words","ext_bip39_generate","bip39ToEntropy","phrase","ptr0","len0","ext_bip39_to_entropy","bip39ToMiniSecret","password","ptr1","len1","ext_bip39_to_mini_secret","bip39ToSeed","ext_bip39_to_seed","bip39Validate","ret","ext_bip39_validate","ed25519KeypairFromSeed","seed","ext_ed_from_seed","ed25519Sign","pubkey","seckey","message","ptr2","len2","ext_ed_sign","ed25519Verify","signature","ext_ed_verify","sr25519DeriveKeypairHard","pair","cc","ext_sr_derive_keypair_hard","sr25519DeriveKeypairSoft","ext_sr_derive_keypair_soft","sr25519DerivePublicSoft","ext_sr_derive_public_soft","sr25519KeypairFromSeed","ext_sr_from_seed","sr25519Sign","secret","ext_sr_sign","sr25519Verify","ext_sr_verify","vrfSign","context","extra","ptr3","len3","ext_vrf_sign","vrfVerify","outAndProof","ptr4","len4","ext_vrf_verify","blake2b","data","key","size","ext_blake2b","keccak256","ext_keccak256","pbkdf2","salt","rounds","ext_pbkdf2","scrypt","log2n","r","p","ext_scrypt","sha512","ext_sha512","twox","ext_twox","isReady","waitReady","then"],"mappings":"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","sourcesContent":["// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { asmJsInit } from '@polkadot/wasm-crypto-asmjs';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nimport { allocString, allocU8a, getWasm, initWasm, resultString, resultU8a, withWasm } from \"./bridge.js\";\nimport * as imports from \"./imports.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nconst wasmPromise = initWasm(wasmBytes, asmJsInit, imports).catch(() => null);\nexport const bip39Generate = withWasm(wasm => words => {\n  wasm.ext_bip39_generate(8, words);\n  return resultString();\n});\nexport const bip39ToEntropy = withWasm(wasm => phrase => {\n  const [ptr0, len0] = allocString(phrase);\n  wasm.ext_bip39_to_entropy(8, ptr0, len0);\n  return resultU8a();\n});\nexport const bip39ToMiniSecret = withWasm(wasm => (phrase, password) => {\n  const [ptr0, len0] = allocString(phrase);\n  const [ptr1, len1] = allocString(password);\n  wasm.ext_bip39_to_mini_secret(8, ptr0, len0, ptr1, len1);\n  return resultU8a();\n});\nexport const bip39ToSeed = withWasm(wasm => (phrase, password) => {\n  const [ptr0, len0] = allocString(phrase);\n  const [ptr1, len1] = allocString(password);\n  wasm.ext_bip39_to_seed(8, ptr0, len0, ptr1, len1);\n  return resultU8a();\n});\nexport const bip39Validate = withWasm(wasm => phrase => {\n  const [ptr0, len0] = allocString(phrase);\n  const ret = wasm.ext_bip39_validate(ptr0, len0);\n  return ret !== 0;\n});\nexport const ed25519KeypairFromSeed = withWasm(wasm => seed => {\n  const [ptr0, len0] = allocU8a(seed);\n  wasm.ext_ed_from_seed(8, ptr0, len0);\n  return resultU8a();\n});\nexport const ed25519Sign = withWasm(wasm => (pubkey, seckey, message) => {\n  const [ptr0, len0] = allocU8a(pubkey);\n  const [ptr1, len1] = allocU8a(seckey);\n  const [ptr2, len2] = allocU8a(message);\n  wasm.ext_ed_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n  return resultU8a();\n});\nexport const ed25519Verify = withWasm(wasm => (signature, message, pubkey) => {\n  const [ptr0, len0] = allocU8a(signature);\n  const [ptr1, len1] = allocU8a(message);\n  const [ptr2, len2] = allocU8a(pubkey);\n  const ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n  return ret !== 0;\n});\nexport const sr25519DeriveKeypairHard = withWasm(wasm => (pair, cc) => {\n  const [ptr0, len0] = allocU8a(pair);\n  const [ptr1, len1] = allocU8a(cc);\n  wasm.ext_sr_derive_keypair_hard(8, ptr0, len0, ptr1, len1);\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairSoft = withWasm(wasm => (pair, cc) => {\n  const [ptr0, len0] = allocU8a(pair);\n  const [ptr1, len1] = allocU8a(cc);\n  wasm.ext_sr_derive_keypair_soft(8, ptr0, len0, ptr1, len1);\n  return resultU8a();\n});\nexport const sr25519DerivePublicSoft = withWasm(wasm => (pubkey, cc) => {\n  const [ptr0, len0] = allocU8a(pubkey);\n  const [ptr1, len1] = allocU8a(cc);\n  wasm.ext_sr_derive_public_soft(8, ptr0, len0, ptr1, len1);\n  return resultU8a();\n});\nexport const sr25519KeypairFromSeed = withWasm(wasm => seed => {\n  const [ptr0, len0] = allocU8a(seed);\n  wasm.ext_sr_from_seed(8, ptr0, len0);\n  return resultU8a();\n});\nexport const sr25519Sign = withWasm(wasm => (pubkey, secret, message) => {\n  const [ptr0, len0] = allocU8a(pubkey);\n  const [ptr1, len1] = allocU8a(secret);\n  const [ptr2, len2] = allocU8a(message);\n  wasm.ext_sr_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n  return resultU8a();\n});\nexport const sr25519Verify = withWasm(wasm => (signature, message, pubkey) => {\n  const [ptr0, len0] = allocU8a(signature);\n  const [ptr1, len1] = allocU8a(message);\n  const [ptr2, len2] = allocU8a(pubkey);\n  const ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n  return ret !== 0;\n});\nexport const vrfSign = withWasm(wasm => (secret, context, message, extra) => {\n  const [ptr0, len0] = allocU8a(secret);\n  const [ptr1, len1] = allocU8a(context);\n  const [ptr2, len2] = allocU8a(message);\n  const [ptr3, len3] = allocU8a(extra);\n  wasm.ext_vrf_sign(8, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n  return resultU8a();\n});\nexport const vrfVerify = withWasm(wasm => (pubkey, context, message, extra, outAndProof) => {\n  const [ptr0, len0] = allocU8a(pubkey);\n  const [ptr1, len1] = allocU8a(context);\n  const [ptr2, len2] = allocU8a(message);\n  const [ptr3, len3] = allocU8a(extra);\n  const [ptr4, len4] = allocU8a(outAndProof);\n  const ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n  return ret !== 0;\n});\nexport const blake2b = withWasm(wasm => (data, key, size) => {\n  const [ptr0, len0] = allocU8a(data);\n  const [ptr1, len1] = allocU8a(key);\n  wasm.ext_blake2b(8, ptr0, len0, ptr1, len1, size);\n  return resultU8a();\n});\nexport const keccak256 = withWasm(wasm => data => {\n  const [ptr0, len0] = allocU8a(data);\n  wasm.ext_keccak256(8, ptr0, len0);\n  return resultU8a();\n});\nexport const pbkdf2 = withWasm(wasm => (data, salt, rounds) => {\n  const [ptr0, len0] = allocU8a(data);\n  const [ptr1, len1] = allocU8a(salt);\n  wasm.ext_pbkdf2(8, ptr0, len0, ptr1, len1, rounds);\n  return resultU8a();\n});\nexport const scrypt = withWasm(wasm => (password, salt, log2n, r, p) => {\n  const [ptr0, len0] = allocU8a(password);\n  const [ptr1, len1] = allocU8a(salt);\n  wasm.ext_scrypt(8, ptr0, len0, ptr1, len1, log2n, r, p);\n  return resultU8a();\n});\nexport const sha512 = withWasm(wasm => data => {\n  const [ptr0, len0] = allocU8a(data);\n  wasm.ext_sha512(8, ptr0, len0);\n  return resultU8a();\n});\nexport const twox = withWasm(wasm => (data, rounds) => {\n  const [ptr0, len0] = allocU8a(data);\n  wasm.ext_twox(8, ptr0, len0, rounds);\n  return resultU8a();\n});\nexport function isReady() {\n  return !!getWasm();\n}\nexport function waitReady() {\n  return wasmPromise.then(() => isReady());\n}"]},"metadata":{},"sourceType":"module"}