{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { assert } from '@polkadot/util';\nimport { Struct } from \"../codec/index.js\";\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toV13 } from \"./v12/toV13.js\";\nimport { toLatest } from \"./v13/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes as _getUniqTypes, toCallsOnly } from \"./util/index.js\";\nvar LATEST_VERSION = 13;\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\nvar _converted = /*#__PURE__*/_classPrivateFieldLooseKey(\"converted\");\n\nvar _assertVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"assertVersion\");\n\nvar _getVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"getVersion\");\n\nvar _metadata = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadata\");\n\nexport var MetadataVersioned = /*#__PURE__*/function (_Struct) {\n  _inherits(MetadataVersioned, _Struct);\n\n  var _super = _createSuper(MetadataVersioned);\n\n  function MetadataVersioned(registry, value) {\n    var _this;\n\n    _classCallCheck(this, MetadataVersioned);\n\n    _this = _super.call(this, registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value);\n    Object.defineProperty(_assertThisInitialized(_this), _converted, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _assertVersion, {\n      writable: true,\n      value: function value(version) {\n        assert(_this.version <= version, function () {\n          return \"Cannot convert metadata from version \".concat(_this.version, \" to \").concat(version);\n        });\n        return _this.version === version;\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _getVersion, {\n      writable: true,\n      value: function value(version, fromPrev) {\n        var asCurr = \"asV\".concat(version);\n        var asPrev = version === 'latest' ? \"asV\".concat(LATEST_VERSION) : \"asV\".concat(version - 1);\n\n        if (version !== 'latest' && _classPrivateFieldLooseBase(_assertThisInitialized(_this), _assertVersion)[_assertVersion](version)) {\n          return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _metadata)[_metadata]()[asCurr];\n        }\n\n        if (!_classPrivateFieldLooseBase(_assertThisInitialized(_this), _converted)[_converted].has(version)) {\n          _classPrivateFieldLooseBase(_assertThisInitialized(_this), _converted)[_converted].set(version, fromPrev(_this.registry, _this[asPrev], _this.version));\n        }\n\n        return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _converted)[_converted].get(version);\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _metadata, {\n      writable: true,\n      value: function value() {\n        return _this.get('metadata');\n      }\n    });\n    return _this;\n  }\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n\n\n  _createClass(MetadataVersioned, [{\n    key: \"asCallsOnly\",\n    get: function get() {\n      return new MetadataVersioned(this.registry, {\n        magicNumber: this.magicNumber,\n        metadata: this.registry.createType('MetadataAll', toCallsOnly(this.registry, this.asLatest), this.version)\n      });\n    }\n    /**\n     * @description Returns the wrapped metadata as a V9 object\n     */\n\n  }, {\n    key: \"asV9\",\n    get: function get() {\n      _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](9);\n\n      return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().asV9;\n    }\n    /**\n     * @description Returns the wrapped values as a V10 object\n     */\n\n  }, {\n    key: \"asV10\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](10, toV10);\n    }\n    /**\n     * @description Returns the wrapped values as a V11 object\n     */\n\n  }, {\n    key: \"asV11\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](11, toV11);\n    }\n    /**\n     * @description Returns the wrapped values as a V12 object\n     */\n\n  }, {\n    key: \"asV12\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](12, toV12);\n    }\n    /**\n     * @description Returns the wrapped values as a V13 object\n     */\n\n  }, {\n    key: \"asV13\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](13, toV13);\n    }\n    /**\n     * @description Returns the wrapped values as a latest version object\n     */\n\n  }, {\n    key: \"asLatest\",\n    get: function get() {\n      // This is non-existent & latest - applied here to do the module-specific type conversions\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion]('latest', toLatest);\n    }\n    /**\n     * @description The magicNumber for the Metadata (known constant)\n     */\n\n  }, {\n    key: \"magicNumber\",\n    get: function get() {\n      return this.get('magicNumber');\n    }\n    /**\n     * @description the metadata version this structure represents\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().index;\n    }\n  }, {\n    key: \"getUniqTypes\",\n    value: function getUniqTypes(throwError) {\n      return _getUniqTypes(this.registry, this.asLatest, throwError);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n      // needed to ensure we have the correct overrides (which is only applied in toLatest)\n      // eslint-disable-next-line no-unused-expressions\n      this.asLatest;\n      return _get(_getPrototypeOf(MetadataVersioned.prototype), \"toJSON\", this).call(this);\n    }\n  }]);\n\n  return MetadataVersioned;\n}(Struct);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/metadata/MetadataVersioned.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","assert","Struct","toV10","toV11","toV12","toV13","toLatest","MagicNumber","getUniqTypes","toCallsOnly","LATEST_VERSION","_converted","_assertVersion","_getVersion","_metadata","MetadataVersioned","registry","value","magicNumber","metadata","Object","defineProperty","writable","Map","version","fromPrev","asCurr","asPrev","has","set","get","createType","asLatest","asV9","index","throwError"],"mappings":"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","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { Struct } from \"../codec/index.js\";\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toV13 } from \"./v12/toV13.js\";\nimport { toLatest } from \"./v13/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes, toCallsOnly } from \"./util/index.js\";\nconst LATEST_VERSION = 13;\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\nvar _converted = /*#__PURE__*/_classPrivateFieldLooseKey(\"converted\");\n\nvar _assertVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"assertVersion\");\n\nvar _getVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"getVersion\");\n\nvar _metadata = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadata\");\n\nexport class MetadataVersioned extends Struct {\n  constructor(registry, value) {\n    super(registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value);\n    Object.defineProperty(this, _converted, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _assertVersion, {\n      writable: true,\n      value: version => {\n        assert(this.version <= version, () => `Cannot convert metadata from version ${this.version} to ${version}`);\n        return this.version === version;\n      }\n    });\n    Object.defineProperty(this, _getVersion, {\n      writable: true,\n      value: (version, fromPrev) => {\n        const asCurr = `asV${version}`;\n        const asPrev = version === 'latest' ? `asV${LATEST_VERSION}` : `asV${version - 1}`;\n\n        if (version !== 'latest' && _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](version)) {\n          return _classPrivateFieldLooseBase(this, _metadata)[_metadata]()[asCurr];\n        }\n\n        if (!_classPrivateFieldLooseBase(this, _converted)[_converted].has(version)) {\n          _classPrivateFieldLooseBase(this, _converted)[_converted].set(version, fromPrev(this.registry, this[asPrev], this.version));\n        }\n\n        return _classPrivateFieldLooseBase(this, _converted)[_converted].get(version);\n      }\n    });\n    Object.defineProperty(this, _metadata, {\n      writable: true,\n      value: () => {\n        return this.get('metadata');\n      }\n    });\n  }\n\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n  get asCallsOnly() {\n    return new MetadataVersioned(this.registry, {\n      magicNumber: this.magicNumber,\n      metadata: this.registry.createType('MetadataAll', toCallsOnly(this.registry, this.asLatest), this.version)\n    });\n  }\n  /**\n   * @description Returns the wrapped metadata as a V9 object\n   */\n\n\n  get asV9() {\n    _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](9);\n\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().asV9;\n  }\n  /**\n   * @description Returns the wrapped values as a V10 object\n   */\n\n\n  get asV10() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](10, toV10);\n  }\n  /**\n   * @description Returns the wrapped values as a V11 object\n   */\n\n\n  get asV11() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](11, toV11);\n  }\n  /**\n   * @description Returns the wrapped values as a V12 object\n   */\n\n\n  get asV12() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](12, toV12);\n  }\n  /**\n   * @description Returns the wrapped values as a V13 object\n   */\n\n\n  get asV13() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](13, toV13);\n  }\n  /**\n   * @description Returns the wrapped values as a latest version object\n   */\n\n\n  get asLatest() {\n    // This is non-existent & latest - applied here to do the module-specific type conversions\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion]('latest', toLatest);\n  }\n  /**\n   * @description The magicNumber for the Metadata (known constant)\n   */\n\n\n  get magicNumber() {\n    return this.get('magicNumber');\n  }\n  /**\n   * @description the metadata version this structure represents\n   */\n\n\n  get version() {\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().index;\n  }\n\n  getUniqTypes(throwError) {\n    return getUniqTypes(this.registry, this.asLatest, throwError);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n    // needed to ensure we have the correct overrides (which is only applied in toLatest)\n    // eslint-disable-next-line no-unused-expressions\n    this.asLatest;\n    return super.toJSON();\n  }\n\n}"]},"metadata":{},"sourceType":"module"}