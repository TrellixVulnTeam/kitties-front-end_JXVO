{"ast":null,"code":"import _objectSpread from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Statistic,Grid,Card,Icon}from'semantic-ui-react';import{useSubstrate}from'./substrate-lib';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(props){var _useSubstrate=useSubstrate(),api=_useSubstrate.api;var finalized=props.finalized;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),blockNumber=_useState2[0],setBlockNumber=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),blockNumberTimer=_useState4[0],setBlockNumberTimer=_useState4[1];var bestNumber=finalized?api.derive.chain.bestNumberFinalized:api.derive.chain.bestNumber;useEffect(function(){var unsubscribeAll=null;bestNumber(function(number){setBlockNumber(number.toNumber());setBlockNumberTimer(0);}).then(function(unsub){unsubscribeAll=unsub;}).catch(console.error);return function(){return unsubscribeAll&&unsubscribeAll();};},[bestNumber]);var timer=function timer(){setBlockNumberTimer(function(time){return time+1;});};useEffect(function(){var id=setInterval(timer,1000);return function(){return clearInterval(id);};},[]);return/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Content,{textAlign:\"center\",children:/*#__PURE__*/_jsx(Statistic,{label:(finalized?'Finalized':'Current')+' Block',value:blockNumber})}),/*#__PURE__*/_jsxs(Card.Content,{extra:true,children:[/*#__PURE__*/_jsx(Icon,{name:\"time\"}),\" \",blockNumberTimer]})]})});}export default function BlockNumber(props){var _useSubstrate2=useSubstrate(),api=_useSubstrate2.api;return api.derive&&api.derive.chain&&api.derive.chain.bestNumber&&api.derive.chain.bestNumberFinalized?/*#__PURE__*/_jsx(Main,_objectSpread({},props)):null;}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/src/BlockNumber.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","Main","props","api","finalized","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","unsubscribeAll","number","toNumber","then","unsub","catch","console","error","timer","time","id","setInterval","clearInterval","BlockNumber"],"mappings":"+YAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,IAA1B,CAAgCC,IAAhC,KAA4C,mBAA5C,CAEA,OAASC,YAAT,KAA6B,iBAA7B,C,wFAEA,QAASC,CAAAA,IAAT,CAAeC,KAAf,CAAsB,CACpB,kBAAgBF,YAAY,EAA5B,CAAQG,GAAR,eAAQA,GAAR,CACA,GAAQC,CAAAA,SAAR,CAAsBF,KAAtB,CAAQE,SAAR,CACA,cAAsCT,QAAQ,CAAC,CAAD,CAA9C,wCAAOU,WAAP,eAAoBC,cAApB,eACA,eAAgDX,QAAQ,CAAC,CAAD,CAAxD,yCAAOY,gBAAP,eAAyBC,mBAAzB,eAEA,GAAMC,CAAAA,UAAU,CAAGL,SAAS,CACxBD,GAAG,CAACO,MAAJ,CAAWC,KAAX,CAAiBC,mBADO,CAExBT,GAAG,CAACO,MAAJ,CAAWC,KAAX,CAAiBF,UAFrB,CAIAf,SAAS,CAAC,UAAM,CACd,GAAImB,CAAAA,cAAc,CAAG,IAArB,CAEAJ,UAAU,CAAC,SAAAK,MAAM,CAAI,CACnBR,cAAc,CAACQ,MAAM,CAACC,QAAP,EAAD,CAAd,CACAP,mBAAmB,CAAC,CAAD,CAAnB,CACD,CAHS,CAAV,CAIGQ,IAJH,CAIQ,SAAAC,KAAK,CAAI,CACbJ,cAAc,CAAGI,KAAjB,CACD,CANH,EAOGC,KAPH,CAOSC,OAAO,CAACC,KAPjB,EASA,MAAO,kBAAMP,CAAAA,cAAc,EAAIA,cAAc,EAAtC,EAAP,CACD,CAbQ,CAaN,CAACJ,UAAD,CAbM,CAAT,CAeA,GAAMY,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClBb,mBAAmB,CAAC,SAAAc,IAAI,QAAIA,CAAAA,IAAI,CAAG,CAAX,EAAL,CAAnB,CACD,CAFD,CAIA5B,SAAS,CAAC,UAAM,CACd,GAAM6B,CAAAA,EAAE,CAAGC,WAAW,CAACH,KAAD,CAAQ,IAAR,CAAtB,CACA,MAAO,kBAAMI,CAAAA,aAAa,CAACF,EAAD,CAAnB,EAAP,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,KAAC,IAAD,CAAM,MAAN,wBACE,MAAC,IAAD,yBACE,KAAC,IAAD,CAAM,OAAN,EAAc,SAAS,CAAC,QAAxB,uBACE,KAAC,SAAD,EACE,KAAK,CAAE,CAACnB,SAAS,CAAG,WAAH,CAAiB,SAA3B,EAAwC,QADjD,CAEE,KAAK,CAAEC,WAFT,EADF,EADF,cAOE,MAAC,IAAD,CAAM,OAAN,EAAc,KAAK,KAAnB,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,MAAX,EADF,KACwBE,gBADxB,GAPF,GADF,EADF,CAeD,CAED,cAAe,SAASmB,CAAAA,WAAT,CAAsBxB,KAAtB,CAA6B,CAC1C,mBAAgBF,YAAY,EAA5B,CAAQG,GAAR,gBAAQA,GAAR,CACA,MAAOA,CAAAA,GAAG,CAACO,MAAJ,EACLP,GAAG,CAACO,MAAJ,CAAWC,KADN,EAELR,GAAG,CAACO,MAAJ,CAAWC,KAAX,CAAiBF,UAFZ,EAGLN,GAAG,CAACO,MAAJ,CAAWC,KAAX,CAAiBC,mBAHZ,cAKH,KAAC,IAAD,kBAAUV,KAAV,EALG,CAOH,IAPJ,CAQD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const { finalized } = props\n  const [blockNumber, setBlockNumber] = useState(0)\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0)\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber\n\n  useEffect(() => {\n    let unsubscribeAll = null\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber())\n      setBlockNumberTimer(0)\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub\n      })\n      .catch(console.error)\n\n    return () => unsubscribeAll && unsubscribeAll()\n  }, [bestNumber])\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1)\n  }\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000)\n    return () => clearInterval(id)\n  }, [])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate()\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized\n    ? (\n      <Main {...props} />\n      )\n    : null\n}\n"]},"metadata":{},"sourceType":"module"}