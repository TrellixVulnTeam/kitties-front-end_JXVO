{"ast":null,"code":"import _toArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { BN, bnMax, isFunction } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nvar VESTING_ID = '0x76657374696e6720';\n\nfunction calcLocked(api, bestNumber, locks) {\n  var lockedBalance = api.registry.createType('Balance');\n  var lockedBreakdown = [];\n  var vestingLocked = api.registry.createType('Balance');\n  var allLocked = false;\n\n  if (Array.isArray(locks)) {\n    // only get the locks that are valid until passed the current block\n    lockedBreakdown = locks.filter(function (_ref) {\n      var until = _ref.until;\n      return !until || bestNumber && until.gt(bestNumber);\n    });\n    allLocked = lockedBreakdown.some(function (_ref2) {\n      var amount = _ref2.amount;\n      return amount && amount.isMax();\n    });\n    vestingLocked = api.registry.createType('Balance', lockedBreakdown.filter(function (_ref3) {\n      var id = _ref3.id;\n      return id.eq(VESTING_ID);\n    }).reduce(function (result, _ref4) {\n      var amount = _ref4.amount;\n      return result.iadd(amount);\n    }, new BN(0))); // get the maximum of the locks according to https://github.com/paritytech/substrate/blob/master/srml/balances/src/lib.rs#L699\n\n    var notAll = lockedBreakdown.filter(function (_ref5) {\n      var amount = _ref5.amount;\n      return amount && !amount.isMax();\n    });\n\n    if (notAll.length) {\n      lockedBalance = api.registry.createType('Balance', bnMax.apply(void 0, _toConsumableArray(notAll.map(function (_ref6) {\n        var amount = _ref6.amount;\n        return amount;\n      }))));\n    }\n  }\n\n  return {\n    allLocked: allLocked,\n    lockedBalance: lockedBalance,\n    lockedBreakdown: lockedBreakdown,\n    vestingLocked: vestingLocked\n  };\n}\n\nfunction calcShared(api, bestNumber, data, locks) {\n  var _calcLocked = calcLocked(api, bestNumber, locks),\n      allLocked = _calcLocked.allLocked,\n      lockedBalance = _calcLocked.lockedBalance,\n      lockedBreakdown = _calcLocked.lockedBreakdown,\n      vestingLocked = _calcLocked.vestingLocked;\n\n  return _objectSpread(_objectSpread({}, data), {}, {\n    availableBalance: api.registry.createType('Balance', allLocked ? 0 : bnMax(new BN(0), data.freeBalance.sub(lockedBalance))),\n    lockedBalance: lockedBalance,\n    lockedBreakdown: lockedBreakdown,\n    vestingLocked: vestingLocked\n  });\n}\n\nfunction calcBalances(api, _ref7) {\n  var _ref8 = _slicedToArray(_ref7, 3),\n      data = _ref8[0],\n      bestNumber = _ref8[1],\n      _ref8$ = _slicedToArray(_ref8[2], 2),\n      vesting = _ref8$[0],\n      allLocks = _ref8$[1];\n\n  var shared = calcShared(api, bestNumber, data, allLocks[0]); // Calculate the vesting balances,\n  //  - offset = balance locked at startingBlock\n  //  - perBlock is the unlock amount\n\n  var emptyVest = api.registry.createType('VestingInfo');\n\n  var _ref9 = vesting || emptyVest,\n      vestingTotal = _ref9.locked,\n      perBlock = _ref9.perBlock,\n      startingBlock = _ref9.startingBlock;\n\n  var isStarted = bestNumber.gt(startingBlock);\n  var vestedNow = isStarted ? perBlock.mul(bestNumber.sub(startingBlock)) : new BN(0);\n  var vestedBalance = vestedNow.gt(vestingTotal) ? vestingTotal : api.registry.createType('Balance', vestedNow);\n  var isVesting = isStarted && !shared.vestingLocked.isZero();\n  return _objectSpread(_objectSpread({}, shared), {}, {\n    accountId: data.accountId,\n    accountNonce: data.accountNonce,\n    additional: allLocks.filter(function (_, index) {\n      return index !== 0;\n    }).map(function (l, index) {\n      return calcShared(api, bestNumber, data.additional[index], l);\n    }),\n    isVesting: isVesting,\n    vestedBalance: vestedBalance,\n    vestedClaimable: api.registry.createType('Balance', isVesting ? shared.vestingLocked.sub(vestingTotal.sub(vestedBalance)) : 0),\n    vestingEndBlock: api.registry.createType('BlockNumber', isVesting ? vestingTotal.div(perBlock).add(startingBlock) : 0),\n    vestingPerBlock: perBlock,\n    vestingTotal: vestingTotal\n  });\n} // old\n\n\nfunction queryOld(api, accountId) {\n  return api.queryMulti([[api.query.balances.locks, accountId], [api.query.balances.vesting, accountId]]).pipe(map(function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        locks = _ref11[0],\n        optVesting = _ref11[1];\n\n    var vestingNew = null;\n\n    if (optVesting.isSome) {\n      var _optVesting$unwrap = optVesting.unwrap(),\n          locked = _optVesting$unwrap.offset,\n          perBlock = _optVesting$unwrap.perBlock,\n          startingBlock = _optVesting$unwrap.startingBlock;\n\n      vestingNew = api.registry.createType('VestingInfo', {\n        locked: locked,\n        perBlock: perBlock,\n        startingBlock: startingBlock\n      });\n    }\n\n    return [vestingNew, [locks]];\n  }));\n}\n\nvar isNonNullable = function isNonNullable(nullable) {\n  return !!nullable;\n}; // current (balances, vesting)\n\n\nfunction queryCurrent(api, accountId) {\n  var balanceInstances = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['balances'];\n\n  var _api$query$vesting;\n\n  var calls = balanceInstances.map(function (m) {\n    var _m, _api$query;\n\n    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customLocks) || ((_api$query = api.query[m]) === null || _api$query === void 0 ? void 0 : _api$query.locks);\n  });\n  var lockEmpty = calls.map(function (c) {\n    return !c;\n  });\n  var queries = calls.filter(isNonNullable).map(function (c) {\n    return [c, accountId];\n  });\n  return ((_api$query$vesting = api.query.vesting) !== null && _api$query$vesting !== void 0 && _api$query$vesting.vesting ? api.queryMulti([[api.query.vesting.vesting, accountId]].concat(_toConsumableArray(queries))) // TODO We need to check module instances here as well, not only the balances module\n  : queries.length ? api.queryMulti(queries).pipe(map(function (r) {\n    return [api.registry.createType('Option<VestingInfo>')].concat(_toConsumableArray(r));\n  })) : of([api.registry.createType('Option<VestingInfo>')])).pipe(map(function (_ref12) {\n    var _ref13 = _toArray(_ref12),\n        opt = _ref13[0],\n        locks = _ref13.slice(1);\n\n    var offset = -1;\n    return [opt.unwrapOr(null), lockEmpty.map(function (e) {\n      return e ? api.registry.createType('Vec<BalanceLock>') : locks[++offset];\n    })];\n  }));\n}\n/**\n * @name all\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nexport function all(instanceId, api) {\n  var balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');\n  return memo(instanceId, function (address) {\n    return api.derive.balances.account(address).pipe(switchMap(function (account) {\n      var _api$query$system, _api$query$balances;\n\n      return !account.accountId.isEmpty ? combineLatest([of(account), api.derive.chain.bestNumber(), isFunction((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) || isFunction((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryCurrent(api, account.accountId, balanceInstances) : queryOld(api, account.accountId)]) : of([account, api.registry.createType('BlockNumber'), [null, []]]);\n    }), map(function (result) {\n      return calcBalances(api, result);\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/balances/all.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","combineLatest","map","of","switchMap","BN","bnMax","isFunction","memo","VESTING_ID","calcLocked","api","bestNumber","locks","lockedBalance","registry","createType","lockedBreakdown","vestingLocked","allLocked","Array","isArray","until","gt","some","amount","isMax","id","eq","reduce","result","iadd","notAll","calcShared","data","availableBalance","freeBalance","sub","calcBalances","vesting","allLocks","shared","emptyVest","vestingTotal","locked","perBlock","startingBlock","isStarted","vestedNow","mul","vestedBalance","isVesting","isZero","accountId","accountNonce","additional","_","index","l","vestedClaimable","vestingEndBlock","div","add","vestingPerBlock","queryOld","queryMulti","query","balances","pipe","optVesting","vestingNew","isSome","unwrap","offset","isNonNullable","nullable","queryCurrent","balanceInstances","_api$query$vesting","calls","m","_m","_api$query","derive","customLocks","lockEmpty","c","queries","r","opt","unwrapOr","e","all","instanceId","getModuleInstances","runtimeVersion","specName","toString","address","account","_api$query$system","_api$query$balances","isEmpty","chain","system"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { BN, bnMax, isFunction } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nconst VESTING_ID = '0x76657374696e6720';\n\nfunction calcLocked(api, bestNumber, locks) {\n  let lockedBalance = api.registry.createType('Balance');\n  let lockedBreakdown = [];\n  let vestingLocked = api.registry.createType('Balance');\n  let allLocked = false;\n\n  if (Array.isArray(locks)) {\n    // only get the locks that are valid until passed the current block\n    lockedBreakdown = locks.filter(({\n      until\n    }) => !until || bestNumber && until.gt(bestNumber));\n    allLocked = lockedBreakdown.some(({\n      amount\n    }) => amount && amount.isMax());\n    vestingLocked = api.registry.createType('Balance', lockedBreakdown.filter(({\n      id\n    }) => id.eq(VESTING_ID)).reduce((result, {\n      amount\n    }) => result.iadd(amount), new BN(0))); // get the maximum of the locks according to https://github.com/paritytech/substrate/blob/master/srml/balances/src/lib.rs#L699\n\n    const notAll = lockedBreakdown.filter(({\n      amount\n    }) => amount && !amount.isMax());\n\n    if (notAll.length) {\n      lockedBalance = api.registry.createType('Balance', bnMax(...notAll.map(({\n        amount\n      }) => amount)));\n    }\n  }\n\n  return {\n    allLocked,\n    lockedBalance,\n    lockedBreakdown,\n    vestingLocked\n  };\n}\n\nfunction calcShared(api, bestNumber, data, locks) {\n  const {\n    allLocked,\n    lockedBalance,\n    lockedBreakdown,\n    vestingLocked\n  } = calcLocked(api, bestNumber, locks);\n  return _objectSpread(_objectSpread({}, data), {}, {\n    availableBalance: api.registry.createType('Balance', allLocked ? 0 : bnMax(new BN(0), data.freeBalance.sub(lockedBalance))),\n    lockedBalance,\n    lockedBreakdown,\n    vestingLocked\n  });\n}\n\nfunction calcBalances(api, [data, bestNumber, [vesting, allLocks]]) {\n  const shared = calcShared(api, bestNumber, data, allLocks[0]); // Calculate the vesting balances,\n  //  - offset = balance locked at startingBlock\n  //  - perBlock is the unlock amount\n\n  const emptyVest = api.registry.createType('VestingInfo');\n  const {\n    locked: vestingTotal,\n    perBlock,\n    startingBlock\n  } = vesting || emptyVest;\n  const isStarted = bestNumber.gt(startingBlock);\n  const vestedNow = isStarted ? perBlock.mul(bestNumber.sub(startingBlock)) : new BN(0);\n  const vestedBalance = vestedNow.gt(vestingTotal) ? vestingTotal : api.registry.createType('Balance', vestedNow);\n  const isVesting = isStarted && !shared.vestingLocked.isZero();\n  return _objectSpread(_objectSpread({}, shared), {}, {\n    accountId: data.accountId,\n    accountNonce: data.accountNonce,\n    additional: allLocks.filter((_, index) => index !== 0).map((l, index) => calcShared(api, bestNumber, data.additional[index], l)),\n    isVesting,\n    vestedBalance,\n    vestedClaimable: api.registry.createType('Balance', isVesting ? shared.vestingLocked.sub(vestingTotal.sub(vestedBalance)) : 0),\n    vestingEndBlock: api.registry.createType('BlockNumber', isVesting ? vestingTotal.div(perBlock).add(startingBlock) : 0),\n    vestingPerBlock: perBlock,\n    vestingTotal\n  });\n} // old\n\n\nfunction queryOld(api, accountId) {\n  return api.queryMulti([[api.query.balances.locks, accountId], [api.query.balances.vesting, accountId]]).pipe(map(([locks, optVesting]) => {\n    let vestingNew = null;\n\n    if (optVesting.isSome) {\n      const {\n        offset: locked,\n        perBlock,\n        startingBlock\n      } = optVesting.unwrap();\n      vestingNew = api.registry.createType('VestingInfo', {\n        locked,\n        perBlock,\n        startingBlock\n      });\n    }\n\n    return [vestingNew, [locks]];\n  }));\n}\n\nconst isNonNullable = nullable => !!nullable; // current (balances, vesting)\n\n\nfunction queryCurrent(api, accountId, balanceInstances = ['balances']) {\n  var _api$query$vesting;\n\n  const calls = balanceInstances.map(m => {\n    var _m, _api$query;\n\n    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customLocks) || ((_api$query = api.query[m]) === null || _api$query === void 0 ? void 0 : _api$query.locks);\n  });\n  const lockEmpty = calls.map(c => !c);\n  const queries = calls.filter(isNonNullable).map(c => [c, accountId]);\n  return ((_api$query$vesting = api.query.vesting) !== null && _api$query$vesting !== void 0 && _api$query$vesting.vesting ? api.queryMulti([[api.query.vesting.vesting, accountId], ...queries]) // TODO We need to check module instances here as well, not only the balances module\n  : queries.length ? api.queryMulti(queries).pipe(map(r => [api.registry.createType('Option<VestingInfo>'), ...r])) : of([api.registry.createType('Option<VestingInfo>')])).pipe(map(([opt, ...locks]) => {\n    let offset = -1;\n    return [opt.unwrapOr(null), lockEmpty.map(e => e ? api.registry.createType('Vec<BalanceLock>') : locks[++offset])];\n  }));\n}\n/**\n * @name all\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nexport function all(instanceId, api) {\n  const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');\n  return memo(instanceId, address => api.derive.balances.account(address).pipe(switchMap(account => {\n    var _api$query$system, _api$query$balances;\n\n    return !account.accountId.isEmpty ? combineLatest([of(account), api.derive.chain.bestNumber(), isFunction((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) || isFunction((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryCurrent(api, account.accountId, balanceInstances) : queryOld(api, account.accountId)]) : of([account, api.registry.createType('BlockNumber'), [null, []]]);\n  }), map(result => calcBalances(api, result))));\n}"]},"metadata":{},"sourceType":"module"}