{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a } from '@polkadot/util';\nimport { Struct } from \"../../codec/Struct.js\";\nexport var EXTRINSIC_VERSION = 4;\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\n\nexport var GenericExtrinsicV4 = /*#__PURE__*/function (_Struct) {\n  _inherits(GenericExtrinsicV4, _Struct);\n\n  var _super = _createSuper(GenericExtrinsicV4);\n\n  function GenericExtrinsicV4(registry, value) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        isSigned = _ref.isSigned;\n\n    _classCallCheck(this, GenericExtrinsicV4);\n\n    return _super.call(this, registry, {\n      signature: 'ExtrinsicSignatureV4',\n      // eslint-disable-next-line sort-keys\n      method: 'Call'\n    }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n  }\n  /** @internal */\n\n\n  _createClass(GenericExtrinsicV4, [{\n    key: \"encodedLength\",\n    get:\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    function get() {\n      return this.toU8a().length;\n    }\n    /**\n     * @description The [[Call]] this extrinsic wraps\n     */\n\n  }, {\n    key: \"method\",\n    get: function get() {\n      return this.get('method');\n    }\n    /**\n     * @description The [[ExtrinsicSignatureV4]]\n     */\n\n  }, {\n    key: \"signature\",\n    get: function get() {\n      return this.get('signature');\n    }\n    /**\n     * @description The version for the signature\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return EXTRINSIC_VERSION;\n    }\n    /**\n     * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n     */\n\n  }, {\n    key: \"addSignature\",\n    value: function addSignature(signer, signature, payload) {\n      this.signature.addSignature(signer, signature, payload);\n      return this;\n    }\n    /**\n     * @description Sign the extrinsic with a specific keypair\n     */\n\n  }, {\n    key: \"sign\",\n    value: function sign(account, options) {\n      this.signature.sign(this.method, account, options);\n      return this;\n    }\n    /**\n     * @describe Adds a fake signature to the extrinsic\n     */\n\n  }, {\n    key: \"signFake\",\n    value: function signFake(signer, options) {\n      this.signature.signFake(this.method, signer, options);\n      return this;\n    }\n  }], [{\n    key: \"decodeExtrinsic\",\n    value: function decodeExtrinsic(registry, value) {\n      var isSigned = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (value instanceof GenericExtrinsicV4) {\n        return value;\n      } else if (value instanceof registry.createClass('Call')) {\n        return {\n          method: value\n        };\n      } else if (isU8a(value)) {\n        // here we decode manually since we need to pull through the version information\n        var signature = registry.createType('ExtrinsicSignatureV4', value, {\n          isSigned: isSigned\n        });\n        var method = registry.createType('Call', value.subarray(signature.encodedLength));\n        return {\n          method: method,\n          signature: signature\n        };\n      }\n\n      return value || {};\n    }\n  }]);\n\n  return GenericExtrinsicV4;\n}(Struct);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js"],"names":["isU8a","Struct","EXTRINSIC_VERSION","GenericExtrinsicV4","registry","value","isSigned","signature","method","decodeExtrinsic","toU8a","length","get","signer","payload","addSignature","account","options","sign","signFake","createClass","createType","subarray","encodedLength"],"mappings":";;;;AAAA;AACA;AACA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAO,IAAMC,iBAAiB,GAAG,CAA1B;AAEP;AACA;AACA;AACA;AACA;;AACA,WAAaC,kBAAb;AAAA;;AAAA;;AACE,8BAAYC,QAAZ,EAAsBC,KAAtB,EAEQ;AAAA,mFAAJ,EAAI;AAAA,QADNC,QACM,QADNA,QACM;;AAAA;;AAAA,6BACAF,QADA,EACU;AACdG,MAAAA,SAAS,EAAE,sBADG;AAEd;AACAC,MAAAA,MAAM,EAAE;AAHM,KADV,EAKHL,kBAAkB,CAACM,eAAnB,CAAmCL,QAAnC,EAA6CC,KAA7C,EAAoDC,QAApD,CALG;AAMP;AACD;;;AAVF;AAAA;AAAA;AAkCE;AACF;AACA;AAGE,mBAAoB;AAClB,aAAO,KAAKI,KAAL,GAAaC,MAApB;AACD;AACD;AACF;AACA;;AA5CA;AAAA;AAAA,SA+CE,eAAa;AACX,aAAO,KAAKC,GAAL,CAAS,QAAT,CAAP;AACD;AACD;AACF;AACA;;AApDA;AAAA;AAAA,SAuDE,eAAgB;AACd,aAAO,KAAKA,GAAL,CAAS,WAAT,CAAP;AACD;AACD;AACF;AACA;;AA5DA;AAAA;AAAA,SA+DE,eAAc;AACZ,aAAOV,iBAAP;AACD;AACD;AACF;AACA;;AApEA;AAAA;AAAA,WAuEE,sBAAaW,MAAb,EAAqBN,SAArB,EAAgCO,OAAhC,EAAyC;AACvC,WAAKP,SAAL,CAAeQ,YAAf,CAA4BF,MAA5B,EAAoCN,SAApC,EAA+CO,OAA/C;AACA,aAAO,IAAP;AACD;AACD;AACF;AACA;;AA7EA;AAAA;AAAA,WAgFE,cAAKE,OAAL,EAAcC,OAAd,EAAuB;AACrB,WAAKV,SAAL,CAAeW,IAAf,CAAoB,KAAKV,MAAzB,EAAiCQ,OAAjC,EAA0CC,OAA1C;AACA,aAAO,IAAP;AACD;AACD;AACF;AACA;;AAtFA;AAAA;AAAA,WAyFE,kBAASJ,MAAT,EAAiBI,OAAjB,EAA0B;AACxB,WAAKV,SAAL,CAAeY,QAAf,CAAwB,KAAKX,MAA7B,EAAqCK,MAArC,EAA6CI,OAA7C;AACA,aAAO,IAAP;AACD;AA5FH;AAAA;AAAA,WAaE,yBAAuBb,QAAvB,EAAiCC,KAAjC,EAA0D;AAAA,UAAlBC,QAAkB,uEAAP,KAAO;;AACxD,UAAID,KAAK,YAAYF,kBAArB,EAAyC;AACvC,eAAOE,KAAP;AACD,OAFD,MAEO,IAAIA,KAAK,YAAYD,QAAQ,CAACgB,WAAT,CAAqB,MAArB,CAArB,EAAmD;AACxD,eAAO;AACLZ,UAAAA,MAAM,EAAEH;AADH,SAAP;AAGD,OAJM,MAIA,IAAIL,KAAK,CAACK,KAAD,CAAT,EAAkB;AACvB;AACA,YAAME,SAAS,GAAGH,QAAQ,CAACiB,UAAT,CAAoB,sBAApB,EAA4ChB,KAA5C,EAAmD;AACnEC,UAAAA,QAAQ,EAARA;AADmE,SAAnD,CAAlB;AAGA,YAAME,MAAM,GAAGJ,QAAQ,CAACiB,UAAT,CAAoB,MAApB,EAA4BhB,KAAK,CAACiB,QAAN,CAAef,SAAS,CAACgB,aAAzB,CAA5B,CAAf;AACA,eAAO;AACLf,UAAAA,MAAM,EAANA,MADK;AAELD,UAAAA,SAAS,EAATA;AAFK,SAAP;AAID;;AAED,aAAOF,KAAK,IAAI,EAAhB;AACD;AAjCH;;AAAA;AAAA,EAAwCJ,MAAxC","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a } from '@polkadot/util';\nimport { Struct } from \"../../codec/Struct.js\";\nexport const EXTRINSIC_VERSION = 4;\n\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\nexport class GenericExtrinsicV4 extends Struct {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, {\n      signature: 'ExtrinsicSignatureV4',\n      // eslint-disable-next-line sort-keys\n      method: 'Call'\n    }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsic(registry, value, isSigned = false) {\n    if (value instanceof GenericExtrinsicV4) {\n      return value;\n    } else if (value instanceof registry.createClass('Call')) {\n      return {\n        method: value\n      };\n    } else if (isU8a(value)) {\n      // here we decode manually since we need to pull through the version information\n      const signature = registry.createType('ExtrinsicSignatureV4', value, {\n        isSigned\n      });\n      const method = registry.createType('Call', value.subarray(signature.encodedLength));\n      return {\n        method,\n        signature\n      };\n    }\n\n    return value || {};\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.get('method');\n  }\n  /**\n   * @description The [[ExtrinsicSignatureV4]]\n   */\n\n\n  get signature() {\n    return this.get('signature');\n  }\n  /**\n   * @description The version for the signature\n   */\n\n\n  get version() {\n    return EXTRINSIC_VERSION;\n  }\n  /**\n   * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.signature.addSignature(signer, signature, payload);\n    return this;\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.signature.sign(this.method, account, options);\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.signature.signFake(this.method, signer, options);\n    return this;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}