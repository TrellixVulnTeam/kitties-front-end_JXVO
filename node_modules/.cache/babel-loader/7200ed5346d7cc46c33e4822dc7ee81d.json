{"ast":null,"code":"import _objectSpread from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Feed,Grid,Button}from'semantic-ui-react';import{useSubstrate}from'./substrate-lib';// Events to be filtered from feed\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FILTERED_EVENTS=['system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":0})','system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":1})'];function Main(props){var _useSubstrate=useSubstrate(),api=_useSubstrate.api;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),eventFeed=_useState2[0],setEventFeed=_useState2[1];useEffect(function(){var unsub=null;var allEvents=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.query.system.events(function(events){// loop through the Vec<EventRecord>\nevents.forEach(function(record){// extract the phase, event and the event types\nvar event=record.event,phase=record.phase;var types=event.typeDef;// show what we are busy with\n// show what we are busy with\nvar eventName=\"\".concat(event.section,\":\").concat(event.method,\":: (phase=\").concat(phase.toString(),\")\");if(FILTERED_EVENTS.includes(eventName))return;// loop through each of the parameters, displaying the type and data\n// loop through each of the parameters, displaying the type and data\nvar params=event.data.map(function(data,index){return\"\".concat(types[index].type,\": \").concat(data.toString());});setEventFeed(function(e){return[{icon:'bell',summary:\"\".concat(eventName,\"-\").concat(e.length),extraText:event.meta.docs.join(', ').toString(),content:params.join(', ')}].concat(_toConsumableArray(e));});});});case 2:unsub=_context.sent;case 3:case\"end\":return _context.stop();}}},_callee);}));return function allEvents(){return _ref.apply(this,arguments);};}();allEvents();return function(){return unsub&&unsub();};},[api.query.system]);var _props$feedMaxHeight=props.feedMaxHeight,feedMaxHeight=_props$feedMaxHeight===void 0?250:_props$feedMaxHeight;return/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(\"h1\",{style:{float:'left'},children:\"Events\"}),/*#__PURE__*/_jsx(Button,{basic:true,circular:true,size:\"mini\",color:\"grey\",floated:\"right\",icon:\"erase\",onClick:function onClick(_){return setEventFeed([]);}}),/*#__PURE__*/_jsx(Feed,{style:{clear:'both',overflow:'auto',maxHeight:feedMaxHeight},events:eventFeed})]});}export default function Events(props){var _useSubstrate2=useSubstrate(),api=_useSubstrate2.api;return api.query&&api.query.system&&api.query.system.events?/*#__PURE__*/_jsx(Main,_objectSpread({},props)):null;}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/src/Events.js"],"names":["React","useEffect","useState","Feed","Grid","Button","useSubstrate","FILTERED_EVENTS","Main","props","api","eventFeed","setEventFeed","unsub","allEvents","query","system","events","forEach","record","event","phase","types","typeDef","eventName","section","method","toString","includes","params","data","map","index","type","e","icon","summary","length","extraText","meta","docs","join","content","feedMaxHeight","float","_","clear","overflow","maxHeight","Events"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Feed, Grid, Button } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\n// Events to be filtered from feed\nconst FILTERED_EVENTS = [\n  'system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":0})',\n  'system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":1})'\n]\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [eventFeed, setEventFeed] = useState([])\n\n  useEffect(() => {\n    let unsub = null\n    const allEvents = async () => {\n      unsub = await api.query.system.events(events => {\n        // loop through the Vec<EventRecord>\n        events.forEach(record => {\n          // extract the phase, event and the event types\n          const { event, phase } = record\n          const types = event.typeDef\n\n          // show what we are busy with\n          const eventName = `${event.section}:${\n            event.method\n          }:: (phase=${phase.toString()})`\n\n          if (FILTERED_EVENTS.includes(eventName)) return\n\n          // loop through each of the parameters, displaying the type and data\n          const params = event.data.map(\n            (data, index) => `${types[index].type}: ${data.toString()}`\n          )\n\n          setEventFeed(e => [{\n            icon: 'bell',\n            summary: `${eventName}-${e.length}`,\n            extraText: event.meta.docs.join(', ').toString(),\n            content: params.join(', ')\n          }, ...e])\n        })\n      })\n    }\n\n    allEvents()\n    return () => unsub && unsub()\n  }, [api.query.system])\n\n  const { feedMaxHeight = 250 } = props\n\n  return (\n    <Grid.Column width={8}>\n      <h1 style={{ float: 'left' }}>Events</h1>\n      <Button\n        basic circular\n        size='mini'\n        color='grey'\n        floated='right'\n        icon='erase'\n        onClick={ _ => setEventFeed([]) }\n      />\n      <Feed style={{ clear: 'both', overflow: 'auto', maxHeight: feedMaxHeight }} events={eventFeed} />\n    </Grid.Column>\n  )\n}\n\nexport default function Events (props) {\n  const { api } = useSubstrate()\n  return api.query && api.query.system && api.query.system.events\n    ? (\n    <Main {...props} />\n      )\n    : null\n}\n"]},"metadata":{},"sourceType":"module"}