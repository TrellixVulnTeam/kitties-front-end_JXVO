{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { deriveCache, memo } from \"../util/index.js\";\nvar CACHE_KEY = 'eraExposure';\n\nfunction mapStakers(era, stakers) {\n  var nominators = {};\n  var validators = {};\n  stakers.forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        exposure = _ref2[1];\n\n    var validatorId = key.args[1].toString();\n    validators[validatorId] = exposure;\n    exposure.others.forEach(function (_ref3, validatorIndex) {\n      var who = _ref3.who;\n      var nominatorId = who.toString();\n      nominators[nominatorId] = nominators[nominatorId] || [];\n      nominators[nominatorId].push({\n        validatorId: validatorId,\n        validatorIndex: validatorIndex\n      });\n    });\n  });\n  return {\n    era: era,\n    nominators: nominators,\n    validators: validators\n  };\n}\n\nexport function _eraExposure(instanceId, api) {\n  return memo(instanceId, function (era, withActive) {\n    var cacheKey = \"\".concat(CACHE_KEY, \"-\").concat(era.toString());\n    var cached = withActive ? undefined : deriveCache.get(cacheKey);\n    return cached ? of(cached) : api.query.staking.erasStakersClipped.entries(era).pipe(map(function (stakers) {\n      var value = mapStakers(era, stakers);\n      !withActive && deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\nexport function eraExposure(instanceId, api) {\n  return memo(instanceId, function (era) {\n    return api.derive.staking._eraExposure(era, true);\n  });\n}\nexport function _erasExposure(instanceId, api) {\n  return memo(instanceId, function (eras, withActive) {\n    return eras.length ? combineLatest(eras.map(function (era) {\n      return api.derive.staking._eraExposure(era, withActive);\n    })) : of([]);\n  });\n}\nexport function erasExposure(instanceId, api) {\n  return memo(instanceId, function () {\n    var withActive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(function (eras) {\n      return api.derive.staking._erasExposure(eras, withActive);\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/staking/erasExposure.js"],"names":["combineLatest","map","of","switchMap","deriveCache","memo","CACHE_KEY","mapStakers","era","stakers","nominators","validators","forEach","key","exposure","validatorId","args","toString","others","validatorIndex","who","nominatorId","push","_eraExposure","instanceId","api","withActive","cacheKey","cached","undefined","get","query","staking","erasStakersClipped","entries","pipe","value","set","eraExposure","derive","_erasExposure","eras","length","erasExposure","erasHistoric"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { deriveCache, memo } from \"../util/index.js\";\nconst CACHE_KEY = 'eraExposure';\n\nfunction mapStakers(era, stakers) {\n  const nominators = {};\n  const validators = {};\n  stakers.forEach(([key, exposure]) => {\n    const validatorId = key.args[1].toString();\n    validators[validatorId] = exposure;\n    exposure.others.forEach(({\n      who\n    }, validatorIndex) => {\n      const nominatorId = who.toString();\n      nominators[nominatorId] = nominators[nominatorId] || [];\n      nominators[nominatorId].push({\n        validatorId,\n        validatorIndex\n      });\n    });\n  });\n  return {\n    era,\n    nominators,\n    validators\n  };\n}\n\nexport function _eraExposure(instanceId, api) {\n  return memo(instanceId, (era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}`;\n    const cached = withActive ? undefined : deriveCache.get(cacheKey);\n    return cached ? of(cached) : api.query.staking.erasStakersClipped.entries(era).pipe(map(stakers => {\n      const value = mapStakers(era, stakers);\n      !withActive && deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\nexport function eraExposure(instanceId, api) {\n  return memo(instanceId, era => api.derive.staking._eraExposure(era, true));\n}\nexport function _erasExposure(instanceId, api) {\n  return memo(instanceId, (eras, withActive) => eras.length ? combineLatest(eras.map(era => api.derive.staking._eraExposure(era, withActive))) : of([]));\n}\nexport function erasExposure(instanceId, api) {\n  return memo(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._erasExposure(eras, withActive))));\n}"]},"metadata":{},"sourceType":"module"}