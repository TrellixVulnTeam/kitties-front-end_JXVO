{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createTestKeyring } from '@polkadot/keyring';\nimport { isBoolean, isNumber, isString } from '@polkadot/util';\nimport { accounts } from \"./observable/accounts.js\";\nimport { addresses } from \"./observable/addresses.js\";\nimport { contracts } from \"./observable/contracts.js\";\nimport { env } from \"./observable/env.js\";\nimport { BrowserStore } from \"./stores/Browser.js\"; // direct import (skip index with all)\n\nvar _accounts = /*#__PURE__*/_classPrivateFieldLooseKey(\"accounts\");\n\nvar _addresses = /*#__PURE__*/_classPrivateFieldLooseKey(\"addresses\");\n\nvar _contracts = /*#__PURE__*/_classPrivateFieldLooseKey(\"contracts\");\n\nvar _keyring = /*#__PURE__*/_classPrivateFieldLooseKey(\"keyring\");\n\nexport var Base = /*#__PURE__*/function () {\n  function Base() {\n    var _this = this;\n\n    _classCallCheck(this, Base);\n\n    Object.defineProperty(this, _accounts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _addresses, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _contracts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _keyring, {\n      writable: true,\n      value: void 0\n    });\n    this._store = void 0;\n    this._genesisHash = void 0;\n\n    this.decodeAddress = function (key, ignoreChecksum, ss58Format) {\n      return _this.keyring.decodeAddress(key, ignoreChecksum, ss58Format);\n    };\n\n    this.encodeAddress = function (key, ss58Format) {\n      return _this.keyring.encodeAddress(key, ss58Format);\n    };\n\n    _classPrivateFieldLooseBase(this, _accounts)[_accounts] = accounts;\n    _classPrivateFieldLooseBase(this, _addresses)[_addresses] = addresses;\n    _classPrivateFieldLooseBase(this, _contracts)[_contracts] = contracts;\n    this._store = new BrowserStore();\n  }\n\n  _createClass(Base, [{\n    key: \"accounts\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _accounts)[_accounts];\n    }\n  }, {\n    key: \"addresses\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _addresses)[_addresses];\n    }\n  }, {\n    key: \"contracts\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _contracts)[_contracts];\n    }\n  }, {\n    key: \"keyring\",\n    get: function get() {\n      if (_classPrivateFieldLooseBase(this, _keyring)[_keyring]) {\n        return _classPrivateFieldLooseBase(this, _keyring)[_keyring];\n      }\n\n      throw new Error('Keyring should be initialised via \\'loadAll\\' before use');\n    }\n  }, {\n    key: \"genesisHash\",\n    get: function get() {\n      return this._genesisHash;\n    }\n  }, {\n    key: \"getPair\",\n    value: function getPair(address) {\n      return this.keyring.getPair(address);\n    }\n  }, {\n    key: \"getPairs\",\n    value: function getPairs() {\n      return this.keyring.getPairs().filter(function (pair) {\n        return env.isDevelopment() || pair.meta.isTesting !== true;\n      });\n    }\n  }, {\n    key: \"isAvailable\",\n    value: function isAvailable(_address) {\n      var accountsValue = this.accounts.subject.getValue();\n      var addressesValue = this.addresses.subject.getValue();\n      var contractsValue = this.contracts.subject.getValue();\n      var address = isString(_address) ? _address : this.encodeAddress(_address);\n      return !accountsValue[address] && !addressesValue[address] && !contractsValue[address];\n    }\n  }, {\n    key: \"isPassValid\",\n    value: function isPassValid(password) {\n      return password.length > 0;\n    }\n  }, {\n    key: \"setSS58Format\",\n    value: function setSS58Format(ss58Format) {\n      if (_classPrivateFieldLooseBase(this, _keyring)[_keyring] && isNumber(ss58Format)) {\n        _classPrivateFieldLooseBase(this, _keyring)[_keyring].setSS58Format(ss58Format);\n      }\n    }\n  }, {\n    key: \"setDevMode\",\n    value: function setDevMode(isDevelopment) {\n      env.set(isDevelopment);\n    }\n  }, {\n    key: \"initKeyring\",\n    value: function initKeyring(options) {\n      var keyring = createTestKeyring(options, true);\n\n      if (isBoolean(options.isDevelopment)) {\n        this.setDevMode(options.isDevelopment);\n      }\n\n      _classPrivateFieldLooseBase(this, _keyring)[_keyring] = keyring;\n      this._genesisHash = options.genesisHash && (isString(options.genesisHash) ? options.genesisHash.toString() : options.genesisHash.toHex());\n      this._store = options.store || this._store;\n      this.addAccountPairs();\n    }\n  }, {\n    key: \"addAccountPairs\",\n    value: function addAccountPairs() {\n      var _this2 = this;\n\n      this.keyring.getPairs().forEach(function (_ref) {\n        var address = _ref.address,\n            meta = _ref.meta;\n\n        _this2.accounts.add(_this2._store, address, {\n          address: address,\n          meta: meta\n        });\n      });\n    }\n  }, {\n    key: \"addTimestamp\",\n    value: function addTimestamp(pair) {\n      if (!pair.meta.whenCreated) {\n        pair.setMeta({\n          whenCreated: Date.now()\n        });\n      }\n    }\n  }]);\n\n  return Base;\n}();","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/ui-keyring/Base.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","createTestKeyring","isBoolean","isNumber","isString","accounts","addresses","contracts","env","BrowserStore","_accounts","_addresses","_contracts","_keyring","Base","Object","defineProperty","writable","value","_store","_genesisHash","decodeAddress","key","ignoreChecksum","ss58Format","keyring","encodeAddress","Error","address","getPair","getPairs","filter","pair","isDevelopment","meta","isTesting","_address","accountsValue","subject","getValue","addressesValue","contractsValue","password","length","setSS58Format","set","options","setDevMode","genesisHash","toString","toHex","store","addAccountPairs","forEach","add","whenCreated","setMeta","Date","now"],"mappings":"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","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createTestKeyring } from '@polkadot/keyring';\nimport { isBoolean, isNumber, isString } from '@polkadot/util';\nimport { accounts } from \"./observable/accounts.js\";\nimport { addresses } from \"./observable/addresses.js\";\nimport { contracts } from \"./observable/contracts.js\";\nimport { env } from \"./observable/env.js\";\nimport { BrowserStore } from \"./stores/Browser.js\"; // direct import (skip index with all)\n\nvar _accounts = /*#__PURE__*/_classPrivateFieldLooseKey(\"accounts\");\n\nvar _addresses = /*#__PURE__*/_classPrivateFieldLooseKey(\"addresses\");\n\nvar _contracts = /*#__PURE__*/_classPrivateFieldLooseKey(\"contracts\");\n\nvar _keyring = /*#__PURE__*/_classPrivateFieldLooseKey(\"keyring\");\n\nexport class Base {\n  constructor() {\n    Object.defineProperty(this, _accounts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _addresses, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _contracts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _keyring, {\n      writable: true,\n      value: void 0\n    });\n    this._store = void 0;\n    this._genesisHash = void 0;\n\n    this.decodeAddress = (key, ignoreChecksum, ss58Format) => {\n      return this.keyring.decodeAddress(key, ignoreChecksum, ss58Format);\n    };\n\n    this.encodeAddress = (key, ss58Format) => {\n      return this.keyring.encodeAddress(key, ss58Format);\n    };\n\n    _classPrivateFieldLooseBase(this, _accounts)[_accounts] = accounts;\n    _classPrivateFieldLooseBase(this, _addresses)[_addresses] = addresses;\n    _classPrivateFieldLooseBase(this, _contracts)[_contracts] = contracts;\n    this._store = new BrowserStore();\n  }\n\n  get accounts() {\n    return _classPrivateFieldLooseBase(this, _accounts)[_accounts];\n  }\n\n  get addresses() {\n    return _classPrivateFieldLooseBase(this, _addresses)[_addresses];\n  }\n\n  get contracts() {\n    return _classPrivateFieldLooseBase(this, _contracts)[_contracts];\n  }\n\n  get keyring() {\n    if (_classPrivateFieldLooseBase(this, _keyring)[_keyring]) {\n      return _classPrivateFieldLooseBase(this, _keyring)[_keyring];\n    }\n\n    throw new Error('Keyring should be initialised via \\'loadAll\\' before use');\n  }\n\n  get genesisHash() {\n    return this._genesisHash;\n  }\n\n  getPair(address) {\n    return this.keyring.getPair(address);\n  }\n\n  getPairs() {\n    return this.keyring.getPairs().filter(pair => env.isDevelopment() || pair.meta.isTesting !== true);\n  }\n\n  isAvailable(_address) {\n    const accountsValue = this.accounts.subject.getValue();\n    const addressesValue = this.addresses.subject.getValue();\n    const contractsValue = this.contracts.subject.getValue();\n    const address = isString(_address) ? _address : this.encodeAddress(_address);\n    return !accountsValue[address] && !addressesValue[address] && !contractsValue[address];\n  }\n\n  isPassValid(password) {\n    return password.length > 0;\n  }\n\n  setSS58Format(ss58Format) {\n    if (_classPrivateFieldLooseBase(this, _keyring)[_keyring] && isNumber(ss58Format)) {\n      _classPrivateFieldLooseBase(this, _keyring)[_keyring].setSS58Format(ss58Format);\n    }\n  }\n\n  setDevMode(isDevelopment) {\n    env.set(isDevelopment);\n  }\n\n  initKeyring(options) {\n    const keyring = createTestKeyring(options, true);\n\n    if (isBoolean(options.isDevelopment)) {\n      this.setDevMode(options.isDevelopment);\n    }\n\n    _classPrivateFieldLooseBase(this, _keyring)[_keyring] = keyring;\n    this._genesisHash = options.genesisHash && (isString(options.genesisHash) ? options.genesisHash.toString() : options.genesisHash.toHex());\n    this._store = options.store || this._store;\n    this.addAccountPairs();\n  }\n\n  addAccountPairs() {\n    this.keyring.getPairs().forEach(({\n      address,\n      meta\n    }) => {\n      this.accounts.add(this._store, address, {\n        address,\n        meta\n      });\n    });\n  }\n\n  addTimestamp(pair) {\n    if (!pair.meta.whenCreated) {\n      pair.setMeta({\n        whenCreated: Date.now()\n      });\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}