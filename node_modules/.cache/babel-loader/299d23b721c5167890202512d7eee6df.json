{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, bnToU8a, u8aConcat } from '@polkadot/util';\nimport { secp256k1Hasher } from \"./hasher.js\";\nimport { EXPAND_OPT, secp256k1 } from \"./secp256k1.js\";\n/**\n * @name secp256k1Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\nexport function secp256k1Sign(message, _ref) {\n  var secretKey = _ref.secretKey;\n  var hashType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'blake2';\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 32, 'Expected valid secp256k1 secretKey, 32-bytes');\n  var key = secp256k1.keyFromPrivate(secretKey);\n  var ecsig = key.sign(secp256k1Hasher(hashType, message));\n  return u8aConcat(bnToU8a(ecsig.r, EXPAND_OPT), bnToU8a(ecsig.s, EXPAND_OPT), new Uint8Array([ecsig.recoveryParam || 0]));\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/util-crypto/secp256k1/sign.js"],"names":["assert","bnToU8a","u8aConcat","secp256k1Hasher","EXPAND_OPT","secp256k1","secp256k1Sign","message","secretKey","hashType","length","key","keyFromPrivate","ecsig","sign","r","s","Uint8Array","recoveryParam"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA2C,gBAA3C;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,QAEiB;AAAA,MADtBC,SACsB,QADtBA,SACsB;AAAA,MAArBC,QAAqB,uEAAV,QAAU;AACtBT,EAAAA,MAAM,CAAC,CAACQ,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACE,MAAjE,MAA6E,EAA9E,EAAkF,8CAAlF,CAAN;AACA,MAAMC,GAAG,GAAGN,SAAS,CAACO,cAAV,CAAyBJ,SAAzB,CAAZ;AACA,MAAMK,KAAK,GAAGF,GAAG,CAACG,IAAJ,CAASX,eAAe,CAACM,QAAD,EAAWF,OAAX,CAAxB,CAAd;AACA,SAAOL,SAAS,CAACD,OAAO,CAACY,KAAK,CAACE,CAAP,EAAUX,UAAV,CAAR,EAA+BH,OAAO,CAACY,KAAK,CAACG,CAAP,EAAUZ,UAAV,CAAtC,EAA6D,IAAIa,UAAJ,CAAe,CAACJ,KAAK,CAACK,aAAN,IAAuB,CAAxB,CAAf,CAA7D,CAAhB;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, bnToU8a, u8aConcat } from '@polkadot/util';\nimport { secp256k1Hasher } from \"./hasher.js\";\nimport { EXPAND_OPT, secp256k1 } from \"./secp256k1.js\";\n/**\n * @name secp256k1Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\nexport function secp256k1Sign(message, {\n  secretKey\n}, hashType = 'blake2') {\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 32, 'Expected valid secp256k1 secretKey, 32-bytes');\n  const key = secp256k1.keyFromPrivate(secretKey);\n  const ecsig = key.sign(secp256k1Hasher(hashType, message));\n  return u8aConcat(bnToU8a(ecsig.r, EXPAND_OPT), bnToU8a(ecsig.s, EXPAND_OPT), new Uint8Array([ecsig.recoveryParam || 0]));\n}"]},"metadata":{},"sourceType":"module"}