{"ast":null,"code":"import _defineProperty from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Grid,Form,Dropdown,Input,Label}from'semantic-ui-react';import{useSubstrate}from'./substrate-lib';import{TxButton,TxGroupButton}from'./substrate-lib/components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var argIsOptional=function argIsOptional(arg){return arg.type.toString().startsWith('Option<');};function Main(props){var _useSubstrate=useSubstrate(),api=_useSubstrate.api,jsonrpc=_useSubstrate.jsonrpc;var accountPair=props.accountPair;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _useState3=useState('EXTRINSIC'),_useState4=_slicedToArray(_useState3,2),interxType=_useState4[0],setInterxType=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),palletRPCs=_useState6[0],setPalletRPCs=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),callables=_useState8[0],setCallables=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),paramFields=_useState10[0],setParamFields=_useState10[1];var initFormState={palletRpc:'',callable:'',inputParams:[]};var _useState11=useState(initFormState),_useState12=_slicedToArray(_useState11,2),formState=_useState12[0],setFormState=_useState12[1];var palletRpc=formState.palletRpc,callable=formState.callable,inputParams=formState.inputParams;var getApiType=function getApiType(api,interxType){if(interxType==='QUERY'){return api.query;}else if(interxType==='EXTRINSIC'){return api.tx;}else if(interxType==='RPC'){return api.rpc;}else{return api.consts;}};var updatePalletRPCs=function updatePalletRPCs(){if(!api){return;}var apiType=getApiType(api,interxType);var palletRPCs=Object.keys(apiType).sort().filter(function(pr){return Object.keys(apiType[pr]).length>0;}).map(function(pr){return{key:pr,value:pr,text:pr};});setPalletRPCs(palletRPCs);};var updateCallables=function updateCallables(){if(!api||palletRpc===''){return;}var callables=Object.keys(getApiType(api,interxType)[palletRpc]).sort().map(function(c){return{key:c,value:c,text:c};});setCallables(callables);};var updateParamFields=function updateParamFields(){if(!api||palletRpc===''||callable===''){setParamFields([]);return;}var paramFields=[];if(interxType==='QUERY'){var metaType=api.query[palletRpc][callable].meta.type;if(metaType.isPlain){// Do nothing as `paramFields` is already set to []\n}else if(metaType.isMap){paramFields=[{name:metaType.asMap.key.toString(),type:metaType.asMap.key.toString(),optional:false}];}else if(metaType.isDoubleMap){paramFields=[{name:metaType.asDoubleMap.key1.toString(),type:metaType.asDoubleMap.key1.toString(),optional:false},{name:metaType.asDoubleMap.key2.toString(),type:metaType.asDoubleMap.key2.toString(),optional:false}];}}else if(interxType==='EXTRINSIC'){var metaArgs=api.tx[palletRpc][callable].meta.args;if(metaArgs&&metaArgs.length>0){paramFields=metaArgs.map(function(arg){return{name:arg.name.toString(),type:arg.type.toString(),optional:argIsOptional(arg)};});}}else if(interxType==='RPC'){var metaParam=[];if(jsonrpc[palletRpc]&&jsonrpc[palletRpc][callable]){metaParam=jsonrpc[palletRpc][callable].params;}if(metaParam.length>0){paramFields=metaParam.map(function(arg){return{name:arg.name,type:arg.type,optional:arg.isOptional||false};});}}else if(interxType==='CONSTANT'){paramFields=[];}setParamFields(paramFields);};useEffect(updatePalletRPCs,[api,interxType]);useEffect(updateCallables,[api,interxType,palletRpc]);useEffect(updateParamFields,[api,interxType,palletRpc,callable,jsonrpc]);var onPalletCallableParamChange=function onPalletCallableParamChange(_,data){setFormState(function(formState){var res;var state=data.state,value=data.value;if(typeof state==='object'){// Input parameter updated\nvar ind=state.ind,type=state.paramField.type;var _inputParams=_toConsumableArray(formState.inputParams);_inputParams[ind]={type:type,value:value};res=_objectSpread(_objectSpread({},formState),{},{inputParams:_inputParams});}else if(state==='palletRpc'){var _objectSpread2;res=_objectSpread(_objectSpread({},formState),{},(_objectSpread2={},_defineProperty(_objectSpread2,state,value),_defineProperty(_objectSpread2,\"callable\",''),_defineProperty(_objectSpread2,\"inputParams\",[]),_objectSpread2));}else if(state==='callable'){var _objectSpread3;res=_objectSpread(_objectSpread({},formState),{},(_objectSpread3={},_defineProperty(_objectSpread3,state,value),_defineProperty(_objectSpread3,\"inputParams\",[]),_objectSpread3));}return res;});};var onInterxTypeChange=function onInterxTypeChange(ev,data){setInterxType(data.value);// clear the formState\nsetFormState(initFormState);};var getOptionalMsg=function getOptionalMsg(interxType){return interxType==='RPC'?'Optional Parameter':'Leaving this field as blank will submit a NONE value';};return/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pallet Interactor\"}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{style:{overflowX:'auto'},inline:true,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Interaction Type\"}),/*#__PURE__*/_jsx(Form.Radio,{label:\"Extrinsic\",name:\"interxType\",value:\"EXTRINSIC\",checked:interxType==='EXTRINSIC',onChange:onInterxTypeChange}),/*#__PURE__*/_jsx(Form.Radio,{label:\"Query\",name:\"interxType\",value:\"QUERY\",checked:interxType==='QUERY',onChange:onInterxTypeChange}),/*#__PURE__*/_jsx(Form.Radio,{label:\"RPC\",name:\"interxType\",value:\"RPC\",checked:interxType==='RPC',onChange:onInterxTypeChange}),/*#__PURE__*/_jsx(Form.Radio,{label:\"Constant\",name:\"interxType\",value:\"CONSTANT\",checked:interxType==='CONSTANT',onChange:onInterxTypeChange})]}),/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Dropdown,{placeholder:\"Pallets / RPC\",fluid:true,label:\"Pallet / RPC\",onChange:onPalletCallableParamChange,search:true,selection:true,state:\"palletRpc\",value:palletRpc,options:palletRPCs})}),/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Dropdown,{placeholder:\"Callables\",fluid:true,label:\"Callable\",onChange:onPalletCallableParamChange,search:true,selection:true,state:\"callable\",value:callable,options:callables})}),paramFields.map(function(paramField,ind){return/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(Input,{placeholder:paramField.type,fluid:true,type:\"text\",label:paramField.name,state:{ind:ind,paramField:paramField},value:inputParams[ind]?inputParams[ind].value:'',onChange:onPalletCallableParamChange}),paramField.optional?/*#__PURE__*/_jsx(Label,{basic:true,pointing:true,color:\"teal\",content:getOptionalMsg(interxType)}):null]},\"\".concat(paramField.name,\"-\").concat(paramField.type));}),/*#__PURE__*/_jsx(Form.Field,{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(InteractorSubmit,{accountPair:accountPair,setStatus:setStatus,attrs:{interxType:interxType,palletRpc:palletRpc,callable:callable,inputParams:inputParams,paramFields:paramFields}})}),/*#__PURE__*/_jsx(\"div\",{style:{overflowWrap:'break-word'},children:status})]})]});}function InteractorSubmit(props){var interxType=props.attrs.interxType;if(interxType==='QUERY'){return/*#__PURE__*/_jsx(TxButton,_objectSpread({label:\"Query\",type:\"QUERY\",color:\"blue\"},props));}else if(interxType==='EXTRINSIC'){return/*#__PURE__*/_jsx(TxGroupButton,_objectSpread({},props));}else if(interxType==='RPC'||interxType==='CONSTANT'){return/*#__PURE__*/_jsx(TxButton,_objectSpread({label:\"Submit\",type:interxType,color:\"blue\"},props));}}export default function Interactor(props){var _useSubstrate2=useSubstrate(),api=_useSubstrate2.api;return api.tx?/*#__PURE__*/_jsx(Main,_objectSpread({},props)):null;}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/src/Interactor.js"],"names":["React","useEffect","useState","Grid","Form","Dropdown","Input","Label","useSubstrate","TxButton","TxGroupButton","argIsOptional","arg","type","toString","startsWith","Main","props","api","jsonrpc","accountPair","status","setStatus","interxType","setInterxType","palletRPCs","setPalletRPCs","callables","setCallables","paramFields","setParamFields","initFormState","palletRpc","callable","inputParams","formState","setFormState","getApiType","query","tx","rpc","consts","updatePalletRPCs","apiType","Object","keys","sort","filter","pr","length","map","key","value","text","updateCallables","c","updateParamFields","metaType","meta","isPlain","isMap","name","asMap","optional","isDoubleMap","asDoubleMap","key1","key2","metaArgs","args","metaParam","params","isOptional","onPalletCallableParamChange","_","data","res","state","ind","paramField","onInterxTypeChange","ev","getOptionalMsg","overflowX","textAlign","overflowWrap","InteractorSubmit","attrs","Interactor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Grid, Form, Dropdown, Input, Label } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\nimport { TxButton, TxGroupButton } from './substrate-lib/components'\n\nconst argIsOptional = (arg) =>\n  arg.type.toString().startsWith('Option<')\n\nfunction Main (props) {\n  const { api, jsonrpc } = useSubstrate()\n  const { accountPair } = props\n  const [status, setStatus] = useState(null)\n\n  const [interxType, setInterxType] = useState('EXTRINSIC')\n  const [palletRPCs, setPalletRPCs] = useState([])\n  const [callables, setCallables] = useState([])\n  const [paramFields, setParamFields] = useState([])\n\n  const initFormState = {\n    palletRpc: '',\n    callable: '',\n    inputParams: []\n  }\n\n  const [formState, setFormState] = useState(initFormState)\n  const { palletRpc, callable, inputParams } = formState\n\n  const getApiType = (api, interxType) => {\n    if (interxType === 'QUERY') {\n      return api.query\n    } else if (interxType === 'EXTRINSIC') {\n      return api.tx\n    } else if (interxType === 'RPC') {\n      return api.rpc\n    } else {\n      return api.consts\n    }\n  }\n\n  const updatePalletRPCs = () => {\n    if (!api) { return }\n    const apiType = getApiType(api, interxType)\n    const palletRPCs = Object.keys(apiType).sort()\n      .filter(pr => Object.keys(apiType[pr]).length > 0)\n      .map(pr => ({ key: pr, value: pr, text: pr }))\n    setPalletRPCs(palletRPCs)\n  }\n\n  const updateCallables = () => {\n    if (!api || palletRpc === '') { return }\n    const callables = Object.keys(getApiType(api, interxType)[palletRpc]).sort()\n      .map(c => ({ key: c, value: c, text: c }))\n    setCallables(callables)\n  }\n\n  const updateParamFields = () => {\n    if (!api || palletRpc === '' || callable === '') {\n      setParamFields([])\n      return\n    }\n\n    let paramFields = []\n\n    if (interxType === 'QUERY') {\n      const metaType = api.query[palletRpc][callable].meta.type\n      if (metaType.isPlain) {\n        // Do nothing as `paramFields` is already set to []\n      } else if (metaType.isMap) {\n        paramFields = [{\n          name: metaType.asMap.key.toString(),\n          type: metaType.asMap.key.toString(),\n          optional: false\n        }]\n      } else if (metaType.isDoubleMap) {\n        paramFields = [{\n          name: metaType.asDoubleMap.key1.toString(),\n          type: metaType.asDoubleMap.key1.toString(),\n          optional: false\n        }, {\n          name: metaType.asDoubleMap.key2.toString(),\n          type: metaType.asDoubleMap.key2.toString(),\n          optional: false\n        }]\n      }\n    } else if (interxType === 'EXTRINSIC') {\n      const metaArgs = api.tx[palletRpc][callable].meta.args\n\n      if (metaArgs && metaArgs.length > 0) {\n        paramFields = metaArgs.map(arg => ({\n          name: arg.name.toString(),\n          type: arg.type.toString(),\n          optional: argIsOptional(arg)\n        }))\n      }\n    } else if (interxType === 'RPC') {\n      let metaParam = []\n\n      if (jsonrpc[palletRpc] && jsonrpc[palletRpc][callable]) {\n        metaParam = jsonrpc[palletRpc][callable].params\n      }\n\n      if (metaParam.length > 0) {\n        paramFields = metaParam.map(arg => ({\n          name: arg.name,\n          type: arg.type,\n          optional: arg.isOptional || false\n        }))\n      }\n    } else if (interxType === 'CONSTANT') {\n      paramFields = []\n    }\n\n    setParamFields(paramFields)\n  }\n\n  useEffect(updatePalletRPCs, [api, interxType])\n  useEffect(updateCallables, [api, interxType, palletRpc])\n  useEffect(updateParamFields, [api, interxType, palletRpc, callable, jsonrpc])\n\n  const onPalletCallableParamChange = (_, data) => {\n    setFormState(formState => {\n      let res\n      const { state, value } = data\n      if (typeof state === 'object') {\n        // Input parameter updated\n        const { ind, paramField: { type } } = state\n        const inputParams = [...formState.inputParams]\n        inputParams[ind] = { type, value }\n        res = { ...formState, inputParams }\n      } else if (state === 'palletRpc') {\n        res = { ...formState, [state]: value, callable: '', inputParams: [] }\n      } else if (state === 'callable') {\n        res = { ...formState, [state]: value, inputParams: [] }\n      }\n      return res\n    })\n  }\n\n  const onInterxTypeChange = (ev, data) => {\n    setInterxType(data.value)\n    // clear the formState\n    setFormState(initFormState)\n  }\n\n  const getOptionalMsg = (interxType) =>\n    interxType === 'RPC'\n      ? 'Optional Parameter'\n      : 'Leaving this field as blank will submit a NONE value'\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Pallet Interactor</h1>\n      <Form>\n        <Form.Group style={{ overflowX: 'auto' }} inline>\n          <label>Interaction Type</label>\n          <Form.Radio\n            label='Extrinsic'\n            name='interxType'\n            value='EXTRINSIC'\n            checked={interxType === 'EXTRINSIC'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label='Query'\n            name='interxType'\n            value='QUERY'\n            checked={interxType === 'QUERY'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label='RPC'\n            name='interxType'\n            value='RPC'\n            checked={interxType === 'RPC'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label='Constant'\n            name='interxType'\n            value='CONSTANT'\n            checked={interxType === 'CONSTANT'}\n            onChange={onInterxTypeChange}\n          />\n        </Form.Group>\n        <Form.Field>\n          <Dropdown\n            placeholder='Pallets / RPC'\n            fluid\n            label='Pallet / RPC'\n            onChange={onPalletCallableParamChange}\n            search\n            selection\n            state='palletRpc'\n            value={palletRpc}\n            options={palletRPCs}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            placeholder='Callables'\n            fluid\n            label='Callable'\n            onChange={onPalletCallableParamChange}\n            search\n            selection\n            state='callable'\n            value={callable}\n            options={callables}\n          />\n        </Form.Field>\n        {paramFields.map((paramField, ind) =>\n          <Form.Field key={`${paramField.name}-${paramField.type}`}>\n            <Input\n              placeholder={paramField.type}\n              fluid\n              type='text'\n              label={paramField.name}\n              state={{ ind, paramField }}\n              value={ inputParams[ind] ? inputParams[ind].value : '' }\n              onChange={onPalletCallableParamChange}\n            />\n            { paramField.optional\n              ? <Label\n                basic\n                pointing\n                color='teal'\n                content = { getOptionalMsg(interxType) }\n              />\n              : null\n            }\n          </Form.Field>\n        )}\n        <Form.Field style={{ textAlign: 'center' }}>\n          <InteractorSubmit\n            accountPair={accountPair}\n            setStatus={setStatus}\n            attrs={{ interxType, palletRpc, callable, inputParams, paramFields }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  )\n}\n\nfunction InteractorSubmit (props) {\n  const { attrs: { interxType } } = props\n  if (interxType === 'QUERY') {\n    return <TxButton\n      label = 'Query'\n      type = 'QUERY'\n      color = 'blue'\n      {...props}\n    />\n  } else if (interxType === 'EXTRINSIC') {\n    return <TxGroupButton {...props} />\n  } else if (interxType === 'RPC' || interxType === 'CONSTANT') {\n    return <TxButton\n      label = 'Submit'\n      type = {interxType}\n      color = 'blue'\n      {...props}\n    />\n  }\n}\n\nexport default function Interactor (props) {\n  const { api } = useSubstrate()\n  return api.tx ? <Main {...props} /> : null\n}\n"]},"metadata":{},"sourceType":"module"}