{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n\nfunction extractsIds(stashId, queuedKeys, nextKeys) {\n  var sessionIds = (queuedKeys.find(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        currentId = _ref2[0];\n\n    return currentId.eq(stashId);\n  }) || [undefined, []])[1];\n  var nextSessionIds = nextKeys.unwrapOr([]);\n  return {\n    nextSessionIds: nextSessionIds,\n    sessionIds: sessionIds\n  };\n}\n\nexport function keys(instanceId, api) {\n  return memo(instanceId, function (stashId) {\n    return api.derive.staking.keysMulti([stashId]).pipe(map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          first = _ref4[0];\n\n      return first;\n    }));\n  });\n}\nexport function keysMulti(instanceId, api) {\n  return memo(instanceId, function (stashIds) {\n    return stashIds.length ? api.query.session.queuedKeys().pipe(switchMap(function (queuedKeys) {\n      var _api$consts$session;\n\n      return combineLatest([of(queuedKeys), (_api$consts$session = api.consts.session) !== null && _api$consts$session !== void 0 && _api$consts$session.dedupKeyPrefix ? api.query.session.nextKeys.multi(stashIds.map(function (stashId) {\n        return [api.consts.session.dedupKeyPrefix, stashId];\n      })) : api.query.session.nextKeys.multi(stashIds)]);\n    }), map(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          queuedKeys = _ref6[0],\n          nextKeys = _ref6[1];\n\n      return stashIds.map(function (stashId, index) {\n        return extractsIds(stashId, queuedKeys, nextKeys[index]);\n      });\n    })) : of([]);\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/staking/keys.js"],"names":["combineLatest","map","of","switchMap","memo","extractsIds","stashId","queuedKeys","nextKeys","sessionIds","find","currentId","eq","undefined","nextSessionIds","unwrapOr","keys","instanceId","api","derive","staking","keysMulti","pipe","first","stashIds","length","query","session","_api$consts$session","consts","dedupKeyPrefix","multi","index"],"mappings":";AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,EAA6BC,EAA7B,EAAiCC,SAAjC,QAAkD,MAAlD;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,UAA9B,EAA0CC,QAA1C,EAAoD;AAClD,MAAMC,UAAU,GAAG,CAACF,UAAU,CAACG,IAAX,CAAgB;AAAA;AAAA,QAAEC,SAAF;;AAAA,WAAiBA,SAAS,CAACC,EAAV,CAAaN,OAAb,CAAjB;AAAA,GAAhB,KAA2D,CAACO,SAAD,EAAY,EAAZ,CAA5D,EAA6E,CAA7E,CAAnB;AACA,MAAMC,cAAc,GAAGN,QAAQ,CAACO,QAAT,CAAkB,EAAlB,CAAvB;AACA,SAAO;AACLD,IAAAA,cAAc,EAAdA,cADK;AAELL,IAAAA,UAAU,EAAVA;AAFK,GAAP;AAID;;AAED,OAAO,SAASO,IAAT,CAAcC,UAAd,EAA0BC,GAA1B,EAA+B;AACpC,SAAOd,IAAI,CAACa,UAAD,EAAa,UAAAX,OAAO;AAAA,WAAIY,GAAG,CAACC,MAAJ,CAAWC,OAAX,CAAmBC,SAAnB,CAA6B,CAACf,OAAD,CAA7B,EAAwCgB,IAAxC,CAA6CrB,GAAG,CAAC;AAAA;AAAA,UAAEsB,KAAF;;AAAA,aAAaA,KAAb;AAAA,KAAD,CAAhD,CAAJ;AAAA,GAApB,CAAX;AACD;AACD,OAAO,SAASF,SAAT,CAAmBJ,UAAnB,EAA+BC,GAA/B,EAAoC;AACzC,SAAOd,IAAI,CAACa,UAAD,EAAa,UAAAO,QAAQ;AAAA,WAAIA,QAAQ,CAACC,MAAT,GAAkBP,GAAG,CAACQ,KAAJ,CAAUC,OAAV,CAAkBpB,UAAlB,GAA+Be,IAA/B,CAAoCnB,SAAS,CAAC,UAAAI,UAAU,EAAI;AAChH,UAAIqB,mBAAJ;;AAEA,aAAO5B,aAAa,CAAC,CAACE,EAAE,CAACK,UAAD,CAAH,EAAiB,CAACqB,mBAAmB,GAAGV,GAAG,CAACW,MAAJ,CAAWF,OAAlC,MAA+C,IAA/C,IAAuDC,mBAAmB,KAAK,KAAK,CAApF,IAAyFA,mBAAmB,CAACE,cAA7G,GAA8HZ,GAAG,CAACQ,KAAJ,CAAUC,OAAV,CAAkBnB,QAAlB,CAA2BuB,KAA3B,CAAiCP,QAAQ,CAACvB,GAAT,CAAa,UAAAK,OAAO;AAAA,eAAI,CAACY,GAAG,CAACW,MAAJ,CAAWF,OAAX,CAAmBG,cAApB,EAAoCxB,OAApC,CAAJ;AAAA,OAApB,CAAjC,CAA9H,GAAwOY,GAAG,CAACQ,KAAJ,CAAUC,OAAV,CAAkBnB,QAAlB,CAA2BuB,KAA3B,CAAiCP,QAAjC,CAAzP,CAAD,CAApB;AACD,KAJkG,CAA7C,EAIlDvB,GAAG,CAAC;AAAA;AAAA,UAAEM,UAAF;AAAA,UAAcC,QAAd;;AAAA,aAA4BgB,QAAQ,CAACvB,GAAT,CAAa,UAACK,OAAD,EAAU0B,KAAV;AAAA,eAAoB3B,WAAW,CAACC,OAAD,EAAUC,UAAV,EAAsBC,QAAQ,CAACwB,KAAD,CAA9B,CAA/B;AAAA,OAAb,CAA5B;AAAA,KAAD,CAJ+C,CAAlB,GAIwF9B,EAAE,CAAC,EAAD,CAJ9F;AAAA,GAArB,CAAX;AAKD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n\nfunction extractsIds(stashId, queuedKeys, nextKeys) {\n  const sessionIds = (queuedKeys.find(([currentId]) => currentId.eq(stashId)) || [undefined, []])[1];\n  const nextSessionIds = nextKeys.unwrapOr([]);\n  return {\n    nextSessionIds,\n    sessionIds\n  };\n}\n\nexport function keys(instanceId, api) {\n  return memo(instanceId, stashId => api.derive.staking.keysMulti([stashId]).pipe(map(([first]) => first)));\n}\nexport function keysMulti(instanceId, api) {\n  return memo(instanceId, stashIds => stashIds.length ? api.query.session.queuedKeys().pipe(switchMap(queuedKeys => {\n    var _api$consts$session;\n\n    return combineLatest([of(queuedKeys), (_api$consts$session = api.consts.session) !== null && _api$consts$session !== void 0 && _api$consts$session.dedupKeyPrefix ? api.query.session.nextKeys.multi(stashIds.map(stashId => [api.consts.session.dedupKeyPrefix, stashId])) : api.query.session.nextKeys.multi(stashIds)]);\n  }), map(([queuedKeys, nextKeys]) => stashIds.map((stashId, index) => extractsIds(stashId, queuedKeys, nextKeys[index])))) : of([]));\n}"]},"metadata":{},"sourceType":"module"}