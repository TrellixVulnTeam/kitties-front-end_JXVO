{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNull } from '@polkadot/util';\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\n\nexport var Null = /*#__PURE__*/function () {\n  function Null(registry) {\n    _classCallCheck(this, Null);\n\n    this.registry = void 0;\n    this.createdAtHash = void 0;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  _createClass(Null, [{\n    key: \"encodedLength\",\n    get: function get() {\n      return 0;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n\n  }, {\n    key: \"hash\",\n    get: function get() {\n      throw new Error('.hash is not implemented on Null');\n    }\n    /**\n     * @description Checks if the value is an empty value (always true)\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return other instanceof Null || isNull(other);\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return '0x';\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman() {\n      return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return null;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return 'Null';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return '';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      return new Uint8Array();\n    }\n  }]);\n\n  return Null;\n}();","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/primitive/Null.js"],"names":["isNull","Null","registry","createdAtHash","Error","other","toJSON","isBare","Uint8Array"],"mappings":";;AAAA;AACA;AACA,SAASA,MAAT,QAAuB,gBAAvB;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAaC,IAAb;AACE,gBAAYC,QAAZ,EAAsB;AAAA;;AACpB,SAAKA,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAK,CAA1B;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACD;AACD;AACF;AACA;;;AARA;AAAA;AAAA,SAWE,eAAoB;AAClB,aAAO,CAAP;AACD;AACD;AACF;AACA;;AAhBA;AAAA;AAAA,SAmBE,eAAW;AACT,YAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD;AACF;AACA;;AAxBA;AAAA;AAAA,SA2BE,eAAc;AACZ,aAAO,IAAP;AACD;AACD;AACF;AACA;;AAhCA;AAAA;AAAA,WAmCE,YAAGC,KAAH,EAAU;AACR,aAAOA,KAAK,YAAYJ,IAAjB,IAAyBD,MAAM,CAACK,KAAD,CAAtC;AACD;AACD;AACF;AACA;;AAxCA;AAAA;AAAA,WA2CE,iBAAQ;AACN,aAAO,IAAP;AACD;AACD;AACF;AACA;;AAhDA;AAAA;AAAA,WAmDE,mBAAU;AACR,aAAO,KAAKC,MAAL,EAAP;AACD;AACD;AACF;AACA;;AAxDA;AAAA;AAAA,WA2DE,kBAAS;AACP,aAAO,IAAP;AACD;AACD;AACF;AACA;;AAhEA;AAAA;AAAA,WAmEE,qBAAY;AACV,aAAO,MAAP;AACD;AACD;AACF;AACA;;AAxEA;AAAA;AAAA,WA2EE,oBAAW;AACT,aAAO,EAAP;AACD;AACD;AACF;AACA;AACA;AACE;;AAlFF;AAAA;AAAA,WAqFE,eAAMC,MAAN,EAAc;AACZ,aAAO,IAAIC,UAAJ,EAAP;AACD;AAvFH;;AAAA;AAAA","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNull } from '@polkadot/util';\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\n\nexport class Null {\n  constructor(registry) {\n    this.registry = void 0;\n    this.createdAtHash = void 0;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 0;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw new Error('.hash is not implemented on Null');\n  }\n  /**\n   * @description Checks if the value is an empty value (always true)\n   */\n\n\n  get isEmpty() {\n    return true;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return other instanceof Null || isNull(other);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return '0x';\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return null;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Null';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return '';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array();\n  }\n\n}"]},"metadata":{},"sourceType":"module"}