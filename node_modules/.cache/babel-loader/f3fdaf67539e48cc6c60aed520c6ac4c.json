{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Tuple } from \"./Tuple.js\";\n\nvar _rangeName = /*#__PURE__*/_classPrivateFieldLooseKey(\"rangeName\");\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\n\n\nexport var Range = /*#__PURE__*/function (_Tuple) {\n  _inherits(Range, _Tuple);\n\n  var _super = _createSuper(Range);\n\n  function Range(registry, Type, value) {\n    var _this;\n\n    var rangeName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Range';\n\n    _classCallCheck(this, Range);\n\n    _this = _super.call(this, registry, {\n      end: Type,\n      start: Type\n    }, value);\n    Object.defineProperty(_assertThisInitialized(_this), _rangeName, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(_assertThisInitialized(_this), _rangeName)[_rangeName] = rangeName;\n    return _this;\n  }\n\n  _createClass(Range, [{\n    key: \"start\",\n    get:\n    /**\n     * @description Returns the starting range value\n     */\n    function get() {\n      return this[0];\n    }\n    /**\n     * @description Returns the ending range value\n     */\n\n  }, {\n    key: \"end\",\n    get: function get() {\n      return this[1];\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return \"\".concat(_classPrivateFieldLooseBase(this, _rangeName)[_rangeName], \"<\").concat(this.start.toRawType(), \">\");\n    }\n  }], [{\n    key: \"with\",\n    value: function _with(Types) {\n      return /*#__PURE__*/function (_Range) {\n        _inherits(_class, _Range);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super2.call(this, registry, Types, value);\n        }\n\n        return _class;\n      }(Range);\n    }\n  }]);\n\n  return Range;\n}(Tuple);\nexport var RangeInclusive = /*#__PURE__*/function (_Range2) {\n  _inherits(RangeInclusive, _Range2);\n\n  var _super3 = _createSuper(RangeInclusive);\n\n  function RangeInclusive(registry, type, value) {\n    _classCallCheck(this, RangeInclusive);\n\n    return _super3.call(this, registry, type, value, 'RangeInclusive');\n  }\n\n  _createClass(RangeInclusive, null, [{\n    key: \"with\",\n    value: function _with(Types) {\n      return /*#__PURE__*/function (_RangeInclusive) {\n        _inherits(_class2, _RangeInclusive);\n\n        var _super4 = _createSuper(_class2);\n\n        function _class2(registry, value) {\n          _classCallCheck(this, _class2);\n\n          return _super4.call(this, registry, Types, value);\n        }\n\n        return _class2;\n      }(RangeInclusive);\n    }\n  }]);\n\n  return RangeInclusive;\n}(Range);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/codec/Range.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","Tuple","_rangeName","Range","registry","Type","value","rangeName","end","start","Object","defineProperty","writable","toRawType","Types","RangeInclusive","type"],"mappings":";;;;;AAAA,OAAOA,2BAAP,MAAwC,uDAAxC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC,C,CACA;AACA;;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,IAAIC,UAAU,GAAG,aAAaF,0BAA0B,CAAC,WAAD,CAAxD;AAEA;AACA;AACA;AACA;AACA;;;AACA,WAAaG,KAAb;AAAA;;AAAA;;AACE,iBAAYC,QAAZ,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAwD;AAAA;;AAAA,QAArBC,SAAqB,uEAAT,OAAS;;AAAA;;AACtD,8BAAMH,QAAN,EAAgB;AACdI,MAAAA,GAAG,EAAEH,IADS;AAEdI,MAAAA,KAAK,EAAEJ;AAFO,KAAhB,EAGGC,KAHH;AAIAI,IAAAA,MAAM,CAACC,cAAP,gCAA4BT,UAA5B,EAAwC;AACtCU,MAAAA,QAAQ,EAAE,IAD4B;AAEtCN,MAAAA,KAAK,EAAE,KAAK;AAF0B,KAAxC;AAIAP,IAAAA,2BAA2B,gCAAOG,UAAP,CAA3B,CAA8CA,UAA9C,IAA4DK,SAA5D;AATsD;AAUvD;;AAXH;AAAA;AAAA;AAqBE;AACF;AACA;AAGE,mBAAY;AACV,aAAO,KAAK,CAAL,CAAP;AACD;AACD;AACF;AACA;;AA/BA;AAAA;AAAA,SAkCE,eAAU;AACR,aAAO,KAAK,CAAL,CAAP;AACD;AACD;AACF;AACA;;AAvCA;AAAA;AAAA,WA0CE,qBAAY;AACV,uBAAUR,2BAA2B,CAAC,IAAD,EAAOG,UAAP,CAA3B,CAA8CA,UAA9C,CAAV,cAAuE,KAAKO,KAAL,CAAWI,SAAX,EAAvE;AACD;AA5CH;AAAA;AAAA,WAaE,eAAYC,KAAZ,EAAmB;AACjB;AAAA;;AAAA;;AACE,wBAAYV,QAAZ,EAAsBE,KAAtB,EAA6B;AAAA;;AAAA,oCACrBF,QADqB,EACXU,KADW,EACJR,KADI;AAE5B;;AAHH;AAAA,QAAqBH,KAArB;AAMD;AApBH;;AAAA;AAAA,EAA2BF,KAA3B;AA+CA,WAAac,cAAb;AAAA;;AAAA;;AACE,0BAAYX,QAAZ,EAAsBY,IAAtB,EAA4BV,KAA5B,EAAmC;AAAA;;AAAA,8BAC3BF,QAD2B,EACjBY,IADiB,EACXV,KADW,EACJ,gBADI;AAElC;;AAHH;AAAA;AAAA,WAKE,eAAYQ,KAAZ,EAAmB;AACjB;AAAA;;AAAA;;AACE,yBAAYV,QAAZ,EAAsBE,KAAtB,EAA6B;AAAA;;AAAA,oCACrBF,QADqB,EACXU,KADW,EACJR,KADI;AAE5B;;AAHH;AAAA,QAAqBS,cAArB;AAMD;AAZH;;AAAA;AAAA,EAAoCZ,KAApC","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Tuple } from \"./Tuple.js\";\n\nvar _rangeName = /*#__PURE__*/_classPrivateFieldLooseKey(\"rangeName\");\n\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\nexport class Range extends Tuple {\n  constructor(registry, Type, value, rangeName = 'Range') {\n    super(registry, {\n      end: Type,\n      start: Type\n    }, value);\n    Object.defineProperty(this, _rangeName, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _rangeName)[_rangeName] = rangeName;\n  }\n\n  static with(Types) {\n    return class extends Range {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the starting range value\n   */\n\n\n  get start() {\n    return this[0];\n  }\n  /**\n   * @description Returns the ending range value\n   */\n\n\n  get end() {\n    return this[1];\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${_classPrivateFieldLooseBase(this, _rangeName)[_rangeName]}<${this.start.toRawType()}>`;\n  }\n\n}\nexport class RangeInclusive extends Range {\n  constructor(registry, type, value) {\n    super(registry, type, value, 'RangeInclusive');\n  }\n\n  static with(Types) {\n    return class extends RangeInclusive {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"module"}