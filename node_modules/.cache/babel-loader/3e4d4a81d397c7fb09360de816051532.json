{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, bnToU8a, isNumber, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nimport { U8aFixed } from \"../codec/U8aFixed.js\";\nexport var CID_AURA = stringToU8a('aura');\nexport var CID_BABE = stringToU8a('BABE');\nexport var CID_GRPA = stringToU8a('FRNK');\nexport var CID_POW = stringToU8a('pow_');\n/**\n * @name GenericConsensusEngineId\n * @description\n * A 4-byte identifier identifying the engine\n */\n\nexport var GenericConsensusEngineId = /*#__PURE__*/function (_U8aFixed) {\n  _inherits(GenericConsensusEngineId, _U8aFixed);\n\n  var _super = _createSuper(GenericConsensusEngineId);\n\n  function GenericConsensusEngineId(registry, value) {\n    _classCallCheck(this, GenericConsensusEngineId);\n\n    return _super.call(this, registry, isNumber(value) ? bnToU8a(value, {\n      isLe: false\n    }) : value, 32);\n  }\n  /**\n   * @description `true` if the engine matches aura\n   */\n\n\n  _createClass(GenericConsensusEngineId, [{\n    key: \"isAura\",\n    get: function get() {\n      return this.eq(CID_AURA);\n    }\n    /**\n     * @description `true` is the engine matches babe\n     */\n\n  }, {\n    key: \"isBabe\",\n    get: function get() {\n      return this.eq(CID_BABE);\n    }\n    /**\n     * @description `true` is the engine matches grandpa\n     */\n\n  }, {\n    key: \"isGrandpa\",\n    get: function get() {\n      return this.eq(CID_GRPA);\n    }\n    /**\n     * @description `true` is the engine matches pow\n     */\n\n  }, {\n    key: \"isPow\",\n    get: function get() {\n      return this.eq(CID_POW);\n    }\n  }, {\n    key: \"_getAuraAuthor\",\n    value: function _getAuraAuthor(bytes, sessionValidators) {\n      return sessionValidators[this.registry.createType('RawAuraPreDigest', bytes.toU8a(true)).slotNumber.mod(new BN(sessionValidators.length)).toNumber()];\n    }\n  }, {\n    key: \"_getBabeAuthor\",\n    value: function _getBabeAuthor(bytes, sessionValidators) {\n      var digest = this.registry.createType('RawBabePreDigestCompat', bytes.toU8a(true));\n      return sessionValidators[digest.value.toNumber()];\n    }\n  }, {\n    key: \"_getBytesAsAuthor\",\n    value: function _getBytesAsAuthor(bytes) {\n      return this.registry.createType('AccountId', bytes);\n    }\n    /**\n     * @description From the input bytes, decode into an author\n     */\n\n  }, {\n    key: \"extractAuthor\",\n    value: function extractAuthor(bytes, sessionValidators) {\n      if (sessionValidators !== null && sessionValidators !== void 0 && sessionValidators.length) {\n        if (this.isAura) {\n          return this._getAuraAuthor(bytes, sessionValidators);\n        } else if (this.isBabe) {\n          return this._getBabeAuthor(bytes, sessionValidators);\n        }\n      } // For pow & Moonbeam, the bytes are the actual author\n\n\n      if (this.isPow || bytes.length === 20) {\n        return this._getBytesAsAuthor(bytes);\n      }\n\n      return undefined;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman() {\n      return this.toString();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return 'ConsensusEngineId';\n    }\n    /**\n     * @description Override the default toString to return a 4-byte string\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.isAscii ? u8aToString(this) : u8aToHex(this);\n    }\n  }]);\n\n  return GenericConsensusEngineId;\n}(U8aFixed);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/generic/ConsensusEngineId.js"],"names":["BN","bnToU8a","isNumber","stringToU8a","u8aToHex","u8aToString","U8aFixed","CID_AURA","CID_BABE","CID_GRPA","CID_POW","GenericConsensusEngineId","registry","value","isLe","eq","bytes","sessionValidators","createType","toU8a","slotNumber","mod","length","toNumber","digest","isAura","_getAuraAuthor","isBabe","_getBabeAuthor","isPow","_getBytesAsAuthor","undefined","toString","isAscii"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, bnToU8a, isNumber, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nimport { U8aFixed } from \"../codec/U8aFixed.js\";\nexport const CID_AURA = stringToU8a('aura');\nexport const CID_BABE = stringToU8a('BABE');\nexport const CID_GRPA = stringToU8a('FRNK');\nexport const CID_POW = stringToU8a('pow_');\n/**\n * @name GenericConsensusEngineId\n * @description\n * A 4-byte identifier identifying the engine\n */\n\nexport class GenericConsensusEngineId extends U8aFixed {\n  constructor(registry, value) {\n    super(registry, isNumber(value) ? bnToU8a(value, {\n      isLe: false\n    }) : value, 32);\n  }\n  /**\n   * @description `true` if the engine matches aura\n   */\n\n\n  get isAura() {\n    return this.eq(CID_AURA);\n  }\n  /**\n   * @description `true` is the engine matches babe\n   */\n\n\n  get isBabe() {\n    return this.eq(CID_BABE);\n  }\n  /**\n   * @description `true` is the engine matches grandpa\n   */\n\n\n  get isGrandpa() {\n    return this.eq(CID_GRPA);\n  }\n  /**\n   * @description `true` is the engine matches pow\n   */\n\n\n  get isPow() {\n    return this.eq(CID_POW);\n  }\n\n  _getAuraAuthor(bytes, sessionValidators) {\n    return sessionValidators[this.registry.createType('RawAuraPreDigest', bytes.toU8a(true)).slotNumber.mod(new BN(sessionValidators.length)).toNumber()];\n  }\n\n  _getBabeAuthor(bytes, sessionValidators) {\n    const digest = this.registry.createType('RawBabePreDigestCompat', bytes.toU8a(true));\n    return sessionValidators[digest.value.toNumber()];\n  }\n\n  _getBytesAsAuthor(bytes) {\n    return this.registry.createType('AccountId', bytes);\n  }\n  /**\n   * @description From the input bytes, decode into an author\n   */\n\n\n  extractAuthor(bytes, sessionValidators) {\n    if (sessionValidators !== null && sessionValidators !== void 0 && sessionValidators.length) {\n      if (this.isAura) {\n        return this._getAuraAuthor(bytes, sessionValidators);\n      } else if (this.isBabe) {\n        return this._getBabeAuthor(bytes, sessionValidators);\n      }\n    } // For pow & Moonbeam, the bytes are the actual author\n\n\n    if (this.isPow || bytes.length === 20) {\n      return this._getBytesAsAuthor(bytes);\n    }\n\n    return undefined;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'ConsensusEngineId';\n  }\n  /**\n   * @description Override the default toString to return a 4-byte string\n   */\n\n\n  toString() {\n    return this.isAscii ? u8aToString(this) : u8aToHex(this);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}