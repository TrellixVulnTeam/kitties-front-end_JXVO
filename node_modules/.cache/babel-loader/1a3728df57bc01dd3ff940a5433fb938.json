{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n/**\n * @name bestNumberLag\n * @returns A number of blocks\n * @description Calculates the lag between finalized head and best head\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.bestNumberLag((lag) => {\n *   console.log(`finalized is ${lag} blocks behind head`);\n * });\n * ```\n */\n\nexport function bestNumberLag(instanceId, api) {\n  return memo(instanceId, function () {\n    return combineLatest([api.derive.chain.bestNumber(), api.derive.chain.bestNumberFinalized()]).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          bestNumber = _ref2[0],\n          bestNumberFinalized = _ref2[1];\n\n      return api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized));\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/chain/bestNumberLag.js"],"names":["combineLatest","map","memo","bestNumberLag","instanceId","api","derive","chain","bestNumber","bestNumberFinalized","pipe","registry","createType","sub"],"mappings":";AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,QAAmC,MAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,GAAnC,EAAwC;AAC7C,SAAOH,IAAI,CAACE,UAAD,EAAa;AAAA,WAAMJ,aAAa,CAAC,CAACK,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBC,UAAjB,EAAD,EAAgCH,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBE,mBAAjB,EAAhC,CAAD,CAAb,CAAuFC,IAAvF,CAA4FT,GAAG,CAAC;AAAA;AAAA,UAAEO,UAAF;AAAA,UAAcC,mBAAd;;AAAA,aAAuCJ,GAAG,CAACM,QAAJ,CAAaC,UAAb,CAAwB,aAAxB,EAAuCJ,UAAU,CAACK,GAAX,CAAeJ,mBAAf,CAAvC,CAAvC;AAAA,KAAD,CAA/F,CAAN;AAAA,GAAb,CAAX;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n/**\n * @name bestNumberLag\n * @returns A number of blocks\n * @description Calculates the lag between finalized head and best head\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.bestNumberLag((lag) => {\n *   console.log(`finalized is ${lag} blocks behind head`);\n * });\n * ```\n */\n\nexport function bestNumberLag(instanceId, api) {\n  return memo(instanceId, () => combineLatest([api.derive.chain.bestNumber(), api.derive.chain.bestNumberFinalized()]).pipe(map(([bestNumber, bestNumberFinalized]) => api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized)))));\n}"]},"metadata":{},"sourceType":"module"}