{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n\nfunction parseResult(api, _ref) {\n  var allIds = _ref.allIds,\n      allProposals = _ref.allProposals,\n      approvalIds = _ref.approvalIds,\n      councilProposals = _ref.councilProposals,\n      proposalCount = _ref.proposalCount;\n  var approvals = [];\n  var proposals = [];\n  var councilTreasury = councilProposals.filter(function (_ref2) {\n    var proposal = _ref2.proposal;\n    return api.tx.treasury.approveProposal.is(proposal) || api.tx.treasury.rejectProposal.is(proposal);\n  });\n  allIds.forEach(function (id, index) {\n    if (allProposals[index].isSome) {\n      var council = councilTreasury.filter(function (_ref3) {\n        var proposal = _ref3.proposal;\n        return id.eq(proposal.args[0]);\n      }).sort(function (a, b) {\n        return a.proposal.method.localeCompare(b.proposal.method);\n      });\n      var isApproval = approvalIds.some(function (approvalId) {\n        return approvalId.eq(id);\n      });\n      var derived = {\n        council: council,\n        id: id,\n        proposal: allProposals[index].unwrap()\n      };\n\n      if (isApproval) {\n        approvals.push(derived);\n      } else {\n        proposals.push(derived);\n      }\n    }\n  });\n  return {\n    approvals: approvals,\n    proposalCount: proposalCount,\n    proposals: proposals\n  };\n}\n\nfunction retrieveProposals(api, proposalCount, approvalIds) {\n  var proposalIds = [];\n  var count = proposalCount.toNumber();\n\n  var _loop = function _loop(index) {\n    if (!approvalIds.some(function (id) {\n      return id.eqn(index);\n    })) {\n      proposalIds.push(api.registry.createType('ProposalIndex', index));\n    }\n  };\n\n  for (var index = 0; index < count; index++) {\n    _loop(index);\n  }\n\n  var allIds = [].concat(proposalIds, _toConsumableArray(approvalIds));\n  return combineLatest([api.query.treasury.proposals.multi(allIds), api.derive.council ? api.derive.council.proposals() : of([])]).pipe(map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        allProposals = _ref5[0],\n        councilProposals = _ref5[1];\n\n    return parseResult(api, {\n      allIds: allIds,\n      allProposals: allProposals,\n      approvalIds: approvalIds,\n      councilProposals: councilProposals,\n      proposalCount: proposalCount\n    });\n  }));\n}\n/**\n * @description Retrieve all active and approved treasury proposals, along with their info\n */\n\n\nexport function proposals(instanceId, api) {\n  return memo(instanceId, function () {\n    return api.query.treasury ? combineLatest([api.query.treasury.proposalCount(), api.query.treasury.approvals()]).pipe(switchMap(function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          proposalCount = _ref7[0],\n          approvalIds = _ref7[1];\n\n      return retrieveProposals(api, proposalCount, approvalIds);\n    })) : of({\n      approvals: [],\n      proposalCount: api.registry.createType('ProposalIndex'),\n      proposals: []\n    });\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/treasury/proposals.js"],"names":["combineLatest","map","of","switchMap","memo","parseResult","api","allIds","allProposals","approvalIds","councilProposals","proposalCount","approvals","proposals","councilTreasury","filter","proposal","tx","treasury","approveProposal","is","rejectProposal","forEach","id","index","isSome","council","eq","args","sort","a","b","method","localeCompare","isApproval","some","approvalId","derived","unwrap","push","retrieveProposals","proposalIds","count","toNumber","eqn","registry","createType","query","multi","derive","pipe","instanceId"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n\nfunction parseResult(api, {\n  allIds,\n  allProposals,\n  approvalIds,\n  councilProposals,\n  proposalCount\n}) {\n  const approvals = [];\n  const proposals = [];\n  const councilTreasury = councilProposals.filter(({\n    proposal\n  }) => api.tx.treasury.approveProposal.is(proposal) || api.tx.treasury.rejectProposal.is(proposal));\n  allIds.forEach((id, index) => {\n    if (allProposals[index].isSome) {\n      const council = councilTreasury.filter(({\n        proposal\n      }) => id.eq(proposal.args[0])).sort((a, b) => a.proposal.method.localeCompare(b.proposal.method));\n      const isApproval = approvalIds.some(approvalId => approvalId.eq(id));\n      const derived = {\n        council,\n        id,\n        proposal: allProposals[index].unwrap()\n      };\n\n      if (isApproval) {\n        approvals.push(derived);\n      } else {\n        proposals.push(derived);\n      }\n    }\n  });\n  return {\n    approvals,\n    proposalCount,\n    proposals\n  };\n}\n\nfunction retrieveProposals(api, proposalCount, approvalIds) {\n  const proposalIds = [];\n  const count = proposalCount.toNumber();\n\n  for (let index = 0; index < count; index++) {\n    if (!approvalIds.some(id => id.eqn(index))) {\n      proposalIds.push(api.registry.createType('ProposalIndex', index));\n    }\n  }\n\n  const allIds = [...proposalIds, ...approvalIds];\n  return combineLatest([api.query.treasury.proposals.multi(allIds), api.derive.council ? api.derive.council.proposals() : of([])]).pipe(map(([allProposals, councilProposals]) => parseResult(api, {\n    allIds,\n    allProposals,\n    approvalIds,\n    councilProposals,\n    proposalCount\n  })));\n}\n/**\n * @description Retrieve all active and approved treasury proposals, along with their info\n */\n\n\nexport function proposals(instanceId, api) {\n  return memo(instanceId, () => api.query.treasury ? combineLatest([api.query.treasury.proposalCount(), api.query.treasury.approvals()]).pipe(switchMap(([proposalCount, approvalIds]) => retrieveProposals(api, proposalCount, approvalIds))) : of({\n    approvals: [],\n    proposalCount: api.registry.createType('ProposalIndex'),\n    proposals: []\n  }));\n}"]},"metadata":{},"sourceType":"module"}