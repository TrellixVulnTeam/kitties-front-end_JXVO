{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isHex, u8aToString } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nvar UNDEF_HEX = {\n  toHex: function toHex() {\n    return undefined;\n  }\n};\n\nfunction dataAsString(data) {\n  return data.isRaw ? u8aToString(data.asRaw.toU8a(true)) : data.isNone ? undefined : data.toHex();\n}\n\nfunction extractOther(additional) {\n  return additional.reduce(function (other, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        _key = _ref2[0],\n        _value = _ref2[1];\n\n    var key = dataAsString(_key);\n    var value = dataAsString(_value);\n\n    if (key && value) {\n      other[key] = value;\n    }\n\n    return other;\n  }, {});\n}\n\nfunction extractIdentity(identityOfOpt, superOf) {\n  if (!(identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome)) {\n    return {\n      judgements: []\n    };\n  }\n\n  var _identityOfOpt$unwrap = identityOfOpt.unwrap(),\n      info = _identityOfOpt$unwrap.info,\n      judgements = _identityOfOpt$unwrap.judgements;\n\n  var topDisplay = dataAsString(info.display);\n  return {\n    display: superOf && dataAsString(superOf[1]) || topDisplay,\n    displayParent: superOf && topDisplay,\n    email: dataAsString(info.email),\n    image: dataAsString(info.image),\n    judgements: judgements,\n    legal: dataAsString(info.legal),\n    other: extractOther(info.additional),\n    parent: superOf && superOf[0],\n    pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),\n    riot: dataAsString(info.riot),\n    twitter: dataAsString(info.twitter),\n    web: dataAsString(info.web)\n  };\n}\n\nfunction getParent(api, identityOfOpt, superOfOpt) {\n  if (identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome) {\n    // this identity has something set\n    return of([identityOfOpt, undefined]);\n  } else if (superOfOpt !== null && superOfOpt !== void 0 && superOfOpt.isSome) {\n    var superOf = superOfOpt.unwrap(); // we have a super\n\n    return combineLatest([api.query.identity.identityOf(superOf[0]), of(superOf)]);\n  } // nothing of value returned\n\n\n  return of([undefined, undefined]);\n}\n\nfunction getBase(api, accountId) {\n  var _api$query$identity;\n\n  return accountId && (_api$query$identity = api.query.identity) !== null && _api$query$identity !== void 0 && _api$query$identity.identityOf ? api.queryMulti([[api.query.identity.identityOf, accountId], [api.query.identity.superOf, accountId]]) : of([undefined, undefined]);\n}\n/**\n * @name identity\n * @description Returns identity info for an account\n */\n\n\nexport function identity(instanceId, api) {\n  return memo(instanceId, function (accountId) {\n    return getBase(api, accountId).pipe(switchMap(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          identityOfOpt = _ref4[0],\n          superOfOpt = _ref4[1];\n\n      return getParent(api, identityOfOpt, superOfOpt);\n    }), map(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          identityOfOpt = _ref6[0],\n          superOf = _ref6[1];\n\n      return extractIdentity(identityOfOpt, superOf);\n    }));\n  });\n}\nexport function hasIdentity(instanceId, api) {\n  return memo(instanceId, function (accountId) {\n    return api.derive.accounts.hasIdentityMulti([accountId]).pipe(map(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 1),\n          first = _ref8[0];\n\n      return first;\n    }));\n  });\n}\nexport function hasIdentityMulti(instanceId, api) {\n  return memo(instanceId, function (accountIds) {\n    var _api$query$identity2;\n\n    return (_api$query$identity2 = api.query.identity) !== null && _api$query$identity2 !== void 0 && _api$query$identity2.identityOf ? combineLatest([api.query.identity.identityOf.multi(accountIds), api.query.identity.superOf.multi(accountIds)]).pipe(map(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n          identities = _ref10[0],\n          supers = _ref10[1];\n\n      return identities.map(function (identityOfOpt, index) {\n        var superOfOpt = supers[index];\n        var parentId = superOfOpt && superOfOpt.isSome ? superOfOpt.unwrap()[0].toString() : undefined;\n        var display;\n\n        if (identityOfOpt && identityOfOpt.isSome) {\n          var value = dataAsString(identityOfOpt.unwrap().info.display);\n\n          if (value && !isHex(value)) {\n            display = value;\n          }\n        }\n\n        return {\n          display: display,\n          hasIdentity: !!(display || parentId),\n          parentId: parentId\n        };\n      });\n    })) : of(accountIds.map(function () {\n      return {\n        hasIdentity: false\n      };\n    }));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/accounts/identity.js"],"names":["combineLatest","map","of","switchMap","isHex","u8aToString","memo","UNDEF_HEX","toHex","undefined","dataAsString","data","isRaw","asRaw","toU8a","isNone","extractOther","additional","reduce","other","_key","_value","key","value","extractIdentity","identityOfOpt","superOf","isSome","judgements","unwrap","info","topDisplay","display","displayParent","email","image","legal","parent","pgp","pgpFingerprint","unwrapOr","riot","twitter","web","getParent","api","superOfOpt","query","identity","identityOf","getBase","accountId","_api$query$identity","queryMulti","instanceId","pipe","hasIdentity","derive","accounts","hasIdentityMulti","first","accountIds","_api$query$identity2","multi","identities","supers","index","parentId","toString"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isHex, u8aToString } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nconst UNDEF_HEX = {\n  toHex: () => undefined\n};\n\nfunction dataAsString(data) {\n  return data.isRaw ? u8aToString(data.asRaw.toU8a(true)) : data.isNone ? undefined : data.toHex();\n}\n\nfunction extractOther(additional) {\n  return additional.reduce((other, [_key, _value]) => {\n    const key = dataAsString(_key);\n    const value = dataAsString(_value);\n\n    if (key && value) {\n      other[key] = value;\n    }\n\n    return other;\n  }, {});\n}\n\nfunction extractIdentity(identityOfOpt, superOf) {\n  if (!(identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome)) {\n    return {\n      judgements: []\n    };\n  }\n\n  const {\n    info,\n    judgements\n  } = identityOfOpt.unwrap();\n  const topDisplay = dataAsString(info.display);\n  return {\n    display: superOf && dataAsString(superOf[1]) || topDisplay,\n    displayParent: superOf && topDisplay,\n    email: dataAsString(info.email),\n    image: dataAsString(info.image),\n    judgements,\n    legal: dataAsString(info.legal),\n    other: extractOther(info.additional),\n    parent: superOf && superOf[0],\n    pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),\n    riot: dataAsString(info.riot),\n    twitter: dataAsString(info.twitter),\n    web: dataAsString(info.web)\n  };\n}\n\nfunction getParent(api, identityOfOpt, superOfOpt) {\n  if (identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome) {\n    // this identity has something set\n    return of([identityOfOpt, undefined]);\n  } else if (superOfOpt !== null && superOfOpt !== void 0 && superOfOpt.isSome) {\n    const superOf = superOfOpt.unwrap(); // we have a super\n\n    return combineLatest([api.query.identity.identityOf(superOf[0]), of(superOf)]);\n  } // nothing of value returned\n\n\n  return of([undefined, undefined]);\n}\n\nfunction getBase(api, accountId) {\n  var _api$query$identity;\n\n  return accountId && (_api$query$identity = api.query.identity) !== null && _api$query$identity !== void 0 && _api$query$identity.identityOf ? api.queryMulti([[api.query.identity.identityOf, accountId], [api.query.identity.superOf, accountId]]) : of([undefined, undefined]);\n}\n/**\n * @name identity\n * @description Returns identity info for an account\n */\n\n\nexport function identity(instanceId, api) {\n  return memo(instanceId, accountId => getBase(api, accountId).pipe(switchMap(([identityOfOpt, superOfOpt]) => getParent(api, identityOfOpt, superOfOpt)), map(([identityOfOpt, superOf]) => extractIdentity(identityOfOpt, superOf))));\n}\nexport function hasIdentity(instanceId, api) {\n  return memo(instanceId, accountId => api.derive.accounts.hasIdentityMulti([accountId]).pipe(map(([first]) => first)));\n}\nexport function hasIdentityMulti(instanceId, api) {\n  return memo(instanceId, accountIds => {\n    var _api$query$identity2;\n\n    return (_api$query$identity2 = api.query.identity) !== null && _api$query$identity2 !== void 0 && _api$query$identity2.identityOf ? combineLatest([api.query.identity.identityOf.multi(accountIds), api.query.identity.superOf.multi(accountIds)]).pipe(map(([identities, supers]) => identities.map((identityOfOpt, index) => {\n      const superOfOpt = supers[index];\n      const parentId = superOfOpt && superOfOpt.isSome ? superOfOpt.unwrap()[0].toString() : undefined;\n      let display;\n\n      if (identityOfOpt && identityOfOpt.isSome) {\n        const value = dataAsString(identityOfOpt.unwrap().info.display);\n\n        if (value && !isHex(value)) {\n          display = value;\n        }\n      }\n\n      return {\n        display,\n        hasIdentity: !!(display || parentId),\n        parentId\n      };\n    }))) : of(accountIds.map(() => ({\n      hasIdentity: false\n    })));\n  });\n}"]},"metadata":{},"sourceType":"module"}