{"ast":null,"code":"import _slicedToArray from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nimport { filterBountiesProposals } from \"./helpers/filterBountyProposals.js\";\n\nfunction parseResult(_ref) {\n  var _ref2 = _slicedToArray(_ref, 4),\n      maybeBounties = _ref2[0],\n      maybeDescriptions = _ref2[1],\n      ids = _ref2[2],\n      bountyProposals = _ref2[3];\n\n  var bounties = [];\n  maybeBounties.forEach(function (bounty, index) {\n    if (bounty.isSome) {\n      bounties.push({\n        bounty: bounty.unwrap(),\n        description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),\n        index: ids[index],\n        proposals: bountyProposals.filter(function (bountyProposal) {\n          return ids[index].eq(bountyProposal.proposal.args[0]);\n        })\n      });\n    }\n  });\n  return bounties;\n}\n\nexport function bounties(instanceId, api) {\n  var bountyBase = api.query.bounties || api.query.treasury;\n  return memo(instanceId, function () {\n    return combineLatest([bountyBase.bountyCount(), api.query.council ? api.query.council.proposalCount() : of(0)]).pipe(switchMap(function () {\n      return combineLatest([bountyBase.bounties.keys(), api.derive.council ? api.derive.council.proposals() : of([])]);\n    }), switchMap(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          keys = _ref4[0],\n          proposals = _ref4[1];\n\n      var ids = keys.map(function (_ref5) {\n        var _ref5$args = _slicedToArray(_ref5.args, 1),\n            id = _ref5$args[0];\n\n        return id;\n      });\n      return combineLatest([bountyBase.bounties.multi(ids), bountyBase.bountyDescriptions.multi(ids), of(ids), of(filterBountiesProposals(api, proposals))]);\n    }), map(parseResult));\n  });\n}","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/api-derive/bounties/bounties.js"],"names":["combineLatest","map","of","switchMap","memo","filterBountiesProposals","parseResult","maybeBounties","maybeDescriptions","ids","bountyProposals","bounties","forEach","bounty","index","isSome","push","unwrap","description","unwrapOrDefault","toUtf8","proposals","filter","bountyProposal","eq","proposal","args","instanceId","api","bountyBase","query","treasury","bountyCount","council","proposalCount","pipe","keys","derive","id","multi","bountyDescriptions"],"mappings":";AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,EAA6BC,EAA7B,EAAiCC,SAAjC,QAAkD,MAAlD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,uBAAT,QAAwC,oCAAxC;;AAEA,SAASC,WAAT,OAA+E;AAAA;AAAA,MAAzDC,aAAyD;AAAA,MAA1CC,iBAA0C;AAAA,MAAvBC,GAAuB;AAAA,MAAlBC,eAAkB;;AAC7E,MAAMC,QAAQ,GAAG,EAAjB;AACAJ,EAAAA,aAAa,CAACK,OAAd,CAAsB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACvC,QAAID,MAAM,CAACE,MAAX,EAAmB;AACjBJ,MAAAA,QAAQ,CAACK,IAAT,CAAc;AACZH,QAAAA,MAAM,EAAEA,MAAM,CAACI,MAAP,EADI;AAEZC,QAAAA,WAAW,EAAEV,iBAAiB,CAACM,KAAD,CAAjB,CAAyBK,eAAzB,GAA2CC,MAA3C,EAFD;AAGZN,QAAAA,KAAK,EAAEL,GAAG,CAACK,KAAD,CAHE;AAIZO,QAAAA,SAAS,EAAEX,eAAe,CAACY,MAAhB,CAAuB,UAAAC,cAAc;AAAA,iBAAId,GAAG,CAACK,KAAD,CAAH,CAAWU,EAAX,CAAcD,cAAc,CAACE,QAAf,CAAwBC,IAAxB,CAA6B,CAA7B,CAAd,CAAJ;AAAA,SAArC;AAJC,OAAd;AAMD;AACF,GATD;AAUA,SAAOf,QAAP;AACD;;AAED,OAAO,SAASA,QAAT,CAAkBgB,UAAlB,EAA8BC,GAA9B,EAAmC;AACxC,MAAMC,UAAU,GAAGD,GAAG,CAACE,KAAJ,CAAUnB,QAAV,IAAsBiB,GAAG,CAACE,KAAJ,CAAUC,QAAnD;AACA,SAAO3B,IAAI,CAACuB,UAAD,EAAa;AAAA,WAAM3B,aAAa,CAAC,CAAC6B,UAAU,CAACG,WAAX,EAAD,EAA2BJ,GAAG,CAACE,KAAJ,CAAUG,OAAV,GAAoBL,GAAG,CAACE,KAAJ,CAAUG,OAAV,CAAkBC,aAAlB,EAApB,GAAwDhC,EAAE,CAAC,CAAD,CAArF,CAAD,CAAb,CAAyGiC,IAAzG,CAA8GhC,SAAS,CAAC;AAAA,aAAMH,aAAa,CAAC,CAAC6B,UAAU,CAAClB,QAAX,CAAoByB,IAApB,EAAD,EAA6BR,GAAG,CAACS,MAAJ,CAAWJ,OAAX,GAAqBL,GAAG,CAACS,MAAJ,CAAWJ,OAAX,CAAmBZ,SAAnB,EAArB,GAAsDnB,EAAE,CAAC,EAAD,CAArF,CAAD,CAAnB;AAAA,KAAD,CAAvH,EAA0OC,SAAS,CAAC,iBAAuB;AAAA;AAAA,UAArBiC,IAAqB;AAAA,UAAff,SAAe;;AACvS,UAAMZ,GAAG,GAAG2B,IAAI,CAACnC,GAAL,CAAS;AAAA,8CACnByB,IADmB;AAAA,YACZY,EADY;;AAAA,eAEfA,EAFe;AAAA,OAAT,CAAZ;AAGA,aAAOtC,aAAa,CAAC,CAAC6B,UAAU,CAAClB,QAAX,CAAoB4B,KAApB,CAA0B9B,GAA1B,CAAD,EAAiCoB,UAAU,CAACW,kBAAX,CAA8BD,KAA9B,CAAoC9B,GAApC,CAAjC,EAA2EP,EAAE,CAACO,GAAD,CAA7E,EAAoFP,EAAE,CAACG,uBAAuB,CAACuB,GAAD,EAAMP,SAAN,CAAxB,CAAtF,CAAD,CAApB;AACD,KALgR,CAAnP,EAK1BpB,GAAG,CAACK,WAAD,CALuB,CAAN;AAAA,GAAb,CAAX;AAMD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nimport { filterBountiesProposals } from \"./helpers/filterBountyProposals.js\";\n\nfunction parseResult([maybeBounties, maybeDescriptions, ids, bountyProposals]) {\n  const bounties = [];\n  maybeBounties.forEach((bounty, index) => {\n    if (bounty.isSome) {\n      bounties.push({\n        bounty: bounty.unwrap(),\n        description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),\n        index: ids[index],\n        proposals: bountyProposals.filter(bountyProposal => ids[index].eq(bountyProposal.proposal.args[0]))\n      });\n    }\n  });\n  return bounties;\n}\n\nexport function bounties(instanceId, api) {\n  const bountyBase = api.query.bounties || api.query.treasury;\n  return memo(instanceId, () => combineLatest([bountyBase.bountyCount(), api.query.council ? api.query.council.proposalCount() : of(0)]).pipe(switchMap(() => combineLatest([bountyBase.bounties.keys(), api.derive.council ? api.derive.council.proposals() : of([])])), switchMap(([keys, proposals]) => {\n    const ids = keys.map(({\n      args: [id]\n    }) => id);\n    return combineLatest([bountyBase.bounties.multi(ids), bountyBase.bountyDescriptions.multi(ids), of(ids), of(filterBountiesProposals(api, proposals))]);\n  }), map(parseResult)));\n}"]},"metadata":{},"sourceType":"module"}