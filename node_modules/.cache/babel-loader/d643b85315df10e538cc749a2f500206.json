{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BehaviorSubject } from 'rxjs';\nimport { assert } from '@polkadot/util';\nimport { obervableAll } from \"../observable/index.js\";\nvar hasCalledInitOptions = false;\n\nvar sortByName = function sortByName(a, b) {\n  var valueA = a.option.name;\n  var valueB = b.option.name;\n  return valueA.localeCompare(valueB);\n};\n\nvar sortByCreated = function sortByCreated(a, b) {\n  var valueA = a.json.meta.whenCreated || 0;\n  var valueB = b.json.meta.whenCreated || 0;\n\n  if (valueA < valueB) {\n    return 1;\n  }\n\n  if (valueA > valueB) {\n    return -1;\n  }\n\n  return 0;\n};\n\nexport var KeyringOption = /*#__PURE__*/function () {\n  function KeyringOption() {\n    _classCallCheck(this, KeyringOption);\n\n    this.optionsSubject = new BehaviorSubject(this.emptyOptions());\n  }\n\n  _createClass(KeyringOption, [{\n    key: \"createOptionHeader\",\n    value: function createOptionHeader(name) {\n      return {\n        key: \"header-\".concat(name.toLowerCase()),\n        name: name,\n        value: null\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function init(keyring) {\n      var _this = this;\n\n      assert(!hasCalledInitOptions, 'Unable to initialise options more than once');\n      obervableAll.subscribe(function () {\n        var opts = _this.emptyOptions();\n\n        _this.addAccounts(keyring, opts);\n\n        _this.addAddresses(keyring, opts);\n\n        _this.addContracts(keyring, opts);\n\n        opts.address = _this.linkItems({\n          Addresses: opts.address,\n          Recent: opts.recent\n        });\n        opts.account = _this.linkItems({\n          Accounts: opts.account,\n          Development: opts.testing\n        });\n        opts.contract = _this.linkItems({\n          Contracts: opts.contract\n        });\n        opts.all = [].concat(opts.account, opts.address);\n        opts.allPlus = [].concat(opts.account, opts.address, opts.contract);\n\n        _this.optionsSubject.next(opts);\n      });\n      hasCalledInitOptions = true;\n    }\n  }, {\n    key: \"linkItems\",\n    value: function linkItems(items) {\n      var _this2 = this;\n\n      return Object.keys(items).reduce(function (result, header) {\n        var options = items[header];\n        return result.concat(options.length ? [_this2.createOptionHeader(header)] : [], options);\n      }, []);\n    }\n  }, {\n    key: \"addAccounts\",\n    value: function addAccounts(keyring, options) {\n      var available = keyring.accounts.subject.getValue();\n      Object.values(available).sort(sortByName).forEach(function (_ref) {\n        var _ref$json$meta$isTest = _ref.json.meta.isTesting,\n            isTesting = _ref$json$meta$isTest === void 0 ? false : _ref$json$meta$isTest,\n            option = _ref.option;\n\n        if (!isTesting) {\n          options.account.push(option);\n        } else {\n          options.testing.push(option);\n        }\n      });\n    }\n  }, {\n    key: \"addAddresses\",\n    value: function addAddresses(keyring, options) {\n      var available = keyring.addresses.subject.getValue();\n      Object.values(available).filter(function (_ref2) {\n        var json = _ref2.json;\n        return !!json.meta.isRecent;\n      }).sort(sortByCreated).forEach(function (_ref3) {\n        var option = _ref3.option;\n        options.recent.push(option);\n      });\n      Object.values(available).filter(function (_ref4) {\n        var json = _ref4.json;\n        return !json.meta.isRecent;\n      }).sort(sortByName).forEach(function (_ref5) {\n        var option = _ref5.option;\n        options.address.push(option);\n      });\n    }\n  }, {\n    key: \"addContracts\",\n    value: function addContracts(keyring, options) {\n      var available = keyring.contracts.subject.getValue();\n      Object.values(available).sort(sortByName).forEach(function (_ref6) {\n        var option = _ref6.option;\n        options.contract.push(option);\n      });\n    }\n  }, {\n    key: \"emptyOptions\",\n    value: function emptyOptions() {\n      return {\n        account: [],\n        address: [],\n        all: [],\n        allPlus: [],\n        contract: [],\n        recent: [],\n        testing: []\n      };\n    }\n  }]);\n\n  return KeyringOption;\n}();","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/ui-keyring/options/index.js"],"names":["BehaviorSubject","assert","obervableAll","hasCalledInitOptions","sortByName","a","b","valueA","option","name","valueB","localeCompare","sortByCreated","json","meta","whenCreated","KeyringOption","optionsSubject","emptyOptions","key","toLowerCase","value","keyring","subscribe","opts","addAccounts","addAddresses","addContracts","address","linkItems","Addresses","Recent","recent","account","Accounts","Development","testing","contract","Contracts","all","concat","allPlus","next","items","Object","keys","reduce","result","header","options","length","createOptionHeader","available","accounts","subject","getValue","values","sort","forEach","isTesting","push","addresses","filter","isRecent","contracts"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BehaviorSubject } from 'rxjs';\nimport { assert } from '@polkadot/util';\nimport { obervableAll } from \"../observable/index.js\";\nlet hasCalledInitOptions = false;\n\nconst sortByName = (a, b) => {\n  const valueA = a.option.name;\n  const valueB = b.option.name;\n  return valueA.localeCompare(valueB);\n};\n\nconst sortByCreated = (a, b) => {\n  const valueA = a.json.meta.whenCreated || 0;\n  const valueB = b.json.meta.whenCreated || 0;\n\n  if (valueA < valueB) {\n    return 1;\n  }\n\n  if (valueA > valueB) {\n    return -1;\n  }\n\n  return 0;\n};\n\nexport class KeyringOption {\n  constructor() {\n    this.optionsSubject = new BehaviorSubject(this.emptyOptions());\n  }\n\n  createOptionHeader(name) {\n    return {\n      key: `header-${name.toLowerCase()}`,\n      name,\n      value: null\n    };\n  }\n\n  init(keyring) {\n    assert(!hasCalledInitOptions, 'Unable to initialise options more than once');\n    obervableAll.subscribe(() => {\n      const opts = this.emptyOptions();\n      this.addAccounts(keyring, opts);\n      this.addAddresses(keyring, opts);\n      this.addContracts(keyring, opts);\n      opts.address = this.linkItems({\n        Addresses: opts.address,\n        Recent: opts.recent\n      });\n      opts.account = this.linkItems({\n        Accounts: opts.account,\n        Development: opts.testing\n      });\n      opts.contract = this.linkItems({\n        Contracts: opts.contract\n      });\n      opts.all = [].concat(opts.account, opts.address);\n      opts.allPlus = [].concat(opts.account, opts.address, opts.contract);\n      this.optionsSubject.next(opts);\n    });\n    hasCalledInitOptions = true;\n  }\n\n  linkItems(items) {\n    return Object.keys(items).reduce((result, header) => {\n      const options = items[header];\n      return result.concat(options.length ? [this.createOptionHeader(header)] : [], options);\n    }, []);\n  }\n\n  addAccounts(keyring, options) {\n    const available = keyring.accounts.subject.getValue();\n    Object.values(available).sort(sortByName).forEach(({\n      json: {\n        meta: {\n          isTesting = false\n        }\n      },\n      option\n    }) => {\n      if (!isTesting) {\n        options.account.push(option);\n      } else {\n        options.testing.push(option);\n      }\n    });\n  }\n\n  addAddresses(keyring, options) {\n    const available = keyring.addresses.subject.getValue();\n    Object.values(available).filter(({\n      json\n    }) => !!json.meta.isRecent).sort(sortByCreated).forEach(({\n      option\n    }) => {\n      options.recent.push(option);\n    });\n    Object.values(available).filter(({\n      json\n    }) => !json.meta.isRecent).sort(sortByName).forEach(({\n      option\n    }) => {\n      options.address.push(option);\n    });\n  }\n\n  addContracts(keyring, options) {\n    const available = keyring.contracts.subject.getValue();\n    Object.values(available).sort(sortByName).forEach(({\n      option\n    }) => {\n      options.contract.push(option);\n    });\n  }\n\n  emptyOptions() {\n    return {\n      account: [],\n      address: [],\n      all: [],\n      allPlus: [],\n      contract: [],\n      recent: [],\n      testing: []\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"module"}