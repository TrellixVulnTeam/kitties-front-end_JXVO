{"ast":null,"code":"import _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { assert, isU8a, stringify, u8aConcat, u8aToHex } from '@polkadot/util';\nimport { Enum } from \"../../codec/Enum.js\";\nimport { Struct } from \"../../codec/Struct.js\";\nimport { EMPTY_U8A, IMMORTAL_ERA } from \"../constants.js\";\nimport { GenericExtrinsicPayloadV4 } from \"./ExtrinsicPayload.js\";\nvar FAKE_NONE = new Uint8Array();\nvar FAKE_SOME = new Uint8Array([1]);\n\nfunction toAddress(registry, address) {\n  return registry.createType('Address', isU8a(address) ? u8aToHex(address) : address);\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\n\n\nvar _fakePrefix = /*#__PURE__*/_classPrivateFieldLooseKey(\"fakePrefix\");\n\nexport var GenericExtrinsicSignatureV4 = /*#__PURE__*/function (_Struct) {\n  _inherits(GenericExtrinsicSignatureV4, _Struct);\n\n  var _super = _createSuper(GenericExtrinsicSignatureV4);\n\n  function GenericExtrinsicSignatureV4(registry, value) {\n    var _this;\n\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        isSigned = _ref.isSigned;\n\n    _classCallCheck(this, GenericExtrinsicSignatureV4);\n\n    _this = _super.call(this, registry, _objectSpread({\n      signer: 'Address',\n      // eslint-disable-next-line sort-keys\n      signature: 'ExtrinsicSignature'\n    }, registry.getSignedExtensionTypes()), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n    Object.defineProperty(_assertThisInitialized(_this), _fakePrefix, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(_assertThisInitialized(_this), _fakePrefix)[_fakePrefix] = registry.createType('ExtrinsicSignature') instanceof Enum ? FAKE_SOME : FAKE_NONE;\n    return _this;\n  }\n  /** @internal */\n\n\n  _createClass(GenericExtrinsicSignatureV4, [{\n    key: \"encodedLength\",\n    get:\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    function get() {\n      return this.isSigned ? _get(_getPrototypeOf(GenericExtrinsicSignatureV4.prototype), \"encodedLength\", this) : 0;\n    }\n    /**\n     * @description `true` if the signature is valid\n     */\n\n  }, {\n    key: \"isSigned\",\n    get: function get() {\n      return !this.signature.isEmpty;\n    }\n    /**\n     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n     */\n\n  }, {\n    key: \"era\",\n    get: function get() {\n      return this.get('era');\n    }\n    /**\n     * @description The [[Index]] for the signature\n     */\n\n  }, {\n    key: \"nonce\",\n    get: function get() {\n      return this.get('nonce');\n    }\n    /**\n     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n     */\n\n  }, {\n    key: \"signature\",\n    get: function get() {\n      // the second case here is when we don't have an enum signature, treat as raw\n      return this.multiSignature.value || this.multiSignature;\n    }\n    /**\n     * @description The raw [[ExtrinsicSignature]]\n     */\n\n  }, {\n    key: \"multiSignature\",\n    get: function get() {\n      return this.get('signature');\n    }\n    /**\n     * @description The [[Address]] that signed\n     */\n\n  }, {\n    key: \"signer\",\n    get: function get() {\n      return this.get('signer');\n    }\n    /**\n     * @description The [[Balance]] tip\n     */\n\n  }, {\n    key: \"tip\",\n    get: function get() {\n      return this.get('tip');\n    }\n  }, {\n    key: \"_injectSignature\",\n    value: function _injectSignature(signer, signature, _ref2) {\n      var era = _ref2.era,\n          nonce = _ref2.nonce,\n          tip = _ref2.tip;\n      this.set('era', era);\n      this.set('nonce', nonce);\n      this.set('signer', signer);\n      this.set('signature', signature);\n      this.set('tip', tip);\n      return this;\n    }\n    /**\n     * @description Adds a raw signature\n     */\n\n  }, {\n    key: \"addSignature\",\n    value: function addSignature(signer, signature, payload) {\n      return this._injectSignature(toAddress(this.registry, signer), this.registry.createType('ExtrinsicSignature', signature), new GenericExtrinsicPayloadV4(this.registry, payload));\n    }\n    /**\n     * @description Creates a payload from the supplied options\n     */\n\n  }, {\n    key: \"createPayload\",\n    value: function createPayload(method, _ref3) {\n      var blockHash = _ref3.blockHash,\n          era = _ref3.era,\n          genesisHash = _ref3.genesisHash,\n          nonce = _ref3.nonce,\n          _ref3$runtimeVersion = _ref3.runtimeVersion,\n          specVersion = _ref3$runtimeVersion.specVersion,\n          transactionVersion = _ref3$runtimeVersion.transactionVersion,\n          tip = _ref3.tip;\n      return new GenericExtrinsicPayloadV4(this.registry, {\n        blockHash: blockHash,\n        era: era || IMMORTAL_ERA,\n        genesisHash: genesisHash,\n        method: method.toHex(),\n        nonce: nonce,\n        specVersion: specVersion,\n        tip: tip || 0,\n        transactionVersion: transactionVersion || 0\n      });\n    }\n    /**\n     * @description Generate a payload and applies the signature from a keypair\n     */\n\n  }, {\n    key: \"sign\",\n    value: function sign(method, account, options) {\n      assert(account && account.addressRaw, function () {\n        return \"Expected a valid keypair for signing, found \".concat(stringify(account));\n      });\n      var signer = toAddress(this.registry, account.addressRaw);\n      var payload = this.createPayload(method, options);\n      var signature = this.registry.createType('ExtrinsicSignature', payload.sign(account));\n      return this._injectSignature(signer, signature, payload);\n    }\n    /**\n     * @description Generate a payload and applies a fake signature\n     */\n\n  }, {\n    key: \"signFake\",\n    value: function signFake(method, address, options) {\n      assert(address, function () {\n        return \"Expected a valid address for signing, found \".concat(stringify(address));\n      });\n      var signer = toAddress(this.registry, address);\n      var payload = this.createPayload(method, options);\n      var signature = this.registry.createType('ExtrinsicSignature', u8aConcat(_classPrivateFieldLooseBase(this, _fakePrefix)[_fakePrefix], new Uint8Array(64).fill(0x42)));\n      return this._injectSignature(signer, signature, payload);\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      return this.isSigned ? _get(_getPrototypeOf(GenericExtrinsicSignatureV4.prototype), \"toU8a\", this).call(this, isBare) : EMPTY_U8A;\n    }\n  }], [{\n    key: \"decodeExtrinsicSignature\",\n    value: function decodeExtrinsicSignature(value) {\n      var isSigned = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!value) {\n        return EMPTY_U8A;\n      } else if (value instanceof GenericExtrinsicSignatureV4) {\n        return value;\n      }\n\n      return isSigned ? value : EMPTY_U8A;\n    }\n  }]);\n\n  return GenericExtrinsicSignatureV4;\n}(Struct);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","assert","isU8a","stringify","u8aConcat","u8aToHex","Enum","Struct","EMPTY_U8A","IMMORTAL_ERA","GenericExtrinsicPayloadV4","FAKE_NONE","Uint8Array","FAKE_SOME","toAddress","registry","address","createType","_fakePrefix","GenericExtrinsicSignatureV4","value","isSigned","signer","signature","getSignedExtensionTypes","decodeExtrinsicSignature","writable","isEmpty","get","multiSignature","era","nonce","tip","set","payload","_injectSignature","method","blockHash","genesisHash","runtimeVersion","specVersion","transactionVersion","toHex","account","options","addressRaw","createPayload","sign","fill","isBare"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isU8a, stringify, u8aConcat, u8aToHex } from '@polkadot/util';\nimport { Enum } from \"../../codec/Enum.js\";\nimport { Struct } from \"../../codec/Struct.js\";\nimport { EMPTY_U8A, IMMORTAL_ERA } from \"../constants.js\";\nimport { GenericExtrinsicPayloadV4 } from \"./ExtrinsicPayload.js\";\nconst FAKE_NONE = new Uint8Array();\nconst FAKE_SOME = new Uint8Array([1]);\n\nfunction toAddress(registry, address) {\n  return registry.createType('Address', isU8a(address) ? u8aToHex(address) : address);\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\n\n\nvar _fakePrefix = /*#__PURE__*/_classPrivateFieldLooseKey(\"fakePrefix\");\n\nexport class GenericExtrinsicSignatureV4 extends Struct {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, _objectSpread({\n      signer: 'Address',\n      // eslint-disable-next-line sort-keys\n      signature: 'ExtrinsicSignature'\n    }, registry.getSignedExtensionTypes()), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n    Object.defineProperty(this, _fakePrefix, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _fakePrefix)[_fakePrefix] = registry.createType('ExtrinsicSignature') instanceof Enum ? FAKE_SOME : FAKE_NONE;\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicSignature(value, isSigned = false) {\n    if (!value) {\n      return EMPTY_U8A;\n    } else if (value instanceof GenericExtrinsicSignatureV4) {\n      return value;\n    }\n\n    return isSigned ? value : EMPTY_U8A;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.isSigned ? super.encodedLength : 0;\n  }\n  /**\n   * @description `true` if the signature is valid\n   */\n\n\n  get isSigned() {\n    return !this.signature.isEmpty;\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.get('era');\n  }\n  /**\n   * @description The [[Index]] for the signature\n   */\n\n\n  get nonce() {\n    return this.get('nonce');\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    // the second case here is when we don't have an enum signature, treat as raw\n    return this.multiSignature.value || this.multiSignature;\n  }\n  /**\n   * @description The raw [[ExtrinsicSignature]]\n   */\n\n\n  get multiSignature() {\n    return this.get('signature');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.get('signer');\n  }\n  /**\n   * @description The [[Balance]] tip\n   */\n\n\n  get tip() {\n    return this.get('tip');\n  }\n\n  _injectSignature(signer, signature, {\n    era,\n    nonce,\n    tip\n  }) {\n    this.set('era', era);\n    this.set('nonce', nonce);\n    this.set('signer', signer);\n    this.set('signature', signature);\n    this.set('tip', tip);\n    return this;\n  }\n  /**\n   * @description Adds a raw signature\n   */\n\n\n  addSignature(signer, signature, payload) {\n    return this._injectSignature(toAddress(this.registry, signer), this.registry.createType('ExtrinsicSignature', signature), new GenericExtrinsicPayloadV4(this.registry, payload));\n  }\n  /**\n   * @description Creates a payload from the supplied options\n   */\n\n\n  createPayload(method, {\n    blockHash,\n    era,\n    genesisHash,\n    nonce,\n    runtimeVersion: {\n      specVersion,\n      transactionVersion\n    },\n    tip\n  }) {\n    return new GenericExtrinsicPayloadV4(this.registry, {\n      blockHash,\n      era: era || IMMORTAL_ERA,\n      genesisHash,\n      method: method.toHex(),\n      nonce,\n      specVersion,\n      tip: tip || 0,\n      transactionVersion: transactionVersion || 0\n    });\n  }\n  /**\n   * @description Generate a payload and applies the signature from a keypair\n   */\n\n\n  sign(method, account, options) {\n    assert(account && account.addressRaw, () => `Expected a valid keypair for signing, found ${stringify(account)}`);\n    const signer = toAddress(this.registry, account.addressRaw);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('ExtrinsicSignature', payload.sign(account));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Generate a payload and applies a fake signature\n   */\n\n\n  signFake(method, address, options) {\n    assert(address, () => `Expected a valid address for signing, found ${stringify(address)}`);\n    const signer = toAddress(this.registry, address);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('ExtrinsicSignature', u8aConcat(_classPrivateFieldLooseBase(this, _fakePrefix)[_fakePrefix], new Uint8Array(64).fill(0x42)));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isSigned ? super.toU8a(isBare) : EMPTY_U8A;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}