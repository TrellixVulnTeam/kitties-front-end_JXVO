{"ast":null,"code":"import _get from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isString, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"./Raw.js\";\n/** @internal */\n\nfunction decodeU8aFixed(value, bitLength) {\n  if (Array.isArray(value) || isString(value)) {\n    return decodeU8aFixed(u8aToU8a(value), bitLength);\n  }\n\n  var byteLength = bitLength / 8;\n  var u8a = new Uint8Array(byteLength);\n\n  if (!value || !value.length) {\n    return u8a;\n  }\n\n  assert(value.length >= byteLength, function () {\n    return \"Expected at least \".concat(byteLength, \" bytes (\").concat(bitLength, \" bits), found \").concat(value.length, \" bytes\");\n  });\n  return value.subarray(0, byteLength);\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\n\n\nexport var U8aFixed = /*#__PURE__*/function (_Raw) {\n  _inherits(U8aFixed, _Raw);\n\n  var _super = _createSuper(U8aFixed);\n\n  function U8aFixed(registry) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint8Array();\n    var bitLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 256;\n\n    _classCallCheck(this, U8aFixed);\n\n    return _super.call(this, registry, decodeU8aFixed(value, bitLength));\n  }\n\n  _createClass(U8aFixed, [{\n    key: \"toRawType\",\n    value:\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    function toRawType() {\n      return \"[u8;\".concat(this.length, \"]\");\n    }\n  }], [{\n    key: \"with\",\n    value: function _with(bitLength, typeName) {\n      return /*#__PURE__*/function (_U8aFixed) {\n        _inherits(_class, _U8aFixed);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super2.call(this, registry, value, bitLength);\n        }\n\n        _createClass(_class, [{\n          key: \"toRawType\",\n          value: function toRawType() {\n            return typeName || _get(_getPrototypeOf(_class.prototype), \"toRawType\", this).call(this);\n          }\n        }]);\n\n        return _class;\n      }(U8aFixed);\n    }\n  }]);\n\n  return U8aFixed;\n}(Raw);","map":{"version":3,"sources":["/home/spren/workspace/slides/advanced/term-03/03_polkadot-js-api/kitties/frontend/node_modules/@polkadot/types/codec/U8aFixed.js"],"names":["assert","isString","u8aToU8a","Raw","decodeU8aFixed","value","bitLength","Array","isArray","byteLength","u8a","Uint8Array","length","subarray","U8aFixed","registry","typeName"],"mappings":";;;;;;AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,gBAA3C;AACA,SAASC,GAAT,QAAoB,UAApB;AACA;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;AACxC,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,KAAwBJ,QAAQ,CAACI,KAAD,CAApC,EAA6C;AAC3C,WAAOD,cAAc,CAACF,QAAQ,CAACG,KAAD,CAAT,EAAkBC,SAAlB,CAArB;AACD;;AAED,MAAMG,UAAU,GAAGH,SAAS,GAAG,CAA/B;AACA,MAAMI,GAAG,GAAG,IAAIC,UAAJ,CAAeF,UAAf,CAAZ;;AAEA,MAAI,CAACJ,KAAD,IAAU,CAACA,KAAK,CAACO,MAArB,EAA6B;AAC3B,WAAOF,GAAP;AACD;;AAEDV,EAAAA,MAAM,CAACK,KAAK,CAACO,MAAN,IAAgBH,UAAjB,EAA6B;AAAA,uCAA2BA,UAA3B,qBAAgDH,SAAhD,2BAA0ED,KAAK,CAACO,MAAhF;AAAA,GAA7B,CAAN;AACA,SAAOP,KAAK,CAACQ,QAAN,CAAe,CAAf,EAAkBJ,UAAlB,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,WAAaK,QAAb;AAAA;;AAAA;;AACE,oBAAYC,QAAZ,EAAiE;AAAA,QAA3CV,KAA2C,uEAAnC,IAAIM,UAAJ,EAAmC;AAAA,QAAjBL,SAAiB,uEAAL,GAAK;;AAAA;;AAAA,6BACzDS,QADyD,EAC/CX,cAAc,CAACC,KAAD,EAAQC,SAAR,CADiC;AAEhE;;AAHH;AAAA;AAAA;AAiBE;AACF;AACA;AAGE,yBAAY;AACV,2BAAc,KAAKM,MAAnB;AACD;AAxBH;AAAA;AAAA,WAKE,eAAYN,SAAZ,EAAuBU,QAAvB,EAAiC;AAC/B;AAAA;;AAAA;;AACE,wBAAYD,QAAZ,EAAsBV,KAAtB,EAA6B;AAAA;;AAAA,oCACrBU,QADqB,EACXV,KADW,EACJC,SADI;AAE5B;;AAHH;AAAA;AAAA,iBAKE,qBAAY;AACV,mBAAOU,QAAQ,yEAAf;AACD;AAPH;;AAAA;AAAA,QAAqBF,QAArB;AAUD;AAhBH;;AAAA;AAAA,EAA8BX,GAA9B","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isString, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"./Raw.js\";\n/** @internal */\n\nfunction decodeU8aFixed(value, bitLength) {\n  if (Array.isArray(value) || isString(value)) {\n    return decodeU8aFixed(u8aToU8a(value), bitLength);\n  }\n\n  const byteLength = bitLength / 8;\n  const u8a = new Uint8Array(byteLength);\n\n  if (!value || !value.length) {\n    return u8a;\n  }\n\n  assert(value.length >= byteLength, () => `Expected at least ${byteLength} bytes (${bitLength} bits), found ${value.length} bytes`);\n  return value.subarray(0, byteLength);\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\n\n\nexport class U8aFixed extends Raw {\n  constructor(registry, value = new Uint8Array(), bitLength = 256) {\n    super(registry, decodeU8aFixed(value, bitLength));\n  }\n\n  static with(bitLength, typeName) {\n    return class extends U8aFixed {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `[u8;${this.length}]`;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}