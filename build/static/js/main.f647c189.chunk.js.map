{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/utils.js","substrate-lib/components/TxButton.js","substrate-lib/components/DeveloperConsole.js","AccountSelector.js","Balances.js","BlockNumber.js","Events.js","Interactor.js","KittyAvatar.js","KittyCards.js","Kitties.js","Metadata.js","NodeInfo.js","TemplateModule.js","Transfer.js","Upgrade.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","types","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","utils","paramConversion","num","TxButton","accountPair","label","setStatus","color","style","attrs","onClick","disabled","useState","unsub","setUnsub","sudoKey","setSudoKey","palletRpc","callable","inputParams","paramFields","isSudo","isUncheckedSudo","useEffect","query","sudo","isEmpty","toString","getFromAcct","isInjected","web3FromSource","injected","fromAcct","setSigner","signer","txResHandler","status","isFinalized","asFinalized","txErrHandler","sudoTx","transformed","transformParams","txExecute","tx","signAndSend","catch","uncheckedSudoTx","sudoUncheckedWeight","signedTx","unsignedTx","send","queryResHandler","result","isNone","emptyAsNull","constant","consts","transaction","acctPair","opts","paramVal","inputParam","trim","params","field","ind","memo","converted","indexOf","split","e","single","isNumType","Number","parseFloat","parseInt","some","el","Button","basic","length","every","paramField","param","optional","TxGroupButton","Group","Or","DeveloperConsole","util","utilCrypto","Main","setAccountAddress","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","Menu","attached","tabular","backgroundColor","borderColor","paddingTop","paddingBottom","Container","Image","src","size","position","alignItems","target","rel","href","circular","Dropdown","selection","clearable","placeholder","options","onChange","_","dropdown","BalanceAnnotation","accountBalance","setAccountBalance","unsubscribe","system","balance","data","free","toHuman","Label","pointing","Icon","AccountSelector","accounts","balances","setBalances","addresses","unsubscribeAll","multi","balancesMap","acc","index","Grid","Column","Table","celled","striped","Body","Row","Cell","width","textAlign","display","minWidth","compact","finalized","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","number","toNumber","timer","time","id","setInterval","clearInterval","Card","Content","Statistic","extra","BlockNumber","FILTERED_EVENTS","eventFeed","setEventFeed","events","record","event","phase","typeDef","eventName","section","method","includes","summary","extraText","docs","join","content","allEvents","feedMaxHeight","float","floated","Feed","clear","overflow","maxHeight","Events","argIsOptional","arg","startsWith","interxType","setInterxType","palletRPCs","setPalletRPCs","callables","setCallables","setParamFields","initFormState","formState","setFormState","getApiType","apiType","Object","keys","sort","filter","pr","c","metaType","isPlain","isMap","asMap","isDoubleMap","asDoubleMap","key1","key2","metaArgs","args","metaParam","isOptional","onPalletCallableParamChange","res","onInterxTypeChange","ev","getOptionalMsg","Form","overflowX","inline","Radio","checked","Field","fluid","Input","InteractorSubmit","overflowWrap","Interactor","IMAGES","accessory","body","eyes","mouth","fur","KittyAvatar","innerStyle","height","top","left","dna","cat","attribute","dnaToAttributes","alt","TransferModal","kitty","open","setOpen","formValue","setFormValue","Modal","onClose","onOpen","trigger","Header","readOnly","Actions","KittyCard","owner","displayDna","displayId","isSelf","as","floating","Meta","Description","KittyCards","kitties","Message","info","role","columns","i","Kitties","setKitties","margin","version","metadata","setMetadata","getMetadata","scrolling","JSON","stringify","Metadata","nodeInfo","setNodeInfo","Promise","all","nodeName","nodeVersion","getInfo","NodeInfo","currentValue","setCurrentValue","templateModule","something","newValue","unwrap","centered","TemplateModule","addressTo","amount","prev","proposal","setProposal","handleFileChosen","file","fileReader","FileReader","onloadend","buffer","Array","from","Uint8Array","b","padStart","readAsArrayBuffer","accept","files","accountAddress","getPair","loader","Dimmer","active","Loader","padded","negative","header","contextRef","createRef","ref","Sticky","context","stackable","stretched","App","ReactDOM","render","document","getElementById"],"mappings":"63BAGMA,EAAYC,EAAQ,KAOpBC,EAJc,CAClB,4BACA,iCAE0BC,QAAO,SAACC,EAAKC,GAGvC,YADuBC,IAAnBC,gKAAYF,KAAkBD,EAAIC,EAAEG,MAAM,KAAOD,gKAAYF,IAC1DD,IACN,IAGYK,EADH,mDAAQC,GAAiBV,GAAcE,GAAvC,IAAgDS,U,OCJtDC,EADcC,IAAYC,MAAMC,OAAOC,SAASC,QAClBC,KAAOT,EAAOU,gBAClDC,QAAQC,IAAR,4BAAiCT,IAKjC,IAAMU,EAAa,CACjBC,OAAQX,EACRY,QAAQ,2BAAMA,KAAYf,EAAOgB,KACjCd,MAAOF,EAAOE,MACde,QAAS,KACTC,aAAc,KACdC,IAAK,KACLC,SAAU,KACVC,SAAU,MAMNC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,eACH,OAAO,2BAAKF,GAAZ,IAAmBF,SAAU,iBAE/B,IAAK,UACH,OAAO,2BAAKE,GAAZ,IAAmBJ,IAAKK,EAAOE,QAASL,SAAU,eAEpD,IAAK,kBACH,OAAO,2BAAKE,GAAZ,IAAmBF,SAAU,UAE/B,IAAK,gBACH,OAAO,2BAAKE,GAAZ,IAAmBF,SAAU,QAASD,SAAUI,EAAOE,UAEzD,IAAK,eACH,OAAO,2BAAKH,GAAZ,IAAmBL,aAAc,YAEnC,IAAK,cACH,OAAO,2BAAKK,GAAZ,IAAmBN,QAASO,EAAOE,QAASR,aAAc,UAE5D,IAAK,gBACH,OAAO,2BAAKK,GAAZ,IAAmBN,QAAS,KAAMC,aAAc,UAElD,QACE,MAAM,IAAIS,MAAJ,wBAA2BH,EAAOC,SA8B1CG,GAAY,EA4BVC,EAAmBC,IAAMC,gBAEzBC,EAA2B,SAACC,GAEhC,IAAMC,EAAS,eAAQrB,GACC,CAAC,SAAU,SACnBsB,SAAQ,SAAAC,GACtBF,EAAUE,GAA8B,qBAAfH,EAAMG,GAAuBF,EAAUE,GAAOH,EAAMG,MAG/E,MAA0BC,qBAAWf,EAASY,GAA9C,mBAAOX,EAAP,KAAce,EAAd,KAIA,OAjEc,SAACf,EAAOe,GACtB,IAAQjB,EAAqCE,EAArCF,SAAUP,EAA2BS,EAA3BT,OAAQC,EAAmBQ,EAAnBR,QAASb,EAAUqB,EAAVrB,MAEnC,IAAImB,EAAJ,CAEAiB,EAAS,CAAEb,KAAM,iBAEjB,IAAMc,EAAW,IAAIC,IAAW1B,GAC1B2B,EAAO,IAAIC,IAAW,CAAEH,WAAUrC,QAAOO,IAAKM,IAGpD0B,EAAKE,GAAG,aAAa,WACnBL,EAAS,CAAEb,KAAM,UAAWC,QAASe,IAErCA,EAAKG,QAAQC,MAAK,SAACJ,GAAD,OAAUH,EAAS,CAAEb,KAAM,0BAE/CgB,EAAKE,GAAG,SAAS,kBAAML,EAAS,CAAEb,KAAM,uBACxCgB,EAAKE,GAAG,SAAS,SAAAG,GAAG,OAAIR,EAAS,CAAEb,KAAM,gBAAiBC,QAASoB,QA6CnEC,CAAQxB,EAAOe,GAtCI,SAACf,EAAOe,GAC3B,IAAMU,EAAiB,uCAAG,4BAAAC,EAAA,6DACxBX,EAAS,CAAEb,KAAM,iBADO,kBAGhByB,YAAWlD,EAAOmD,UAHF,uBAIEC,cAJF,OAKtBC,GADIA,EAJkB,QAKIC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,MAC3B,CAAED,UAASC,KAAK,2BAAMA,GAAP,IAAaC,KAAK,GAAD,OAAKD,EAAKC,KAAV,aAAmBD,EAAKE,OAAxB,WACnCzC,IAAQ0C,QAAQ,CAAEC,cAAe5D,EAAO6D,qBAAuBR,GAC/Df,EAAS,CAAEb,KAAM,cAAeC,QAAST,MARnB,kDAUtBN,QAAQmD,MAAR,MACAxB,EAAS,CAAEb,KAAM,kBAXK,0DAAH,qDAiBvB,IAFyBF,EAAjBL,aAER,CAEA,GAAIU,EAAW,OAAOU,EAAS,CAAEb,KAAM,cAAeC,QAAST,MAG/DW,GAAY,EACZoB,KAeAe,CAAaxC,EAAOe,GAEb,cAACT,EAAiBmC,SAAlB,CAA2BC,MAAO1C,EAAlC,SACJU,EAAMiC,YAULC,EAAe,iCAAYC,qBAAWvC,KChI7BwC,EAXD,CACZC,gBAAiB,CACfC,IAAK,CACH,mBACA,YACA,KAAM,MAAO,MAAO,MAAO,OAC3B,KAAM,MAAO,MAAO,MAAO,U,iBCEjC,SAASC,EAAT,GAUI,IAAD,IATDC,mBASC,MATa,KASb,EARDC,EAQC,EARDA,MACAC,EAOC,EAPDA,UAOC,IANDC,aAMC,MANO,OAMP,MALDC,aAKC,MALO,KAKP,MAJDpD,YAIC,MAJM,QAIN,MAHDqD,aAGC,MAHO,KAGP,MAFDC,eAEC,MAFS,KAET,MADDC,gBACC,SAEO7D,EAAQgD,IAARhD,IACR,EAA0B8D,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEQC,EAAkDR,EAAlDQ,UAAWC,EAAuCT,EAAvCS,SAAUC,EAA6BV,EAA7BU,YAAaC,EAAgBX,EAAhBW,YAGpCC,EAAS,iBAAe,YAATjE,GACfkE,EAAkB,iBAAe,sBAATlE,GAc9BmE,qBARoB,WAClB,sBAAC,4BAAA3C,EAAA,yDACM9B,GAAQA,EAAI0E,MAAMC,KADxB,iEAEuB3E,EAAI0E,MAAMC,KAAK1D,MAFtC,QAEOgD,EAFP,QAGSW,QAAUV,EAAW,MAAQA,EAAWD,EAAQY,YAHzD,0CAAD,KAOqB,CAAC7E,IAExB,IAAM8E,EAAW,uCAAG,oCAAAhD,EAAA,yDAEhBM,EAEEkB,EAFFlB,QAFgB,EAIdkB,EADFjB,KAAQE,EAHQ,EAGRA,QAHQ,EAGAwC,WAHA,gCASOC,YAAezC,GATtB,OASV0C,EATU,OAUhBC,EAAW9C,EACXpC,EAAImF,UAAUF,EAASG,QAXP,uBAahBF,EAAW5B,EAbK,iCAgBX4B,GAhBW,4CAAH,qDAmBXG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnBA,EAAOC,YACH/B,EAAU,uCAAD,OAA8B8B,EAAOE,YAAYX,aAC1DrB,EAAU,+BAAD,OAAgC8B,EAAOhF,QAEhDmF,EAAe,SAAA9D,GAAG,OACtB6B,EAAU,oCAAD,OAA2B7B,EAAIkD,cAEpCa,EAAM,uCAAG,oCAAA5D,EAAA,sEACUgD,IADV,OACPI,EADO,OAEPS,EAAcC,GAAgBtB,EAAaD,GAC3CwB,EAAYF,EACd3F,EAAI8F,GAAGnB,KAAKA,MAAK,EAAA3E,EAAI8F,GAAG3B,IAAWC,GAAlB,oBAA+BuB,KAChD3F,EAAI8F,GAAGnB,KAAKA,KAAK3E,EAAI8F,GAAG3B,GAAWC,MAEjCL,EAAQ8B,EAAUE,YAAYb,EAAUG,GAC3CW,MAAMP,GAGTzB,GAAS,kBAAMD,KAXF,2CAAH,qDAcNkC,EAAe,uCAAG,kCAAAnE,EAAA,sEACCgD,IADD,OAChBI,EADgB,OAEhBW,EACJ7F,EAAI8F,GAAGnB,KAAKuB,qBAAoB,EAAAlG,EAAI8F,GAAG3B,IAAWC,GAAlB,oBAA+BC,IAAc,GAEzEN,EAAQ8B,EAAUE,YAAYb,EAAUG,GAC3CW,MAAMP,GACTzB,GAAS,kBAAMD,KAPO,2CAAH,qDAUfoC,EAAQ,uCAAG,oCAAArE,EAAA,sEACQgD,IADR,cACTI,EADS,OAETS,EAAcC,GAAgBtB,EAAaD,GAE3CwB,EAAYF,GACd,EAAA3F,EAAI8F,GAAG3B,IAAWC,GAAlB,oBAA+BuB,IAC/B3F,EAAI8F,GAAG3B,GAAWC,KANP,SAQKyB,EAAUE,YAAYb,EAAUG,GACjDW,MAAMP,GATM,OAQT1B,EARS,OAUfC,GAAS,kBAAMD,KAVA,2CAAH,qDAaRqC,EAAU,uCAAG,kCAAAtE,EAAA,6DACX6D,EAAcC,GAAgBtB,EAAaD,GAC3CwB,EAAYF,GACd,EAAA3F,EAAI8F,GAAG3B,IAAWC,GAAlB,oBAA+BuB,IAC/B3F,EAAI8F,GAAG3B,GAAWC,KAJL,SAMGyB,EAAUQ,KAAKhB,GAChCW,MAAMP,GAPQ,OAMX1B,EANW,OAQjBC,GAAS,kBAAMD,KARE,2CAAH,qDAWVuC,EAAkB,SAAAC,GAAM,OAC5BA,EAAOC,OAAShD,EAAU,QAAUA,EAAU+C,EAAO1B,aAEjDH,EAAK,uCAAG,gCAAA5C,EAAA,6DACN6D,EAAcC,GAAgBtB,EAAaD,GADrC,UAEQ,EAAArE,EAAI0E,MAAMP,IAAWC,GAArB,oBAAkCuB,GAAlC,QAA+CW,KAFvD,OAENvC,EAFM,OAGZC,GAAS,kBAAMD,KAHH,2CAAH,qDAMLzE,EAAG,uCAAG,gCAAAwC,EAAA,6DACJ6D,EAAcC,GAAgBtB,EAAaD,EAAa,CAAEoC,aAAa,IADnE,UAEU,EAAAzG,EAAIV,IAAI6E,IAAWC,GAAnB,oBAAgCuB,GAAhC,QAA6CW,KAFvD,OAEJvC,EAFI,OAGVC,GAAS,kBAAMD,KAHL,2CAAH,qDAMH2C,EAAW,WACf,IAAMH,EAASvG,EAAI2G,OAAOxC,GAAWC,GACrCmC,EAAOC,OAAShD,EAAU,QAAUA,EAAU+C,EAAO1B,aAGjD+B,GAAW,uCAAG,sBAAA9E,EAAA,sDACdiC,IACFA,IACAC,EAAS,OAGXR,EAAU,cAETe,KAAYmB,KACZlB,KAAqByB,KAtHQ,cAAT3F,GAuHN6F,KAxHiB,gBAAT7F,GAyHN8F,KA5HY,UAAT9F,GA6HNoE,KAxHa,QAATpE,GAyHNhB,KAxHoB,aAATgB,GAyHNoG,IAdC,2CAAH,qDAoBjBjC,qBAAU,WACJV,GAASH,IACXA,EAAQG,GACRC,EAAS,SAEV,CAACD,EAAOH,IAEX,IAsDiBiD,GAtDXjB,GAAkB,SAACtB,EAAaD,GAA+C,IAAlCyC,EAAiC,uDAA1B,CAAEL,aAAa,GAGjEM,EAAW1C,EAAYlC,KAAI,SAAA6E,GAE/B,MAA0B,kBAAfA,GAA0C,OAAfA,GAAmD,kBAArBA,EAAWlE,MACtEkE,EAAWlE,MAAMmE,OACO,kBAAfD,EACTA,EAAWC,OAEbD,KAEHE,EAAS5C,EAAYnC,KAAI,SAACgF,EAAOC,GAAR,mBAAC,eACxBD,GADuB,IAChBrE,MAAgC,qBAAlBiE,EAASK,GAAuB,KAAOL,EAASK,QAE7E,OAAOF,EAAO3I,QAAO,SAAC8I,EAAD,GAAuC,IAAD,IAA7B/G,YAA6B,MAAtB,SAAsB,EAAZwC,EAAY,EAAZA,MAC7C,GAAa,MAATA,GAA2B,KAAVA,EAAc,OAAQgE,EAAKL,YAAL,sBAAuBY,GAAvB,CAA6B,OAAQA,EAEhF,IAAIC,EAAYxE,EAGhB,OAAIxC,EAAKiH,QAAQ,SAAW,GAE1BD,GADAA,EAAYA,EAAUE,MAAM,KAAKrF,KAAI,SAAAsF,GAAC,OAAIA,EAAER,WACtB9E,KAAI,SAAAuF,GAAM,OAAIC,GAAUrH,GACzCoH,EAAOH,QAAQ,MAAQ,EAAIK,OAAOC,WAAWH,GAAUE,OAAOE,SAASJ,GACxEA,KAEE,GAAN,mBAAWL,GAAX,CAAiBC,MAIfK,GAAUrH,KACZgH,EAAYA,EAAUC,QAAQ,MAAQ,EAAIK,OAAOC,WAAWP,GAAaM,OAAOE,SAASR,IAErF,GAAN,mBAAWD,GAAX,CAAiBC,OAChB,KAGCK,GAAY,SAAArH,GAAI,OACpB4C,EAAMC,gBAAgBC,IAAI2E,MAAK,SAAAC,GAAE,OAAI1H,EAAKiH,QAAQS,IAAO,MAoB3D,OACE,cAACC,EAAA,EAAD,CACEC,OAAK,EACLzE,MAAOA,EACPC,MAAOA,EACPpD,KAAK,SACLsD,QAASgD,GACT/C,SAAWA,IAAaM,IAAcC,KAxBb,IAAvBE,EAAY6D,QAET7D,EAAY8D,OAAM,SAACC,EAAYjB,GACpC,IAAMkB,EAAQjE,EAAY+C,GAC1B,GAAIiB,EAAWE,SAAY,OAAO,EAClC,GAAa,MAATD,EAAiB,OAAO,EAE5B,IAAMxF,EAAyB,kBAAVwF,EAAqBA,EAAMxF,MAAQwF,EACxD,OAAiB,OAAVxF,GAA4B,KAAVA,QAiBrByB,KAAYC,OAbHqC,GAamCvD,IAZ7CW,GAAY4C,IACVA,GAASzE,UAAY6B,IAI5B,SASGV,IAqBP,SAASiF,EAAe1H,GACtB,OACE,eAACmH,EAAA,EAAOQ,MAAR,WACE,cAACpF,EAAD,aACEE,MAAM,WACNjD,KAAK,cACLmD,MAAM,QACF3C,IAEN,cAACmH,EAAA,EAAOS,GAAR,IACA,cAACrF,EAAD,aACEE,MAAM,SACNjD,KAAK,YACLmD,MAAM,QACF3C,IAEN,cAACmH,EAAA,EAAOS,GAAR,IACA,cAACrF,EAAD,aACEE,MAAM,OACNjD,KAAK,UACLmD,MAAM,OACF3C,OClRG,SAAS6H,EAAkB7H,GACxC,MAAiDkC,IAAzChD,EAAR,EAAQA,IAAKE,EAAb,EAAaA,SAAUJ,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,aAMhC,MALiB,UAAbG,IAAwBf,OAAOa,IAAMA,GACpB,UAAjBD,IAA4BZ,OAAOW,QAAUA,GACjDX,OAAOyJ,KAAOvK,EAAQ,GACtBc,OAAO0J,WAAaxK,EAAQ,IAErB,K,0DCKT,SAASyK,EAAMhI,GACb,IAAQhB,EAAYkD,IAAZlD,QACAiJ,EAAsBjI,EAAtBiI,kBACR,EAA8CjF,mBAAS,IAAvD,mBAAOkF,EAAP,KAAwBC,EAAxB,KAGMC,EAAiBpJ,EAAQqJ,WAAWhH,KAAI,SAAAiH,GAAO,MAAK,CACxDnI,IAAKmI,EAAQhH,QACbU,MAAOsG,EAAQhH,QACfiH,KAAMD,EAAQ/G,KAAKC,KAAKgH,cACxBC,KAAM,WAGFC,EACJN,EAAef,OAAS,EAAIe,EAAe,GAAGpG,MAAQ,GAGxD2B,qBAAU,WACRsE,EAAkBS,GAClBP,EAAmBO,KAClB,CAACT,EAAmBS,IAQvB,OACE,cAACC,EAAA,EAAD,CACEC,SAAS,MACTC,SAAO,EACPjG,MAAO,CACLkG,gBAAiB,OACjBC,YAAa,OACbC,WAAY,MACZC,cAAe,OAPnB,SAUE,eAACC,EAAA,EAAD,WACE,cAACP,EAAA,EAAKA,KAAN,UACE,cAACQ,EAAA,EAAD,CAAOC,IAAG,UAAKvL,gCAAL,8BAAyDwL,KAAK,WAE1E,eAACV,EAAA,EAAKA,KAAN,CAAWW,SAAS,QAAQ1G,MAAO,CAAE2G,WAAY,UAAjD,UACKrB,EAWC,KAVA,6DAC0B,IAC1B,mBACEsB,OAAO,SACPC,IAAI,sBACJC,KAAK,2CAHP,sCASJ,cAAC,kBAAD,CAAiBnB,KAAML,EAAvB,SACE,cAACf,EAAA,EAAD,CACEC,OAAK,EACLuC,UAAQ,EACRN,KAAK,QACLZ,KAAK,OACL9F,MAAOuF,EAAkB,QAAU,UAGvC,cAAC0B,EAAA,EAAD,CACErL,QAAM,EACNsL,WAAS,EACTC,WAAS,EACTC,YAAY,oBACZC,QAAS5B,EACT6B,SAAU,SAACC,EAAGC,GAjDP,IAAA7I,IAkDI6I,EAASnI,MAhD5BiG,EAAkB3G,GAClB6G,EAAmB7G,IAiDXU,MAAOkG,IAET,cAACkC,EAAD,CAAmBlC,gBAAiBA,YAO9C,SAASkC,EAAmBpK,GAC1B,IAAQkI,EAAoBlI,EAApBkI,gBACAhJ,EAAQgD,IAARhD,IACR,EAA4C8D,mBAAS,GAArD,mBAAOqH,EAAP,KAAuBC,EAAvB,KAmBA,OAhBA3G,qBAAU,WACR,IAAI4G,EAYJ,OATArC,GACEhJ,EAAI0E,MAAM4G,OAAOlC,QAAQJ,GAAiB,SAAAuC,GACxCH,EAAkBG,EAAQC,KAAKC,KAAKC,cAEnChK,MAAK,SAAAqC,GACJsH,EAActH,KAEfiC,MAAMxG,QAAQmD,OAEZ,kBAAM0I,GAAeA,OAC3B,CAACrL,EAAKgJ,IAEFA,EAEL,eAAC2C,EAAA,EAAD,CAAOC,SAAS,OAAhB,UACE,cAACC,EAAA,EAAD,CAAMvJ,KAAK,QAAQmB,MAAM,UACxB0H,KAGD,KAGS,SAASW,EAAiBhL,GACvC,MAAyBkC,IAAjBhD,EAAR,EAAQA,IACR,OADA,EAAaF,QACEqJ,UAAYnJ,EAAI0E,MAAQ,cAACoE,EAAD,eAAUhI,IAAY,K,sBC/HhD,SAASgI,GAAMhI,GAC5B,MAAyBkC,IAAjBhD,EAAR,EAAQA,IAAKF,EAAb,EAAaA,QACPiM,EAAWjM,EAAQqJ,WACzB,EAAgCrF,mBAAS,IAAzC,mBAAOkI,EAAP,KAAiBC,EAAjB,KAmBA,OAjBAxH,qBAAU,WACR,IAAMyH,EAAYpM,EAAQqJ,WAAWhH,KAAI,SAAAiH,GAAO,OAAIA,EAAQhH,WACxD+J,EAAiB,KAYrB,OAVAnM,EAAI0E,MAAM4G,OAAOlC,QACdgD,MAAMF,GAAW,SAAAF,GAChB,IAAMK,EAAcH,EAAU3N,QAAO,SAAC+N,EAAKlK,EAASmK,GAAf,mBAAC,eACjCD,GADgC,kBAC1BlK,EAAU4J,EAASO,GAAOf,KAAKC,KAAKC,cAC3C,IACJO,EAAYI,MACX3K,MAAK,SAAAqC,GACNoI,EAAiBpI,KAChBiC,MAAMxG,QAAQmD,OAEZ,kBAAMwJ,GAAkBA,OAC9B,CAACnM,EAAKF,EAASmM,IAGhB,eAACO,EAAA,EAAKC,OAAN,WACE,0CACA,cAACC,GAAA,EAAD,CAAOC,QAAM,EAACC,SAAO,EAACzC,KAAK,QAA3B,SACE,cAACuC,GAAA,EAAMG,KAAP,UAAad,EAAS5J,KAAI,SAAAiH,GAAO,OAC/B,eAACsD,GAAA,EAAMI,IAAP,WACE,cAACJ,GAAA,EAAMK,KAAP,CAAYC,MAAO,EAAGC,UAAU,QAAhC,SAAyC7D,EAAQ/G,KAAKC,OACtD,eAACoK,GAAA,EAAMK,KAAP,CAAYC,MAAO,GAAnB,UACE,sBAAMtJ,MAAO,CAAEwJ,QAAS,eAAgBC,SAAU,QAAlD,SACG/D,EAAQhH,UAEX,cAAC,kBAAD,CAAiBiH,KAAMD,EAAQhH,QAA/B,SACE,cAAC6F,EAAA,EAAD,CACEC,OAAK,EACLuC,UAAQ,EACR2C,SAAO,EACPjD,KAAK,OACL1G,MAAM,OACN8F,KAAK,sBAIX,cAACmD,GAAA,EAAMK,KAAP,CAAYC,MAAO,EAAnB,SACEhB,GAAYA,EAAS5C,EAAQhH,UAC7B4J,EAAS5C,EAAQhH,aAnBLgH,EAAQhH,mB,wBC3BlC,SAAS0G,GAAMhI,GACb,IAAQd,EAAQgD,IAARhD,IACAqN,EAAcvM,EAAduM,UACR,EAAsCvJ,mBAAS,GAA/C,mBAAOwJ,EAAP,KAAoBC,EAApB,KACA,EAAgDzJ,mBAAS,GAAzD,mBAAO0J,EAAP,KAAyBC,EAAzB,KAEMC,EAAaL,EACfrN,EAAI2N,OAAOC,MAAMC,oBACjB7N,EAAI2N,OAAOC,MAAMF,WAErBjJ,qBAAU,WACR,IAAI0H,EAAiB,KAWrB,OATAuB,GAAW,SAAAI,GACTP,EAAeO,EAAOC,YACtBN,EAAoB,MAEnB/L,MAAK,SAAAqC,GACJoI,EAAiBpI,KAElBiC,MAAMxG,QAAQmD,OAEV,kBAAMwJ,GAAkBA,OAC9B,CAACuB,IAEJ,IAAMM,EAAQ,WACZP,GAAoB,SAAAQ,GAAI,OAAIA,EAAO,MAQrC,OALAxJ,qBAAU,WACR,IAAMyJ,EAAKC,YAAYH,EAAO,KAC9B,OAAO,kBAAMI,cAAcF,MAC1B,IAGD,cAAC1B,EAAA,EAAKC,OAAN,UACE,eAAC4B,GAAA,EAAD,WACE,cAACA,GAAA,EAAKC,QAAN,CAAcrB,UAAU,SAAxB,SACE,cAACsB,GAAA,EAAD,CACEhL,OAAQ8J,EAAY,YAAc,WAAa,SAC/CvK,MAAOwK,MAGX,eAACe,GAAA,EAAKC,QAAN,CAAcE,OAAK,EAAnB,UACE,cAAC3C,EAAA,EAAD,CAAMvJ,KAAK,SADb,IACwBkL,UAOjB,SAASiB,GAAa3N,GACnC,IAAQd,EAAQgD,IAARhD,IACR,OAAOA,EAAI2N,QACT3N,EAAI2N,OAAOC,OACX5N,EAAI2N,OAAOC,MAAMF,YACjB1N,EAAI2N,OAAOC,MAAMC,oBAEf,cAAC,GAAD,eAAU/M,IAEV,K,cC3DA4N,GAAkB,CACtB,yDACA,0DAGF,SAAS5F,GAAMhI,GACb,IAAQd,EAAQgD,IAARhD,IACR,EAAkC8D,mBAAS,IAA3C,mBAAO6K,EAAP,KAAkBC,EAAlB,KAEAnK,qBAAU,WACR,IAAIV,EAAQ,KAgCZ,OA/Be,uCAAG,sBAAAjC,EAAA,sEACF9B,EAAI0E,MAAM4G,OAAOuD,QAAO,SAAAA,GAEpCA,EAAO7N,SAAQ,SAAA8N,GAEb,IAAQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACTjQ,EAAQgQ,EAAME,QAGdC,EAAS,UAAMH,EAAMI,QAAZ,YACbJ,EAAMK,OADO,qBAEFJ,EAAMnK,WAFJ,KAIf,IAAI6J,GAAgBW,SAASH,GAA7B,CAGA,IAAMhI,EAAS6H,EAAMvD,KAAKrJ,KACxB,SAACqJ,EAAMe,GAAP,gBAAoBxN,EAAMwN,GAAOjM,KAAjC,aAA0CkL,EAAK3G,eAGjD+J,GAAa,SAAAnH,GAAC,OAAK,CACjB8B,KAAM,OACN+F,QAAQ,GAAD,OAAKJ,EAAL,YAAkBzH,EAAEU,QAC3BoH,UAAWR,EAAM1M,KAAKmN,KAAKC,KAAK,MAAM5K,WACtC6K,QAASxI,EAAOuI,KAAK,QAJT,mBAKRhI,cAzBM,OAChB1D,EADgB,kDAAH,oDA8Bf4L,GACO,kBAAM5L,GAASA,OACrB,CAAC/D,EAAI0E,MAAM4G,SAEd,MAAgCxK,EAAxB8O,qBAAR,MAAwB,IAAxB,EAEA,OACE,eAACpD,EAAA,EAAKC,OAAN,CAAaO,MAAO,EAApB,UACE,oBAAItJ,MAAO,CAAEmM,MAAO,QAApB,oBACA,cAAC5H,EAAA,EAAD,CACEC,OAAK,EAACuC,UAAQ,EACdN,KAAK,OACL1G,MAAM,OACNqM,QAAQ,QACRvG,KAAK,QACL3F,QAAU,SAAAoH,GAAC,OAAI4D,EAAa,OAE9B,cAACmB,GAAA,EAAD,CAAMrM,MAAO,CAAEsM,MAAO,OAAQC,SAAU,OAAQC,UAAWN,GAAiBf,OAAQF,OAK3E,SAASwB,GAAQrP,GAC9B,IAAQd,EAAQgD,IAARhD,IACR,OAAOA,EAAI0E,OAAS1E,EAAI0E,MAAM4G,QAAUtL,EAAI0E,MAAM4G,OAAOuD,OAEvD,cAAC,GAAD,eAAU/N,IAER,K,wBCrEAsP,GAAgB,SAACC,GAAD,OACpBA,EAAI/P,KAAKuE,WAAWyL,WAAW,YAEjC,SAASxH,GAAMhI,GACb,MAAyBkC,IAAjBhD,EAAR,EAAQA,IAAKJ,EAAb,EAAaA,QACL0D,EAAgBxC,EAAhBwC,YACR,EAA4BQ,mBAAS,MAArC,mBAAOwB,EAAP,KAAe9B,EAAf,KAEA,EAAoCM,mBAAS,aAA7C,mBAAOyM,EAAP,KAAmBC,EAAnB,KACA,EAAoC1M,mBAAS,IAA7C,mBAAO2M,EAAP,KAAmBC,EAAnB,KACA,EAAkC5M,mBAAS,IAA3C,mBAAO6M,EAAP,KAAkBC,EAAlB,KACA,EAAsC9M,mBAAS,IAA/C,mBAAOQ,EAAP,KAAoBuM,EAApB,KAEMC,EAAgB,CACpB3M,UAAW,GACXC,SAAU,GACVC,YAAa,IAGf,EAAkCP,mBAASgN,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACQ7M,EAAqC4M,EAArC5M,UAAWC,EAA0B2M,EAA1B3M,SAAUC,EAAgB0M,EAAhB1M,YAEvB4M,EAAa,SAACjR,EAAKuQ,GACvB,MAAmB,UAAfA,EACKvQ,EAAI0E,MACa,cAAf6L,EACFvQ,EAAI8F,GACa,QAAfyK,EACFvQ,EAAIV,IAEJU,EAAI2G,QAgFflC,qBA5EyB,WACvB,GAAKzE,EAAL,CACA,IAAMkR,EAAUD,EAAWjR,EAAKuQ,GAC1BE,EAAaU,OAAOC,KAAKF,GAASG,OACrCC,QAAO,SAAAC,GAAE,OAAIJ,OAAOC,KAAKF,EAAQK,IAAKpJ,OAAS,KAC/ChG,KAAI,SAAAoP,GAAE,MAAK,CAAEtQ,IAAKsQ,EAAIzO,MAAOyO,EAAIlI,KAAMkI,MAC1Cb,EAAcD,MAsEY,CAACzQ,EAAKuQ,IAClC9L,qBApEwB,WACtB,GAAKzE,GAAqB,KAAdmE,EAAZ,CACA,IAAMwM,EAAYQ,OAAOC,KAAKH,EAAWjR,EAAKuQ,GAAYpM,IAAYkN,OACnElP,KAAI,SAAAqP,GAAC,MAAK,CAAEvQ,IAAKuQ,EAAG1O,MAAO0O,EAAGnI,KAAMmI,MACvCZ,EAAaD,MAgEY,CAAC3Q,EAAKuQ,EAAYpM,IAC7CM,qBA9D0B,WACxB,GAAKzE,GAAqB,KAAdmE,GAAiC,KAAbC,EAAhC,CAKA,IAAIE,EAAc,GAElB,GAAmB,UAAfiM,EAAwB,CAC1B,IAAMkB,EAAWzR,EAAI0E,MAAMP,GAAWC,GAAU/B,KAAK/B,KACjDmR,EAASC,UAEFD,EAASE,MAClBrN,EAAc,CAAC,CACbhC,KAAMmP,EAASG,MAAM3Q,IAAI4D,WACzBvE,KAAMmR,EAASG,MAAM3Q,IAAI4D,WACzB0D,UAAU,IAEHkJ,EAASI,cAClBvN,EAAc,CAAC,CACbhC,KAAMmP,EAASK,YAAYC,KAAKlN,WAChCvE,KAAMmR,EAASK,YAAYC,KAAKlN,WAChC0D,UAAU,GACT,CACDjG,KAAMmP,EAASK,YAAYE,KAAKnN,WAChCvE,KAAMmR,EAASK,YAAYE,KAAKnN,WAChC0D,UAAU,WAGT,GAAmB,cAAfgI,EAA4B,CACrC,IAAM0B,EAAWjS,EAAI8F,GAAG3B,GAAWC,GAAU/B,KAAK6P,KAE9CD,GAAYA,EAAS9J,OAAS,IAChC7D,EAAc2N,EAAS9P,KAAI,SAAAkO,GAAG,MAAK,CACjC/N,KAAM+N,EAAI/N,KAAKuC,WACfvE,KAAM+P,EAAI/P,KAAKuE,WACf0D,SAAU6H,GAAcC,aAGvB,GAAmB,QAAfE,EAAsB,CAC/B,IAAI4B,EAAY,GAEZvS,EAAQuE,IAAcvE,EAAQuE,GAAWC,KAC3C+N,EAAYvS,EAAQuE,GAAWC,GAAU8C,QAGvCiL,EAAUhK,OAAS,IACrB7D,EAAc6N,EAAUhQ,KAAI,SAAAkO,GAAG,MAAK,CAClC/N,KAAM+N,EAAI/N,KACVhC,KAAM+P,EAAI/P,KACViI,SAAU8H,EAAI+B,aAAc,WAGR,aAAf7B,IACTjM,EAAc,IAGhBuM,EAAevM,QAvDbuM,EAAe,MA4DU,CAAC7Q,EAAKuQ,EAAYpM,EAAWC,EAAUxE,IAEpE,IAAMyS,EAA8B,SAACrH,EAAGQ,GACtCwF,GAAa,SAAAD,GACX,IAAIuB,EACIlS,EAAiBoL,EAAjBpL,MAAO0C,EAAU0I,EAAV1I,MACf,GAAqB,kBAAV1C,EAAoB,CAE7B,IAAQgH,EAA8BhH,EAA9BgH,IAAmB9G,EAAWF,EAAzBiI,WAAc/H,KACrB+D,EAAW,YAAO0M,EAAU1M,aAClCA,EAAY+C,GAAO,CAAE9G,OAAMwC,SAC3BwP,EAAG,2BAAQvB,GAAR,IAAmB1M,qBACjB,GAAc,cAAVjE,EAAuB,CAAC,IAAD,EAChCkS,EAAG,2BAAQvB,GAAR,uBAAoB3Q,EAAQ0C,GAA5B,yBAA6C,IAA7C,4BAA8D,IAA9D,SACE,GAAc,aAAV1C,EAAsB,CAAC,IAAD,EAC/BkS,EAAG,2BAAQvB,GAAR,uBAAoB3Q,EAAQ0C,GAA5B,4BAAgD,IAAhD,IAEL,OAAOwP,MAILC,EAAqB,SAACC,EAAIhH,GAC9BgF,EAAchF,EAAK1I,OAEnBkO,EAAaF,IAGT2B,EAAiB,SAAClC,GAAD,MACN,QAAfA,EACI,qBACA,wDAEN,OACE,eAAC/D,EAAA,EAAKC,OAAN,CAAaO,MAAO,EAApB,UACE,mDACA,eAAC0F,GAAA,EAAD,WACE,eAACA,GAAA,EAAKjK,MAAN,CAAY/E,MAAO,CAAEiP,UAAW,QAAUC,QAAM,EAAhD,UACE,qDACA,cAACF,GAAA,EAAKG,MAAN,CACEtP,MAAM,YACNjB,KAAK,aACLQ,MAAM,YACNgQ,QAAwB,cAAfvC,EACTxF,SAAUwH,IAEZ,cAACG,GAAA,EAAKG,MAAN,CACEtP,MAAM,QACNjB,KAAK,aACLQ,MAAM,QACNgQ,QAAwB,UAAfvC,EACTxF,SAAUwH,IAEZ,cAACG,GAAA,EAAKG,MAAN,CACEtP,MAAM,MACNjB,KAAK,aACLQ,MAAM,MACNgQ,QAAwB,QAAfvC,EACTxF,SAAUwH,IAEZ,cAACG,GAAA,EAAKG,MAAN,CACEtP,MAAM,WACNjB,KAAK,aACLQ,MAAM,WACNgQ,QAAwB,aAAfvC,EACTxF,SAAUwH,OAGd,cAACG,GAAA,EAAKK,MAAN,UACE,cAACrI,EAAA,EAAD,CACEG,YAAY,gBACZmI,OAAK,EACLzP,MAAM,eACNwH,SAAUsH,EACVhT,QAAM,EACNsL,WAAS,EACTvK,MAAM,YACN0C,MAAOqB,EACP2G,QAAS2F,MAGb,cAACiC,GAAA,EAAKK,MAAN,UACE,cAACrI,EAAA,EAAD,CACEG,YAAY,YACZmI,OAAK,EACLzP,MAAM,WACNwH,SAAUsH,EACVhT,QAAM,EACNsL,WAAS,EACTvK,MAAM,WACN0C,MAAOsB,EACP0G,QAAS6F,MAGZrM,EAAYnC,KAAI,SAACkG,EAAYjB,GAAb,OACf,eAACsL,GAAA,EAAKK,MAAN,WACE,cAACE,GAAA,EAAD,CACEpI,YAAaxC,EAAW/H,KACxB0S,OAAK,EACL1S,KAAK,OACLiD,MAAO8E,EAAW/F,KAClBlC,MAAO,CAAEgH,MAAKiB,cACdvF,MAAQuB,EAAY+C,GAAO/C,EAAY+C,GAAKtE,MAAQ,GACpDiI,SAAUsH,IAEVhK,EAAWE,SACT,cAACoD,EAAA,EAAD,CACAzD,OAAK,EACL0D,UAAQ,EACRnI,MAAM,OACNiM,QAAY+C,EAAelC,KAE3B,OAjBN,UAAoBlI,EAAW/F,KAA/B,YAAuC+F,EAAW/H,UAqBpD,cAACoS,GAAA,EAAKK,MAAN,CAAYrP,MAAO,CAAEuJ,UAAW,UAAhC,SACE,cAACiG,GAAD,CACE5P,YAAaA,EACbE,UAAWA,EACXG,MAAO,CAAE4M,aAAYpM,YAAWC,WAAUC,cAAaC,mBAG3D,qBAAKZ,MAAO,CAAEyP,aAAc,cAA5B,SAA6C7N,UAMrD,SAAS4N,GAAkBpS,GACzB,IAAiByP,EAAiBzP,EAA1B6C,MAAS4M,WACjB,MAAmB,UAAfA,EACK,cAAClN,EAAD,aACLE,MAAQ,QACRjD,KAAO,QACPmD,MAAQ,QACJ3C,IAEkB,cAAfyP,EACF,cAAC/H,EAAD,eAAmB1H,IACF,QAAfyP,GAAuC,aAAfA,EAC1B,cAAClN,EAAD,aACLE,MAAQ,SACRjD,KAAQiQ,EACR9M,MAAQ,QACJ3C,SALD,EAUM,SAASsS,GAAYtS,GAElC,OADgBkC,IAARhD,IACG8F,GAAK,cAAC,GAAD,eAAUhF,IAAY,K,cC3QlCuS,GAAS,CACbC,UAAW,CAAC,GAAD,OACN3U,gCADM,kDAENA,gCAFM,kDAGNA,gCAHM,kDAINA,gCAJM,kDAKNA,gCALM,kDAMNA,gCANM,kDAONA,gCAPM,kDAQNA,gCARM,kDASNA,gCATM,kDAUNA,gCAVM,mDAWNA,gCAXM,mDAYNA,gCAZM,mDAaNA,gCAbM,mDAcNA,gCAdM,mDAeNA,gCAfM,mDAgBNA,gCAhBM,mDAiBNA,gCAjBM,mDAkBNA,gCAlBM,mDAmBNA,gCAnBM,mDAoBNA,gCApBM,0CAsBX4U,KAAM,CAAC,GAAD,OACD5U,gCADC,4CAEDA,gCAFC,4CAGDA,gCAHC,4CAIDA,gCAJC,4CAKDA,gCALC,4CAMDA,gCANC,4CAODA,gCAPC,4CAQDA,gCARC,4CASDA,gCATC,4CAUDA,gCAVC,6CAWDA,gCAXC,6CAYDA,gCAZC,6CAaDA,gCAbC,6CAcDA,gCAdC,6CAeDA,gCAfC,oCAiBN6U,KAAM,CAAC,GAAD,OACD7U,gCADC,4CAEDA,gCAFC,4CAGDA,gCAHC,4CAIDA,gCAJC,4CAKDA,gCALC,4CAMDA,gCANC,4CAODA,gCAPC,4CAQDA,gCARC,4CASDA,gCATC,4CAUDA,gCAVC,6CAWDA,gCAXC,6CAYDA,gCAZC,6CAaDA,gCAbC,6CAcDA,gCAdC,6CAeDA,gCAfC,oCAiBN8U,MAAO,CAAC,GAAD,OACF9U,gCADE,6CAEFA,gCAFE,6CAGFA,gCAHE,6CAIFA,gCAJE,6CAKFA,gCALE,6CAMFA,gCANE,6CAOFA,gCAPE,6CAQFA,gCARE,6CASFA,gCATE,6CAUFA,gCAVE,qCAYP+U,IAAK,CAAC,GAAD,OACA/U,gCADA,2CAEAA,gCAFA,2CAGAA,gCAHA,2CAIAA,gCAJA,2CAKAA,gCALA,2CAMAA,gCANA,2CAOAA,gCAPA,2CAQAA,gCARA,2CASAA,gCATA,2CAUAA,gCAVA,oCA2CQgV,GAjBK,SAAA7S,GAClB,IACM8S,EAAa,CAAEC,OAAQ,QAASzJ,SAAU,WAAY0J,IAAK,KAAMC,KAAM,OACrEC,EAAQlT,EAARkT,IAER,IAAKA,EAAK,OAAO,KAEjB,IAAMC,EAnBgB,SAAAD,GACtB,IAAME,EAAY,SAAC3H,EAAOjM,GAAR,OAAiB+S,GAAO/S,GAAM0T,EAAIzH,GAAS8G,GAAO/S,GAAM6H,SAE1E,MAAO,CACLoL,KAAMW,EAAU,EAAG,QACnBV,KAAMU,EAAU,EAAG,QACnBZ,UAAWY,EAAU,EAAG,aACxBR,IAAKQ,EAAU,EAAG,OAClBT,MAAOS,EAAU,EAAG,UAWVC,CAAgBH,GAC5B,OAAO,sBAAKtQ,MAPO,CAAEmQ,OAAQ,QAASzJ,SAAU,WAAY4C,MAAO,OAO5D,UACL,qBAAKoH,IAAI,OAAOlK,IAAK+J,EAAIV,KAAM7P,MAAOkQ,IACtC,qBAAKQ,IAAI,MAAMlK,IAAK+J,EAAIP,IAAKhQ,MAAOkQ,IACpC,qBAAKQ,IAAI,QAAQlK,IAAK+J,EAAIR,MAAO/P,MAAOkQ,IACxC,qBAAKQ,IAAI,OAAOlK,IAAK+J,EAAIT,KAAM9P,MAAOkQ,IACtC,qBAAKQ,IAAI,YAAYlK,IAAK+J,EAAIX,UAAW5P,MAAOkQ,QCtG9CS,GAAgB,SAAAvT,GACpB,IAImBG,EAJXqT,EAAkCxT,EAAlCwT,MAAOhR,EAA2BxC,EAA3BwC,YAAaE,EAAc1C,EAAd0C,UAC5B,EAAwB7C,IAAMmD,UAAS,GAAvC,mBAAOyQ,EAAP,KAAaC,EAAb,KACA,EAAkC7T,IAAMmD,SAAS,IAAjD,mBAAO2Q,EAAP,KAAkBC,EAAlB,KAWA,OAAO,eAACC,GAAA,EAAD,CAAOC,QAAS,kBAAMJ,GAAQ,IAAQK,OAAQ,kBAAML,GAAQ,IAAOD,KAAMA,EAC9EO,QAAS,cAAC7M,EAAA,EAAD,CAAQC,OAAK,EAACzE,MAAM,OAApB,0BADJ,UAEL,cAACkR,GAAA,EAAMI,OAAP,uCACA,cAACJ,GAAA,EAAMrG,QAAP,UAAe,eAACoE,GAAA,EAAD,WACb,cAACA,GAAA,EAAKO,MAAN,CAAYD,OAAK,EAACzP,MAAM,kBAAQyR,UAAQ,EAAClS,MAAOwR,EAAMpG,KACtD,cAACwE,GAAA,EAAKO,MAAN,CAAYD,OAAK,EAACzP,MAAM,2BAAOsH,YAAY,2BAAOE,UAdnC9J,EAcwD,SAdjD,SAACuR,EAAIxK,GAC7B0M,EAAa,2BAAKD,GAAN,kBAAkBxT,EAAM+G,EAAGlF,kBAevC,eAAC6R,GAAA,EAAMM,QAAP,WACE,cAAChN,EAAA,EAAD,CAAQC,OAAK,EAACzE,MAAM,OAAOG,QAAS,kBAAM4Q,GAAQ,IAAlD,0BACA,cAACnR,EAAD,CACEC,YAAaA,EAAaC,MAAM,2BAAOjD,KAAK,YAAYkD,UAAWA,EACnEI,QAhBkB,SAACG,GACvBA,IACAyQ,GAAQ,IAeJ7Q,MAAO,CACLQ,UAAW,gBACXC,SAAU,WACVC,YAAa,CAACoQ,EAAUnK,OAAQgK,EAAMpG,IACtC5J,YAAa,EAAC,GAAM,aASxB4Q,GAAY,SAAApU,GAChB,IAAQwT,EAAkCxT,EAAlCwT,MAAOhR,EAA2BxC,EAA3BwC,YAAaE,EAAc1C,EAAd0C,UAC5B,EAAgD8Q,EAAxCpG,UAAR,MAAa,KAAb,IAAgDoG,EAA7BN,WAAnB,MAAyB,KAAzB,IAAgDM,EAAjBa,aAA/B,MAAuC,KAAvC,EACMC,EAAapB,GAAOA,EAAIvE,KAAK,MAC7B4F,EAAmB,OAAPnH,EAAc,GAAMA,EAAK,GAAL,WAAcA,GAAOA,EAAGrJ,WACxDyQ,EAAShS,EAAYlB,UAAYkS,EAAMa,MAE7C,OAAO,eAAC9G,GAAA,EAAD,WACHiH,GAAU,cAAC3J,EAAA,EAAD,CAAO4J,GAAG,IAAIC,UAAQ,EAAC/R,MAAM,OAA7B,0BACZ,cAAC,GAAD,CAAauQ,IAAKA,IAClB,eAAC3F,GAAA,EAAKC,QAAN,WACE,eAACD,GAAA,EAAK0G,OAAN,yBAAoBM,KACpB,eAAChH,GAAA,EAAKoH,KAAN,CAAW/R,MAAO,CAAEyP,aAAc,cAAlC,2BACM,uBACHiC,KAEH,cAAC/G,GAAA,EAAKqH,YAAN,UACE,oBAAGhS,MAAO,CAAEyP,aAAc,cAA1B,0BACK,uBACFgC,UAIP,cAAC9G,GAAA,EAAKC,QAAN,CAAcE,OAAK,EAAC9K,MAAO,CAAEuJ,UAAW,UAAxC,SAAsDkI,IAAU7R,EAAYlB,QACxE,cAAC,GAAD,CAAekS,MAAOA,EAAOhR,YAAaA,EAAaE,UAAWA,IAClE,SAuBOmS,GAlBI,SAAA7U,GACjB,IAAQ8U,EAAoC9U,EAApC8U,QAAStS,EAA2BxC,EAA3BwC,YAAaE,EAAc1C,EAAd0C,UAE9B,OAAuB,IAAnBoS,EAAQzN,OACH,cAAC0N,EAAA,EAAD,CAASC,MAAI,EAAb,SACL,eAACD,EAAA,EAAQd,OAAT,wHACE,sBAAMgB,KAAK,MAAM,aAAW,aAA5B,+BAKC,cAACvJ,EAAA,EAAD,CAAMwJ,QAAS,EAAf,SAAmBJ,EAAQzT,KAAI,SAACmS,EAAO2B,GAAR,OACpC,cAACzJ,EAAA,EAAKC,OAAN,UACE,cAAC,GAAD,CAAW6H,MAAOA,EAAOhR,YAAaA,EAAaE,UAAWA,KADhE,gBAA2ByS,UCjFhB,SAASC,GAASpV,GAC/B,MAAyBkC,IAAjBhD,EAAR,EAAQA,IAAKF,EAAb,EAAaA,QACLwD,EAAgBxC,EAAhBwC,YAER,EAA8BQ,mBAAS,IAAvC,mBAAO8R,EAAP,KAAgBO,EAAhB,KACA,EAA4BrS,mBAAS,IAArC,mBAAOwB,EAAP,KAAe9B,EAAf,KA2BA,OAHAiB,qBAtBqB,cAsBG,CAACzE,EAAKF,IAC9B2E,qBAfwB,WAWtB0R,EADgB,MAKS,IAEpB,eAAC3J,EAAA,EAAKC,OAAN,CAAaO,MAAO,GAApB,UACL,oDACA,cAAC,GAAD,CAAY4I,QAASA,EAAStS,YAAaA,EAAaE,UAAWA,IACnE,cAACkP,GAAA,EAAD,CAAMhP,MAAO,CAAE0S,OAAQ,SAAvB,SACE,cAAC1D,GAAA,EAAKK,MAAN,CAAYrP,MAAO,CAAEuJ,UAAW,UAAhC,SACE,cAAC5J,EAAD,CACEC,YAAaA,EAAaC,MAAM,iCAAQjD,KAAK,YAAYkD,UAAWA,EACpEG,MAAO,CACLQ,UAAW,gBACXC,SAAU,SACVC,YAAa,GACbC,YAAa,UAKrB,qBAAKZ,MAAO,CAAEyP,aAAc,cAA5B,SAA6C7N,OCnDjD,SAASwD,GAAMhI,GACb,IAAQd,EAAQgD,IAARhD,IACR,EAAgC8D,mBAAS,CAAE0H,KAAM,KAAM6K,QAAS,OAAhE,mBAAOC,EAAP,KAAiBC,EAAjB,KAcA,OAZA9R,qBAAU,YACS,uCAAG,4BAAA3C,EAAA,+EAEG9B,EAAIV,IAAIc,MAAMoW,cAFjB,OAEVhL,EAFU,OAGhB+K,EAAY,CAAE/K,OAAM6K,QAAS7K,EAAK6K,UAHlB,gDAKhB7W,QAAQmD,MAAR,MALgB,yDAAH,qDAQjB6T,KACC,CAACxW,EAAIV,IAAIc,QAGV,cAACoM,EAAA,EAAKC,OAAN,UACE,eAAC4B,GAAA,EAAD,WACE,eAACA,GAAA,EAAKC,QAAN,WACE,cAACD,GAAA,EAAK0G,OAAN,uBACA,cAAC1G,GAAA,EAAKoH,KAAN,UACE,qCAAQa,EAASD,gBAGrB,cAAChI,GAAA,EAAKC,QAAN,CAAcE,OAAK,EAAnB,SACE,eAACmG,GAAA,EAAD,CAAOG,QAAS,cAAC7M,EAAA,EAAD,4BAAhB,UACE,cAAC0M,GAAA,EAAMI,OAAP,+BACA,cAACJ,GAAA,EAAMrG,QAAP,CAAemI,WAAS,EAAxB,SACE,cAAC9B,GAAA,EAAMe,YAAP,UACE,8BACE,+BAAOgB,KAAKC,UAAUL,EAAS9K,KAAM,KAAM,qBAW9C,SAASoL,GAAU9V,GAChC,IAAQd,EAAQgD,IAARhD,IACR,OAAOA,EAAIV,KAAOU,EAAIV,IAAIc,OAASJ,EAAIV,IAAIc,MAAMoW,YAE/C,cAAC,GAAD,eAAU1V,IAER,KChDN,SAASgI,GAAMhI,GACb,IAAQd,EAAQgD,IAARhD,IACR,EAAgC8D,mBAAS,IAAzC,mBAAO+S,EAAP,KAAiBC,EAAjB,KAkBA,OAhBArS,qBAAU,YACK,uCAAG,oCAAA3C,EAAA,+EAEiCiV,QAAQC,IAAI,CACvDhX,EAAIV,IAAIgM,OAAOsC,QACf5N,EAAIV,IAAIgM,OAAOhJ,OACftC,EAAIV,IAAIgM,OAAO+K,YALL,mCAELzI,EAFK,KAEEqJ,EAFF,KAEYC,EAFZ,KAOZJ,EAAY,CAAElJ,QAAOqJ,WAAUC,gBAPnB,kDASZ1X,QAAQmD,MAAR,MATY,0DAAH,qDAYbwU,KACC,CAACnX,EAAIV,IAAIgM,SAGV,cAACkB,EAAA,EAAKC,OAAN,UACE,eAAC4B,GAAA,EAAD,WACE,eAACA,GAAA,EAAKC,QAAN,WACE,cAACD,GAAA,EAAK0G,OAAN,UAAc8B,EAASI,WACvB,cAAC5I,GAAA,EAAKoH,KAAN,UACE,+BAAOoB,EAASjJ,UAElB,eAACS,GAAA,EAAKqH,YAAN,6BACkB,IAChB,mBAAGlL,KAAK,0EAAR,gDAKJ,eAAC6D,GAAA,EAAKC,QAAN,CAAcE,OAAK,EAAnB,UACE,cAAC3C,EAAA,EAAD,CAAMvJ,KAAK,YADb,IAC2BuU,EAASK,oBAO7B,SAASE,GAAUtW,GAChC,IAAQd,EAAQgD,IAARhD,IACR,OAAOA,EAAIV,KACTU,EAAIV,IAAIgM,QACRtL,EAAIV,IAAIgM,OAAOsC,OACf5N,EAAIV,IAAIgM,OAAOhJ,MACftC,EAAIV,IAAIgM,OAAO+K,QAEb,cAAC,GAAD,eAAUvV,IAEV,KCpDN,SAASgI,GAAMhI,GACb,IAAQd,EAAQgD,IAARhD,IACAsD,EAAgBxC,EAAhBwC,YAGR,EAA4BQ,mBAAS,IAArC,mBAAOwB,EAAP,KAAe9B,EAAf,KAGA,EAAwCM,mBAAS,GAAjD,mBAAOuT,EAAP,KAAqBC,EAArB,KACA,EAAkCxT,mBAAS,GAA3C,mBAAO2Q,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAjQ,qBAAU,WACR,IAAI4G,EAeJ,OAdArL,EAAI0E,MAAM6S,eAAeC,WAAU,SAAAC,GAI7BA,EAASjR,OACX8Q,EAAgB,UAEhBA,EAAgBG,EAASC,SAAS3J,eAEnCrM,MAAK,SAAAqC,GACNsH,EAActH,KAEbiC,MAAMxG,QAAQmD,OAEV,kBAAM0I,GAAeA,OAC3B,CAACrL,EAAI0E,MAAM6S,iBAGZ,eAAC/K,EAAA,EAAKC,OAAN,CAAaO,MAAO,EAApB,UACE,iDACA,cAACqB,GAAA,EAAD,CAAMsJ,UAAQ,EAAd,SACE,cAACtJ,GAAA,EAAKC,QAAN,CAAcrB,UAAU,SAAxB,SACE,cAACsB,GAAA,EAAD,CACEhL,MAAM,gBACNT,MAAOuU,QAIb,eAAC3E,GAAA,EAAD,WACE,cAACA,GAAA,EAAKK,MAAN,UACE,cAACE,GAAA,EAAD,CACE1P,MAAM,YACNnD,MAAM,WACNE,KAAK,SACLyK,SAAU,SAACC,EAAD,OAAMlI,EAAN,EAAMA,MAAN,OAAkB4R,EAAa5R,QAG7C,cAAC4P,GAAA,EAAKK,MAAN,CAAYrP,MAAO,CAAEuJ,UAAW,UAAhC,SACE,cAAC5J,EAAD,CACEC,YAAaA,EACbC,MAAM,kBACNjD,KAAK,YACLkD,UAAWA,EACXG,MAAO,CACLQ,UAAW,iBACXC,SAAU,cACVC,YAAa,CAACoQ,GACdnQ,YAAa,EAAC,QAIpB,qBAAKZ,MAAO,CAAEyP,aAAc,cAA5B,SAA6C7N,UAMtC,SAASsS,GAAgB9W,GACtC,IAAQd,EAAQgD,IAARhD,IACR,OAAQA,EAAI0E,MAAM6S,gBAAkBvX,EAAI0E,MAAM6S,eAAeC,UACzD,cAAC,GAAD,eAAU1W,IACV,KC5ES,SAASgI,GAAMhI,GAC5B,MAA4BgD,mBAAS,MAArC,mBAAOwB,EAAP,KAAe9B,EAAf,KACA,EAAkCM,mBAAS,CAAE+T,UAAW,KAAMC,OAAQ,IAAtE,mBAAO/G,EAAP,KAAkBC,EAAlB,KACQ1N,EAAgBxC,EAAhBwC,YAEFyH,EAAW,SAACC,EAAGQ,GAAJ,OACfwF,GAAa,SAAA+G,GAAI,kCAAUA,GAAV,kBAAiBvM,EAAKpL,MAAQoL,EAAK1I,YAE9C+U,EAAsB9G,EAAtB8G,UAAWC,EAAW/G,EAAX+G,OAEnB,OACE,eAACtL,EAAA,EAAKC,OAAN,CAAaO,MAAO,EAApB,UACE,0CACA,eAAC0F,GAAA,EAAD,WACE,cAACA,GAAA,EAAKK,MAAN,UACE,eAACpH,EAAA,EAAD,CAAOzD,OAAK,EAACzE,MAAM,OAAnB,UACE,cAACoI,EAAA,EAAD,CAAMvJ,KAAK,qBADb,8BAKF,cAACoQ,GAAA,EAAKK,MAAN,mFACA,cAACL,GAAA,EAAKK,MAAN,UACE,cAACE,GAAA,EAAD,CACED,OAAK,EACLzP,MAAM,KACNjD,KAAK,OACLuK,YAAY,UACZzK,MAAM,YACN2K,SAAUA,MAGd,cAAC2H,GAAA,EAAKK,MAAN,UACE,cAACE,GAAA,EAAD,CACED,OAAK,EACLzP,MAAM,SACNjD,KAAK,SACLF,MAAM,SACN2K,SAAUA,MAGd,cAAC2H,GAAA,EAAKK,MAAN,CAAYrP,MAAO,CAAEuJ,UAAW,UAAhC,SACE,cAAC5J,EAAD,CACEC,YAAaA,EACbC,MAAM,SACNjD,KAAK,YACLkD,UAAWA,EACXG,MAAO,CACLQ,UAAW,WACXC,SAAU,WACVC,YAAa,CAACwT,EAAWC,GACzBxT,YAAa,EAAC,GAAM,QAI1B,qBAAKZ,MAAO,CAAEyP,aAAc,cAA5B,SAA6C7N,UCtDtC,SAASwD,GAAMhI,GAC5B,MAA4BgD,mBAAS,IAArC,mBAAOwB,EAAP,KAAe9B,EAAf,KACA,EAAgCM,mBAAS,IAAzC,mBAAOkU,EAAP,KAAiBC,EAAjB,KACQ3U,EAAgBxC,EAAhBwC,YAQF4U,EAAmB,SAAAC,GACvB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,UAAY,SAAA7Q,GACrB,IATgB8Q,EASV7I,GATU6I,EASYH,EAAW7R,OARlCiS,MAAMC,KAAK,IAAIC,WAAWH,IAC9BpW,KAAI,SAAAwW,GAAC,OAAIA,EAAE9T,SAAS,IAAI+T,SAAS,EAAG,QACpCnJ,KAAK,KAONwI,EAAY,KAAD,OAAMvI,KAGnB0I,EAAWS,kBAAkBV,IAG/B,OACE,eAAC3L,EAAA,EAAKC,OAAN,CAAaO,MAAO,EAApB,UACE,iDACA,eAAC0F,GAAA,EAAD,WACE,cAACA,GAAA,EAAKK,MAAN,UACE,cAACE,GAAA,EAAD,CACE3S,KAAK,OACL4N,GAAG,OACH3K,MAAM,YACNuV,OAAO,QACP/N,SAAU,SAAAtD,GAAC,OAAIyQ,EAAiBzQ,EAAE6C,OAAOyO,MAAM,SAGnD,cAACrG,GAAA,EAAKK,MAAN,CAAYrP,MAAO,CAAEuJ,UAAW,UAAhC,SACE,cAAC5J,EAAD,CACEC,YAAaA,EACbC,MAAM,UACNjD,KAAK,oBACLkD,UAAWA,EACXG,MAAO,CACLQ,UAAW,SACXC,SAAU,UACVC,YAAa,CAAC2T,GACd1T,YAAa,EAAC,QAIpB,qBAAKZ,MAAO,CAAEyP,aAAc,cAA5B,SAA6C7N,UCjCrD,SAASwD,KACP,IAYgBnH,EAZhB,EAA4CmC,mBAAS,MAArD,mBAAOkV,EAAP,KAAuBjQ,EAAvB,KACA,EAAsD/F,IAA9C9C,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,aAAcE,EAAzC,EAAyCA,SACnCqD,EACJ0V,GACiB,UAAjBjZ,GACAD,EAAQmZ,QAAQD,GAEZE,EAAS,SAAA7P,GAAI,OACjB,cAAC8P,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,CAAQlP,KAAK,QAAb,SAAsBd,OAa1B,GAAiB,UAAbnJ,EAAsB,OAVVyB,EAUyB1B,EATvC,cAACuM,EAAA,EAAD,CAAMmL,UAAQ,EAAC3B,QAAS,EAAGsD,QAAM,EAAjC,SACE,cAAC9M,EAAA,EAAKC,OAAN,UACE,cAACoJ,EAAA,EAAD,CAAS0D,UAAQ,EAACnM,SAAO,EAACoI,UAAQ,EAChCgE,OAAO,gCACP9J,QAAO,UAAKgH,KAAKC,UAAUhV,EAAK,KAAM,UAMzC,GAAiB,UAAbzB,EAAsB,OAAOgZ,EAAO,2BAE7C,GAAqB,UAAjBnZ,EACF,OAAOmZ,EAAO,kEAGhB,IAAMO,EAAaC,sBAEnB,OACE,sBAAKC,IAAKF,EAAV,UACE,cAACG,EAAA,EAAD,CAAQC,QAASJ,EAAjB,SACE,cAAC3N,EAAD,CAAiB/C,kBAAmBA,MAEtC,cAACiB,EAAA,EAAD,UACE,eAACwC,EAAA,EAAD,CAAMsN,WAAS,EAAC9D,QAAQ,QAAxB,UACE,eAACxJ,EAAA,EAAKM,IAAN,CAAUiN,WAAS,EAAnB,UACE,cAAC3C,GAAD,IACA,cAACR,GAAD,IACA,cAACnI,GAAD,IACA,cAACA,GAAD,CAAapB,WAAS,OAExB,cAACb,EAAA,EAAKM,IAAN,CAAUiN,WAAS,EAAnB,SACE,cAAC,GAAD,MAEF,eAACvN,EAAA,EAAKM,IAAN,WACE,cAAC,GAAD,CAAUxJ,YAAaA,IACvB,cAAC,GAAD,CAASA,YAAaA,OAExB,eAACkJ,EAAA,EAAKM,IAAN,WACE,cAACsG,GAAD,CAAY9P,YAAaA,IACzB,cAAC6M,GAAD,OAEF,cAAC3D,EAAA,EAAKM,IAAN,UACE,cAAC8K,GAAD,CAAgBtU,YAAaA,MAE/B,cAACkJ,EAAA,EAAKM,IAAN,UACE,cAACoJ,GAAD,CAAS5S,YAAaA,WAI5B,cAACqF,EAAD,OAKS,SAASqR,KACtB,OACE,cAAC,EAAD,UACE,cAAC,GAAD,MCtFNC,IAASC,OAAO,cAACF,GAAD,IACdG,SAASC,eAAe,W","file":"static/js/main.f647c189.chunk.js","sourcesContent":["import configCommon from './common.json'\nimport types from './types.json'\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`)\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n]\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n]\n  return mem\n}, {})\n\nconst config = { ...configCommon, ...configEnv, ...envVars, types }\nexport default config\n","import React, { useReducer, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc'\nimport queryString from 'query-string'\n\nimport { ApiPromise, WsProvider } from '@polkadot/api'\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp'\nimport keyring from '@polkadot/ui-keyring'\n\nimport config from '../config'\n\nconst parsedQuery = queryString.parse(window.location.search)\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET\nconsole.log(`Connected socket: ${connectedSocket}`)\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.types,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n}\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' }\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' }\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' }\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload }\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' }\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' }\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' }\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`)\n  }\n}\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state\n  // We only want this function to be performed once\n  if (apiState) return\n\n  dispatch({ type: 'CONNECT_INIT' })\n\n  const provider = new WsProvider(socket)\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc })\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api })\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }))\n  })\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }))\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }))\n}\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' })\n    try {\n      await web3Enable(config.APP_NAME)\n      let allAccounts = await web3Accounts()\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }))\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts)\n      dispatch({ type: 'SET_KEYRING', payload: keyring })\n    } catch (e) {\n      console.error(e)\n      dispatch({ type: 'KEYRING_ERROR' })\n    }\n  }\n\n  const { keyringState } = state\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring })\n\n  // This is the heavy duty work\n  loadAccts = true\n  asyncLoadAccounts()\n}\n\nconst SubstrateContext = React.createContext()\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE }\n  const neededPropNames = ['socket', 'types']\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key])\n  })\n\n  const [state, dispatch] = useReducer(reducer, initState)\n  connect(state, dispatch)\n  loadAccounts(state, dispatch)\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>\n}\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n}\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) })\n\nexport { SubstrateContextProvider, useSubstrate }\n","const utils = {\n  paramConversion: {\n    num: [\n      'Compact<Balance>',\n      'BalanceOf',\n      'u8', 'u16', 'u32', 'u64', 'u128',\n      'i8', 'i16', 'i32', 'i64', 'i128'\n    ]\n  }\n}\n\nexport default utils\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\nimport { web3FromSource } from '@polkadot/extension-dapp'\n\nimport { useSubstrate } from '../'\nimport utils from '../utils'\n\nfunction TxButton ({\n  accountPair = null,\n  label,\n  setStatus,\n  color = 'blue',\n  style = null,\n  type = 'QUERY',\n  attrs = null,\n  onClick = null,\n  disabled = false\n}) {\n  // Hooks\n  const { api } = useSubstrate()\n  const [unsub, setUnsub] = useState(null)\n  const [sudoKey, setSudoKey] = useState(null)\n\n  const { palletRpc, callable, inputParams, paramFields } = attrs\n\n  const isQuery = () => type === 'QUERY'\n  const isSudo = () => type === 'SUDO-TX'\n  const isUncheckedSudo = () => type === 'UNCHECKED-SUDO-TX'\n  const isUnsigned = () => type === 'UNSIGNED-TX'\n  const isSigned = () => type === 'SIGNED-TX'\n  const isRpc = () => type === 'RPC'\n  const isConstant = () => type === 'CONSTANT'\n\n  const loadSudoKey = () => {\n    (async function () {\n      if (!api || !api.query.sudo) { return }\n      const sudoKey = await api.query.sudo.key()\n      sudoKey.isEmpty ? setSudoKey(null) : setSudoKey(sudoKey.toString())\n    })()\n  }\n\n  useEffect(loadSudoKey, [api])\n\n  const getFromAcct = async () => {\n    const {\n      address,\n      meta: { source, isInjected }\n    } = accountPair\n    let fromAcct\n\n    // signer is from Polkadot-js browser extension\n    if (isInjected) {\n      const injected = await web3FromSource(source)\n      fromAcct = address\n      api.setSigner(injected.signer)\n    } else {\n      fromAcct = accountPair\n    }\n\n    return fromAcct\n  }\n\n  const txResHandler = ({ status }) =>\n    status.isFinalized\n      ? setStatus(`😉 Finalized. Block hash: ${status.asFinalized.toString()}`)\n      : setStatus(`Current transaction status: ${status.type}`)\n\n  const txErrHandler = err =>\n    setStatus(`😞 Transaction Failed: ${err.toString()}`)\n\n  const sudoTx = async () => {\n    const fromAcct = await getFromAcct()\n    const transformed = transformParams(paramFields, inputParams)\n    const txExecute = transformed\n      ? api.tx.sudo.sudo(api.tx[palletRpc][callable](...transformed))\n      : api.tx.sudo.sudo(api.tx[palletRpc][callable]())\n\n    const unsub = txExecute.signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler)\n    // note: you cannot store a function directly in React state hook. You need to wrap it in\n    //   anonymous function. See: https://bit.ly/30hbINF\n    setUnsub(() => unsub)\n  }\n\n  const uncheckedSudoTx = async () => {\n    const fromAcct = await getFromAcct()\n    const txExecute =\n      api.tx.sudo.sudoUncheckedWeight(api.tx[palletRpc][callable](...inputParams), 0)\n\n    const unsub = txExecute.signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler)\n    setUnsub(() => unsub)\n  }\n\n  const signedTx = async () => {\n    const fromAcct = await getFromAcct()\n    const transformed = transformParams(paramFields, inputParams)\n\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]()\n\n    const unsub = await txExecute.signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler)\n    setUnsub(() => unsub)\n  }\n\n  const unsignedTx = async () => {\n    const transformed = transformParams(paramFields, inputParams)\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]()\n\n    const unsub = await txExecute.send(txResHandler)\n      .catch(txErrHandler)\n    setUnsub(() => unsub)\n  }\n\n  const queryResHandler = result =>\n    result.isNone ? setStatus('None') : setStatus(result.toString())\n\n  const query = async () => {\n    const transformed = transformParams(paramFields, inputParams)\n    const unsub = await api.query[palletRpc][callable](...transformed, queryResHandler)\n    setUnsub(() => unsub)\n  }\n\n  const rpc = async () => {\n    const transformed = transformParams(paramFields, inputParams, { emptyAsNull: false })\n    const unsub = await api.rpc[palletRpc][callable](...transformed, queryResHandler)\n    setUnsub(() => unsub)\n  }\n\n  const constant = () => {\n    const result = api.consts[palletRpc][callable]\n    result.isNone ? setStatus('None') : setStatus(result.toString())\n  }\n\n  const transaction = async () => {\n    if (unsub) {\n      unsub()\n      setUnsub(null)\n    }\n\n    setStatus('Sending...');\n\n    (isSudo() && sudoTx()) ||\n    (isUncheckedSudo() && uncheckedSudoTx()) ||\n    (isSigned() && signedTx()) ||\n    (isUnsigned() && unsignedTx()) ||\n    (isQuery() && query()) ||\n    (isRpc() && rpc()) ||\n    (isConstant() && constant())\n  }\n\n  // notes: If onClick handler is passed in, we want to call it. But we want call the handler\n  //   only when the unsubscription handler (unsub) is ready, so we can pass the unsub handler to\n  //   the onClick handler for processing. Thus we use a `useEffect` here.\n  useEffect(() => {\n    if (unsub && onClick) {\n      onClick(unsub)\n      setUnsub(null)\n    }\n  }, [unsub, onClick])\n\n  const transformParams = (paramFields, inputParams, opts = { emptyAsNull: true }) => {\n    // if `opts.emptyAsNull` is true, empty param value will be added to res as `null`.\n    //   Otherwise, it will not be added\n    const paramVal = inputParams.map(inputParam => {\n      // To cater the js quirk that `null` is a type of `object`.\n      if (typeof inputParam === 'object' && inputParam !== null && typeof inputParam.value === 'string') {\n        return inputParam.value.trim()\n      } else if (typeof inputParam === 'string') {\n        return inputParam.trim()\n      }\n      return inputParam\n    })\n    const params = paramFields.map((field, ind) =>\n      ({ ...field, value: typeof paramVal[ind] === 'undefined' ? null : paramVal[ind] }))\n\n    return params.reduce((memo, { type = 'string', value }) => {\n      if (value == null || value === '') return (opts.emptyAsNull ? [...memo, null] : memo)\n\n      let converted = value\n\n      // Deal with a vector\n      if (type.indexOf('Vec<') >= 0) {\n        converted = converted.split(',').map(e => e.trim())\n        converted = converted.map(single => isNumType(type)\n          ? (single.indexOf('.') >= 0 ? Number.parseFloat(single) : Number.parseInt(single))\n          : single\n        )\n        return [...memo, converted]\n      }\n\n      // Deal with a single value\n      if (isNumType(type)) {\n        converted = converted.indexOf('.') >= 0 ? Number.parseFloat(converted) : Number.parseInt(converted)\n      }\n      return [...memo, converted]\n    }, [])\n  }\n\n  const isNumType = type =>\n    utils.paramConversion.num.some(el => type.indexOf(el) >= 0)\n\n  const allParamsFilled = () => {\n    if (paramFields.length === 0) { return true }\n\n    return paramFields.every((paramField, ind) => {\n      const param = inputParams[ind]\n      if (paramField.optional) { return true }\n      if (param == null) { return false }\n\n      const value = typeof param === 'object' ? param.value : param\n      return value !== null && value !== ''\n    })\n  }\n\n  const isSudoer = acctPair => {\n    if (!sudoKey || !acctPair) { return false }\n    return acctPair.address === sudoKey\n  }\n\n  return (\n    <Button\n      basic\n      color={color}\n      style={style}\n      type='submit'\n      onClick={transaction}\n      disabled={ disabled || !palletRpc || !callable || !allParamsFilled() ||\n        ((isSudo() || isUncheckedSudo()) && !isSudoer(accountPair)) }\n    >\n      {label}\n    </Button>\n  )\n}\n\n// prop type checking\nTxButton.propTypes = {\n  accountPair: PropTypes.object,\n  setStatus: PropTypes.func.isRequired,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf([\n    'QUERY', 'RPC', 'SIGNED-TX', 'UNSIGNED-TX', 'SUDO-TX', 'UNCHECKED-SUDO-TX',\n    'CONSTANT']).isRequired,\n  attrs: PropTypes.shape({\n    palletRpc: PropTypes.string,\n    callable: PropTypes.string,\n    inputParams: PropTypes.array,\n    paramFields: PropTypes.array\n  }).isRequired\n}\n\nfunction TxGroupButton (props) {\n  return (\n    <Button.Group>\n      <TxButton\n        label='Unsigned'\n        type='UNSIGNED-TX'\n        color='grey'\n        {...props}\n      />\n      <Button.Or />\n      <TxButton\n        label='Signed'\n        type='SIGNED-TX'\n        color='blue'\n        {...props}\n      />\n      <Button.Or />\n      <TxButton\n        label='SUDO'\n        type='SUDO-TX'\n        color='red'\n        {...props}\n      />\n    </Button.Group>\n  )\n}\n\nexport { TxButton, TxGroupButton }\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../'\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate()\n  if (apiState === 'READY') { window.api = api }\n  if (keyringState === 'READY') { window.keyring = keyring }\n  window.util = require('@polkadot/util')\n  window.utilCrypto = require('@polkadot/util-crypto')\n\n  return null\n}\n","import React, { useState, useEffect } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport {\n  Menu,\n  Button,\n  Dropdown,\n  Container,\n  Icon,\n  Image,\n  Label\n} from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { keyring } = useSubstrate()\n  const { setAccountAddress } = props\n  const [accountSelected, setAccountSelected] = useState('')\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }))\n\n  const initialAddress =\n    keyringOptions.length > 0 ? keyringOptions[0].value : ''\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountAddress(initialAddress)\n    setAccountSelected(initialAddress)\n  }, [setAccountAddress, initialAddress])\n\n  const onChange = address => {\n    // Update state with new account address\n    setAccountAddress(address)\n    setAccountSelected(address)\n  }\n\n  return (\n    <Menu\n      attached='top'\n      tabular\n      style={{\n        backgroundColor: '#fff',\n        borderColor: '#fff',\n        paddingTop: '1em',\n        paddingBottom: '1em'\n      }}\n    >\n      <Container>\n        <Menu.Menu>\n          <Image src={`${process.env.PUBLIC_URL}/assets/substrate-logo.png`} size='mini' />\n        </Menu.Menu>\n        <Menu.Menu position='right' style={{ alignItems: 'center' }}>\n          { !accountSelected\n            ? <span>\n              Add your account with the{' '}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href='https://github.com/polkadot-js/extension'\n              >\n                Polkadot JS Extension\n              </a>\n            </span>\n            : null }\n          <CopyToClipboard text={accountSelected}>\n            <Button\n              basic\n              circular\n              size='large'\n              icon='user'\n              color={accountSelected ? 'green' : 'red'}\n            />\n          </CopyToClipboard>\n          <Dropdown\n            search\n            selection\n            clearable\n            placeholder='Select an account'\n            options={keyringOptions}\n            onChange={(_, dropdown) => {\n              onChange(dropdown.value)\n            }}\n            value={accountSelected}\n          />\n          <BalanceAnnotation accountSelected={accountSelected} />\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  )\n}\n\nfunction BalanceAnnotation (props) {\n  const { accountSelected } = props\n  const { api } = useSubstrate()\n  const [accountBalance, setAccountBalance] = useState(0)\n\n  // When account address changes, update subscriptions\n  useEffect(() => {\n    let unsubscribe\n\n    // If the user has selected an address, create a new subscription\n    accountSelected &&\n      api.query.system.account(accountSelected, balance => {\n        setAccountBalance(balance.data.free.toHuman())\n      })\n        .then(unsub => {\n          unsubscribe = unsub\n        })\n        .catch(console.error)\n\n    return () => unsubscribe && unsubscribe()\n  }, [api, accountSelected])\n\n  return accountSelected\n    ? (\n    <Label pointing='left'>\n      <Icon name='money' color='green' />\n      {accountBalance}\n    </Label>\n      )\n    : null\n}\n\nexport default function AccountSelector (props) {\n  const { api, keyring } = useSubstrate()\n  return keyring.getPairs && api.query ? <Main {...props} /> : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Table, Grid, Button } from 'semantic-ui-react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { useSubstrate } from './substrate-lib'\n\nexport default function Main (props) {\n  const { api, keyring } = useSubstrate()\n  const accounts = keyring.getPairs()\n  const [balances, setBalances] = useState({})\n\n  useEffect(() => {\n    const addresses = keyring.getPairs().map(account => account.address)\n    let unsubscribeAll = null\n\n    api.query.system.account\n      .multi(addresses, balances => {\n        const balancesMap = addresses.reduce((acc, address, index) => ({\n          ...acc, [address]: balances[index].data.free.toHuman()\n        }), {})\n        setBalances(balancesMap)\n      }).then(unsub => {\n        unsubscribeAll = unsub\n      }).catch(console.error)\n\n    return () => unsubscribeAll && unsubscribeAll()\n  }, [api, keyring, setBalances])\n\n  return (\n    <Grid.Column>\n      <h1>Balances</h1>\n      <Table celled striped size='small'>\n        <Table.Body>{accounts.map(account =>\n          <Table.Row key={account.address}>\n            <Table.Cell width={3} textAlign='right'>{account.meta.name}</Table.Cell>\n            <Table.Cell width={10}>\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\n                {account.address}\n              </span>\n              <CopyToClipboard text={account.address}>\n                <Button\n                  basic\n                  circular\n                  compact\n                  size='mini'\n                  color='blue'\n                  icon='copy outline'\n                />\n              </CopyToClipboard>\n            </Table.Cell>\n            <Table.Cell width={3}>{\n              balances && balances[account.address] &&\n              balances[account.address]\n            }</Table.Cell>\n          </Table.Row>\n        )}\n        </Table.Body>\n      </Table>\n    </Grid.Column>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const { finalized } = props\n  const [blockNumber, setBlockNumber] = useState(0)\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0)\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber\n\n  useEffect(() => {\n    let unsubscribeAll = null\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber())\n      setBlockNumberTimer(0)\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub\n      })\n      .catch(console.error)\n\n    return () => unsubscribeAll && unsubscribeAll()\n  }, [bestNumber])\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1)\n  }\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000)\n    return () => clearInterval(id)\n  }, [])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate()\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized\n    ? (\n      <Main {...props} />\n      )\n    : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Feed, Grid, Button } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\n// Events to be filtered from feed\nconst FILTERED_EVENTS = [\n  'system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":0})',\n  'system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":1})'\n]\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [eventFeed, setEventFeed] = useState([])\n\n  useEffect(() => {\n    let unsub = null\n    const allEvents = async () => {\n      unsub = await api.query.system.events(events => {\n        // loop through the Vec<EventRecord>\n        events.forEach(record => {\n          // extract the phase, event and the event types\n          const { event, phase } = record\n          const types = event.typeDef\n\n          // show what we are busy with\n          const eventName = `${event.section}:${\n            event.method\n          }:: (phase=${phase.toString()})`\n\n          if (FILTERED_EVENTS.includes(eventName)) return\n\n          // loop through each of the parameters, displaying the type and data\n          const params = event.data.map(\n            (data, index) => `${types[index].type}: ${data.toString()}`\n          )\n\n          setEventFeed(e => [{\n            icon: 'bell',\n            summary: `${eventName}-${e.length}`,\n            extraText: event.meta.docs.join(', ').toString(),\n            content: params.join(', ')\n          }, ...e])\n        })\n      })\n    }\n\n    allEvents()\n    return () => unsub && unsub()\n  }, [api.query.system])\n\n  const { feedMaxHeight = 250 } = props\n\n  return (\n    <Grid.Column width={8}>\n      <h1 style={{ float: 'left' }}>Events</h1>\n      <Button\n        basic circular\n        size='mini'\n        color='grey'\n        floated='right'\n        icon='erase'\n        onClick={ _ => setEventFeed([]) }\n      />\n      <Feed style={{ clear: 'both', overflow: 'auto', maxHeight: feedMaxHeight }} events={eventFeed} />\n    </Grid.Column>\n  )\n}\n\nexport default function Events (props) {\n  const { api } = useSubstrate()\n  return api.query && api.query.system && api.query.system.events\n    ? (\n    <Main {...props} />\n      )\n    : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Grid, Form, Dropdown, Input, Label } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\nimport { TxButton, TxGroupButton } from './substrate-lib/components'\n\nconst argIsOptional = (arg) =>\n  arg.type.toString().startsWith('Option<')\n\nfunction Main (props) {\n  const { api, jsonrpc } = useSubstrate()\n  const { accountPair } = props\n  const [status, setStatus] = useState(null)\n\n  const [interxType, setInterxType] = useState('EXTRINSIC')\n  const [palletRPCs, setPalletRPCs] = useState([])\n  const [callables, setCallables] = useState([])\n  const [paramFields, setParamFields] = useState([])\n\n  const initFormState = {\n    palletRpc: '',\n    callable: '',\n    inputParams: []\n  }\n\n  const [formState, setFormState] = useState(initFormState)\n  const { palletRpc, callable, inputParams } = formState\n\n  const getApiType = (api, interxType) => {\n    if (interxType === 'QUERY') {\n      return api.query\n    } else if (interxType === 'EXTRINSIC') {\n      return api.tx\n    } else if (interxType === 'RPC') {\n      return api.rpc\n    } else {\n      return api.consts\n    }\n  }\n\n  const updatePalletRPCs = () => {\n    if (!api) { return }\n    const apiType = getApiType(api, interxType)\n    const palletRPCs = Object.keys(apiType).sort()\n      .filter(pr => Object.keys(apiType[pr]).length > 0)\n      .map(pr => ({ key: pr, value: pr, text: pr }))\n    setPalletRPCs(palletRPCs)\n  }\n\n  const updateCallables = () => {\n    if (!api || palletRpc === '') { return }\n    const callables = Object.keys(getApiType(api, interxType)[palletRpc]).sort()\n      .map(c => ({ key: c, value: c, text: c }))\n    setCallables(callables)\n  }\n\n  const updateParamFields = () => {\n    if (!api || palletRpc === '' || callable === '') {\n      setParamFields([])\n      return\n    }\n\n    let paramFields = []\n\n    if (interxType === 'QUERY') {\n      const metaType = api.query[palletRpc][callable].meta.type\n      if (metaType.isPlain) {\n        // Do nothing as `paramFields` is already set to []\n      } else if (metaType.isMap) {\n        paramFields = [{\n          name: metaType.asMap.key.toString(),\n          type: metaType.asMap.key.toString(),\n          optional: false\n        }]\n      } else if (metaType.isDoubleMap) {\n        paramFields = [{\n          name: metaType.asDoubleMap.key1.toString(),\n          type: metaType.asDoubleMap.key1.toString(),\n          optional: false\n        }, {\n          name: metaType.asDoubleMap.key2.toString(),\n          type: metaType.asDoubleMap.key2.toString(),\n          optional: false\n        }]\n      }\n    } else if (interxType === 'EXTRINSIC') {\n      const metaArgs = api.tx[palletRpc][callable].meta.args\n\n      if (metaArgs && metaArgs.length > 0) {\n        paramFields = metaArgs.map(arg => ({\n          name: arg.name.toString(),\n          type: arg.type.toString(),\n          optional: argIsOptional(arg)\n        }))\n      }\n    } else if (interxType === 'RPC') {\n      let metaParam = []\n\n      if (jsonrpc[palletRpc] && jsonrpc[palletRpc][callable]) {\n        metaParam = jsonrpc[palletRpc][callable].params\n      }\n\n      if (metaParam.length > 0) {\n        paramFields = metaParam.map(arg => ({\n          name: arg.name,\n          type: arg.type,\n          optional: arg.isOptional || false\n        }))\n      }\n    } else if (interxType === 'CONSTANT') {\n      paramFields = []\n    }\n\n    setParamFields(paramFields)\n  }\n\n  useEffect(updatePalletRPCs, [api, interxType])\n  useEffect(updateCallables, [api, interxType, palletRpc])\n  useEffect(updateParamFields, [api, interxType, palletRpc, callable, jsonrpc])\n\n  const onPalletCallableParamChange = (_, data) => {\n    setFormState(formState => {\n      let res\n      const { state, value } = data\n      if (typeof state === 'object') {\n        // Input parameter updated\n        const { ind, paramField: { type } } = state\n        const inputParams = [...formState.inputParams]\n        inputParams[ind] = { type, value }\n        res = { ...formState, inputParams }\n      } else if (state === 'palletRpc') {\n        res = { ...formState, [state]: value, callable: '', inputParams: [] }\n      } else if (state === 'callable') {\n        res = { ...formState, [state]: value, inputParams: [] }\n      }\n      return res\n    })\n  }\n\n  const onInterxTypeChange = (ev, data) => {\n    setInterxType(data.value)\n    // clear the formState\n    setFormState(initFormState)\n  }\n\n  const getOptionalMsg = (interxType) =>\n    interxType === 'RPC'\n      ? 'Optional Parameter'\n      : 'Leaving this field as blank will submit a NONE value'\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Pallet Interactor</h1>\n      <Form>\n        <Form.Group style={{ overflowX: 'auto' }} inline>\n          <label>Interaction Type</label>\n          <Form.Radio\n            label='Extrinsic'\n            name='interxType'\n            value='EXTRINSIC'\n            checked={interxType === 'EXTRINSIC'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label='Query'\n            name='interxType'\n            value='QUERY'\n            checked={interxType === 'QUERY'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label='RPC'\n            name='interxType'\n            value='RPC'\n            checked={interxType === 'RPC'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label='Constant'\n            name='interxType'\n            value='CONSTANT'\n            checked={interxType === 'CONSTANT'}\n            onChange={onInterxTypeChange}\n          />\n        </Form.Group>\n        <Form.Field>\n          <Dropdown\n            placeholder='Pallets / RPC'\n            fluid\n            label='Pallet / RPC'\n            onChange={onPalletCallableParamChange}\n            search\n            selection\n            state='palletRpc'\n            value={palletRpc}\n            options={palletRPCs}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            placeholder='Callables'\n            fluid\n            label='Callable'\n            onChange={onPalletCallableParamChange}\n            search\n            selection\n            state='callable'\n            value={callable}\n            options={callables}\n          />\n        </Form.Field>\n        {paramFields.map((paramField, ind) =>\n          <Form.Field key={`${paramField.name}-${paramField.type}`}>\n            <Input\n              placeholder={paramField.type}\n              fluid\n              type='text'\n              label={paramField.name}\n              state={{ ind, paramField }}\n              value={ inputParams[ind] ? inputParams[ind].value : '' }\n              onChange={onPalletCallableParamChange}\n            />\n            { paramField.optional\n              ? <Label\n                basic\n                pointing\n                color='teal'\n                content = { getOptionalMsg(interxType) }\n              />\n              : null\n            }\n          </Form.Field>\n        )}\n        <Form.Field style={{ textAlign: 'center' }}>\n          <InteractorSubmit\n            accountPair={accountPair}\n            setStatus={setStatus}\n            attrs={{ interxType, palletRpc, callable, inputParams, paramFields }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  )\n}\n\nfunction InteractorSubmit (props) {\n  const { attrs: { interxType } } = props\n  if (interxType === 'QUERY') {\n    return <TxButton\n      label = 'Query'\n      type = 'QUERY'\n      color = 'blue'\n      {...props}\n    />\n  } else if (interxType === 'EXTRINSIC') {\n    return <TxGroupButton {...props} />\n  } else if (interxType === 'RPC' || interxType === 'CONSTANT') {\n    return <TxButton\n      label = 'Submit'\n      type = {interxType}\n      color = 'blue'\n      {...props}\n    />\n  }\n}\n\nexport default function Interactor (props) {\n  const { api } = useSubstrate()\n  return api.tx ? <Main {...props} /> : null\n}\n","import React from 'react'\n\nconst IMAGES = {\n  accessory: [\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_1.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_2.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_3.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_4.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_5.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_6.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_7.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_8.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_9.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_10.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_11.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_12.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_13.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_14.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_15.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_16.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_17.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_18.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_19.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/accessorie_20.png`\n  ],\n  body: [\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_1.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_2.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_3.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_4.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_5.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_6.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_7.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_8.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_9.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_10.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_11.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_12.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_13.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_14.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/body_15.png`\n  ],\n  eyes: [\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_1.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_2.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_3.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_4.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_5.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_6.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_7.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_8.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_9.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_10.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_11.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_12.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_13.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_14.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/eyes_15.png`\n  ],\n  mouth: [\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_1.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_2.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_3.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_4.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_5.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_6.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_7.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_8.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_9.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/mouth_10.png`\n  ],\n  fur: [\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_1.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_2.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_3.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_4.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_5.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_6.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_7.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_8.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_9.png`,\n    `${process.env.PUBLIC_URL}/assets/KittyAvatar/fur_10.png`\n  ]\n}\n\nconst dnaToAttributes = dna => {\n  const attribute = (index, type) => IMAGES[type][dna[index] % IMAGES[type].length]\n\n  return {\n    body: attribute(0, 'body'),\n    eyes: attribute(1, 'eyes'),\n    accessory: attribute(2, 'accessory'),\n    fur: attribute(3, 'fur'),\n    mouth: attribute(4, 'mouth')\n  }\n}\n\nconst KittyAvatar = props => {\n  const outerStyle = { height: '160px', position: 'relative', width: '50%' }\n  const innerStyle = { height: '150px', position: 'absolute', top: '3%', left: '50%' }\n  const { dna } = props\n\n  if (!dna) return null\n\n  const cat = dnaToAttributes(dna)\n  return <div style={outerStyle}>\n    <img alt='body' src={cat.body} style={innerStyle} />\n    <img alt='fur' src={cat.fur} style={innerStyle} />\n    <img alt='mouth' src={cat.mouth} style={innerStyle} />\n    <img alt='eyes' src={cat.eyes} style={innerStyle} />\n    <img alt='accessory' src={cat.accessory} style={innerStyle} />\n  </div>\n}\n\nexport default KittyAvatar\n","import React from 'react'\nimport { Button, Card, Grid, Message, Modal, Form, Label } from 'semantic-ui-react'\n\nimport KittyAvatar from './KittyAvatar'\nimport { TxButton } from './substrate-lib/components'\n\n// --- About Modal ---\n\nconst TransferModal = props => {\n  const { kitty, accountPair, setStatus } = props\n  const [open, setOpen] = React.useState(false)\n  const [formValue, setFormValue] = React.useState({})\n\n  const formChange = key => (ev, el) => {\n    setFormValue({ ...formValue, [key]: el.value })\n  }\n\n  const confirmAndClose = (unsub) => {\n    unsub()\n    setOpen(false)\n  }\n\n  return <Modal onClose={() => setOpen(false)} onOpen={() => setOpen(true)} open={open}\n    trigger={<Button basic color='blue'>转让</Button>}>\n    <Modal.Header>毛孩转让</Modal.Header>\n    <Modal.Content><Form>\n      <Form.Input fluid label='毛孩 ID' readOnly value={kitty.id}/>\n      <Form.Input fluid label='转让对象' placeholder='对方地址' onChange={formChange('target')}/>\n    </Form></Modal.Content>\n    <Modal.Actions>\n      <Button basic color='grey' onClick={() => setOpen(false)}>取消</Button>\n      <TxButton\n        accountPair={accountPair} label='确认转让' type='SIGNED-TX' setStatus={setStatus}\n        onClick={confirmAndClose}\n        attrs={{\n          palletRpc: 'kittiesModule',\n          callable: 'transfer',\n          inputParams: [formValue.target, kitty.id],\n          paramFields: [true, true]\n        }}\n      />\n    </Modal.Actions>\n  </Modal>\n}\n\n// --- About Kitty Card ---\n\nconst KittyCard = props => {\n  const { kitty, accountPair, setStatus } = props\n  const { id = null, dna = null, owner = null } = kitty\n  const displayDna = dna && dna.join(', ')\n  const displayId = id === null ? '' : (id < 10 ? `0${id}` : id.toString())\n  const isSelf = accountPair.address === kitty.owner\n\n  return <Card>\n    { isSelf && <Label as='a' floating color='teal'>我的</Label> }\n    <KittyAvatar dna={dna} />\n    <Card.Content>\n      <Card.Header>ID 号: {displayId}</Card.Header>\n      <Card.Meta style={{ overflowWrap: 'break-word' }}>\n        基因: <br/>\n        {displayDna}\n      </Card.Meta>\n      <Card.Description>\n        <p style={{ overflowWrap: 'break-word' }}>\n          猫奴:<br/>\n          {owner}\n        </p>\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra style={{ textAlign: 'center' }}>{ owner === accountPair.address\n      ? <TransferModal kitty={kitty} accountPair={accountPair} setStatus={setStatus}/>\n      : ''\n    }</Card.Content>\n  </Card>\n}\n\nconst KittyCards = props => {\n  const { kitties, accountPair, setStatus } = props\n\n  if (kitties.length === 0) {\n    return <Message info>\n      <Message.Header>现在连一只毛孩都木有，赶快创建一只&nbsp;\n        <span role='img' aria-label='point-down'>👇</span>\n      </Message.Header>\n    </Message>\n  }\n\n  return <Grid columns={3}>{kitties.map((kitty, i) =>\n    <Grid.Column key={`kitty-${i}`}>\n      <KittyCard kitty={kitty} accountPair={accountPair} setStatus={setStatus}/>\n    </Grid.Column>\n  )}</Grid>\n}\n\nexport default KittyCards\n","import React, { useEffect, useState } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\nimport { TxButton } from './substrate-lib/components'\n\nimport KittyCards from './KittyCards'\n\nexport default function Kitties (props) {\n  const { api, keyring } = useSubstrate()\n  const { accountPair } = props\n\n  const [kitties, setKitties] = useState([])\n  const [status, setStatus] = useState('')\n\n  const fetchKitties = () => {\n    // TODO: 在这里调用 `api.query.kittiesModule.*` 函数去取得猫咪的信息。\n    // 你需要取得：\n    //   - 共有多少只猫咪\n    //   - 每只猫咪的主人是谁\n    //   - 每只猫咪的 DNA 是什么，用来组合出它的形态\n  }\n\n  const populateKitties = () => {\n    // TODO: 在这里添加额外的逻辑。你需要组成这样的数组结构：\n    //  ```javascript\n    //  const kitties = [{\n    //    id: 0,\n    //    dna: ...,\n    //    owner: ...\n    //  }, { id: ..., dna: ..., owner: ... }]\n    //  ```\n    // 这个 kitties 会传入 <KittyCards/> 然后对每只猫咪进行处理\n    const kitties = []\n    setKitties(kitties)\n  }\n\n  useEffect(fetchKitties, [api, keyring])\n  useEffect(populateKitties, [])\n\n  return <Grid.Column width={16}>\n    <h1>小毛孩</h1>\n    <KittyCards kitties={kitties} accountPair={accountPair} setStatus={setStatus}/>\n    <Form style={{ margin: '1em 0' }}>\n      <Form.Field style={{ textAlign: 'center' }}>\n        <TxButton\n          accountPair={accountPair} label='创建小毛孩' type='SIGNED-TX' setStatus={setStatus}\n          attrs={{\n            palletRpc: 'kittiesModule',\n            callable: 'create',\n            inputParams: [],\n            paramFields: []\n          }}\n        />\n      </Form.Field>\n    </Form>\n    <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n  </Grid.Column>\n}\n","import React, { useEffect, useState } from 'react'\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [metadata, setMetadata] = useState({ data: null, version: null })\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      try {\n        const data = await api.rpc.state.getMetadata()\n        setMetadata({ data, version: data.version })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getMetadata()\n  }, [api.rpc.state])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>Metadata</Card.Header>\n          <Card.Meta>\n            <span>v{metadata.version}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <Modal trigger={<Button>Show Metadata</Button>}>\n            <Modal.Header>Runtime Metadata</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <pre>\n                  <code>{JSON.stringify(metadata.data, null, 2)}</code>\n                </pre>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function Metadata (props) {\n  const { api } = useSubstrate()\n  return api.rpc && api.rpc.state && api.rpc.state.getMetadata\n    ? (\n    <Main {...props} />\n      )\n    : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Card, Icon, Grid } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [nodeInfo, setNodeInfo] = useState({})\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ])\n        setNodeInfo({ chain, nodeName, nodeVersion })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getInfo()\n  }, [api.rpc.system])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>\n            Built using the{' '}\n            <a href='https://github.com/substrate-developer-hub/substrate-front-end-template'>\n              Substrate Front End Template\n            </a>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate()\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version\n    ? (\n      <Main {...props} />\n      )\n    : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Form, Input, Grid, Card, Statistic } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\nimport { TxButton } from './substrate-lib/components'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const { accountPair } = props\n\n  // The transaction submission status\n  const [status, setStatus] = useState('')\n\n  // The currently stored value\n  const [currentValue, setCurrentValue] = useState(0)\n  const [formValue, setFormValue] = useState(0)\n\n  useEffect(() => {\n    let unsubscribe\n    api.query.templateModule.something(newValue => {\n      // The storage value is an Option<u32>\n      // So we have to check whether it is None first\n      // There is also unwrapOr\n      if (newValue.isNone) {\n        setCurrentValue('<None>')\n      } else {\n        setCurrentValue(newValue.unwrap().toNumber())\n      }\n    }).then(unsub => {\n      unsubscribe = unsub\n    })\n      .catch(console.error)\n\n    return () => unsubscribe && unsubscribe()\n  }, [api.query.templateModule])\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Template Module</h1>\n      <Card centered>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label='Current Value'\n            value={currentValue}\n          />\n        </Card.Content>\n      </Card>\n      <Form>\n        <Form.Field>\n          <Input\n            label='New Value'\n            state='newValue'\n            type='number'\n            onChange={(_, { value }) => setFormValue(value)}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Store Something'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'templateModule',\n              callable: 'doSomething',\n              inputParams: [formValue],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  )\n}\n\nexport default function TemplateModule (props) {\n  const { api } = useSubstrate()\n  return (api.query.templateModule && api.query.templateModule.something\n    ? <Main {...props} />\n    : null)\n}\n","import React, { useState } from 'react'\nimport { Form, Input, Grid, Label, Icon } from 'semantic-ui-react'\nimport { TxButton } from './substrate-lib/components'\n\nexport default function Main (props) {\n  const [status, setStatus] = useState(null)\n  const [formState, setFormState] = useState({ addressTo: null, amount: 0 })\n  const { accountPair } = props\n\n  const onChange = (_, data) =>\n    setFormState(prev => ({ ...prev, [data.state]: data.value }))\n\n  const { addressTo, amount } = formState\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Transfer</h1>\n      <Form>\n        <Form.Field>\n          <Label basic color='teal'>\n            <Icon name='hand point right' />\n            1 Unit = 1000000000000\n          </Label>\n        </Form.Field>\n        <Form.Field>Transfer more than the existential amount for account with 0 balance</Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label='To'\n            type='text'\n            placeholder='address'\n            state='addressTo'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label='Amount'\n            type='number'\n            state='amount'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Submit'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'balances',\n              callable: 'transfer',\n              inputParams: [addressTo, amount],\n              paramFields: [true, true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  )\n}\n","import React, { useState } from 'react'\nimport { Form, Input, Grid } from 'semantic-ui-react'\nimport { TxButton } from './substrate-lib/components'\n\nexport default function Main (props) {\n  const [status, setStatus] = useState('')\n  const [proposal, setProposal] = useState({})\n  const { accountPair } = props\n\n  const bufferToHex = buffer => {\n    return Array.from(new Uint8Array(buffer))\n      .map(b => b.toString(16).padStart(2, '0'))\n      .join('')\n  }\n\n  const handleFileChosen = file => {\n    const fileReader = new FileReader()\n    fileReader.onloadend = e => {\n      const content = bufferToHex(fileReader.result)\n      setProposal(`0x${content}`)\n    }\n\n    fileReader.readAsArrayBuffer(file)\n  }\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Upgrade Runtime</h1>\n      <Form>\n        <Form.Field>\n          <Input\n            type='file'\n            id='file'\n            label='Wasm File'\n            accept='.wasm'\n            onChange={e => handleFileChosen(e.target.files[0])}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Upgrade'\n            type='UNCHECKED-SUDO-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'system',\n              callable: 'setCode',\n              inputParams: [proposal],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  )\n}\n","import React, { useState, createRef } from 'react'\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib'\nimport { DeveloperConsole } from './substrate-lib/components'\n\nimport AccountSelector from './AccountSelector'\nimport Balances from './Balances'\nimport BlockNumber from './BlockNumber'\nimport Events from './Events'\nimport Interactor from './Interactor'\nimport Kitties from './Kitties'\nimport Metadata from './Metadata'\nimport NodeInfo from './NodeInfo'\nimport TemplateModule from './TemplateModule'\nimport Transfer from './Transfer'\nimport Upgrade from './Upgrade'\n\nfunction Main () {\n  const [accountAddress, setAccountAddress] = useState(null)\n  const { apiState, keyring, keyringState, apiError } = useSubstrate()\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress)\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${JSON.stringify(err, null, 4)}`}\n        />\n      </Grid.Column>\n    </Grid>\n\n  if (apiState === 'ERROR') return message(apiError)\n  else if (apiState !== 'READY') return loader('Connecting to Substrate')\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)')\n  }\n\n  const contextRef = createRef()\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <AccountSelector setAccountAddress={setAccountAddress} />\n      </Sticky>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Balances />\n          </Grid.Row>\n          <Grid.Row>\n            <Transfer accountPair={accountPair} />\n            <Upgrade accountPair={accountPair} />\n          </Grid.Row>\n          <Grid.Row>\n            <Interactor accountPair={accountPair} />\n            <Events />\n          </Grid.Row>\n          <Grid.Row>\n            <TemplateModule accountPair={accountPair} />\n          </Grid.Row>\n          <Grid.Row>\n            <Kitties accountPair={accountPair} />\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  )\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}